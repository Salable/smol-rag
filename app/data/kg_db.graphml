<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d7" for="edge" attr.name="excerpt_id" attr.type="string" />
  <key id="d6" for="edge" attr.name="weight" attr.type="double" />
  <key id="d5" for="edge" attr.name="keywords" attr.type="string" />
  <key id="d4" for="edge" attr.name="description" attr.type="string" />
  <key id="d3" for="node" attr.name="excerpt_id" attr.type="string" />
  <key id="d2" for="node" attr.name="description" attr.type="string" />
  <key id="d1" for="node" attr.name="category" attr.type="string" />
  <key id="d0" for="graph" attr.name="content_keywords" attr.type="string" />
  <graph edgedefault="undirected">
    <node id="Checkout">
      <data key="d1">function:|:feature:|:component</data>
      <data key="d2">Checkout is a web component feature designed for transaction processes, which users can integrate as outlined in its documentation.:|:Checkout is a feature that enables users to process payments using Stripe, showcasing various API functionalities including creating intents.:|:Checkout is a web component that allows users to manage sessions and transactions within a web application.:|:The Checkout component enables users to purchase a paid subscription plan directly through the interface.:|:Checkout is related to operations that facilitate the checkout process in the system, including finalizing purchases.:|:Checkout is a feature that facilitates the process of subscription creation and payment handling within the Stripe API ecosystem.:|:Checkout feature is concerned with operations related to processing checkout transactions.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_06e17d56e4842e103630578061ddccad:|:excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c:|:excerpt_id_9a944ddc3dfa0bec820becd08962062d:|:excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab:|:excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </node>
    <node id="Salable API">
      <data key="d1">api</data>
      <data key="d2">The Salable API is a programming interface that allows developers to manage subscriptions and related functionalities through the Salable SDKs, ensuring proper handling and avoidance of issues.:|:The Salable API is an interface for creating sessions and managing web components, enabling integration in web applications.:|:The Salable API provides various operations, including creating session tokens and managing web components.:|:The Salable API provides programmatic access to create sessions and manage components, facilitating integration into web applications.:|:Salable API is an application programming interface that provides endpoints for managing licenses, subscriptions, and their attributes.:|:The Salable API provides functionality for managing licenses, including methods for creating, updating, and retrieving license information.:|:The Salable API is an interface that allows users to create and manage sessions for web components, particularly for pricing tables.:|:The Salable API is an application programming interface that allows developers to interact with the Salable platform, enabling tasks such as session creation and management for web components.:|:The Salable API is an application programming interface designed to serve endpoints that facilitate interactions and data access, with a focus on security and performance improvements in its version 2.:|:The Salable API allows for managing subscriptions, including upgrading and downgrading plans.:|:Salable API is a comprehensive RESTful API solution tailored for SaaS businesses, facilitating the management of pricing models, subscriptions, and licensing through structured endpoints.:|:The Salable API is a web service that allows users to create sessions for web components, facilitating integration with other applications.</data>
      <data key="d3">excerpt_id_94fb228ccda17239a53922fdeba71ddc:|:excerpt_id_06e17d56e4842e103630578061ddccad:|:excerpt_id_c08dee207a93dbeac363d048eb1567e4:|:excerpt_id_9a944ddc3dfa0bec820becd08962062d:|:excerpt_id_de8626e7234f5a3c62010de5ee420028:|:excerpt_id_1447c9ad088ee587d295240cee723646:|:excerpt_id_1b612f26a43928677dcf8db549d3101b:|:excerpt_id_6570345c98baaf7dba384cd0d59011cb:|:excerpt_id_a873e2cace623f12f690b112f35aa4f7:|:excerpt_id_761b7e7d2e80ea5581133a171250a211:|:excerpt_id_ee6311eda1a74d2cb86e7774e2dda643:|:excerpt_id_fbb88f35eb8a656df79436055d95db83</data>
    </node>
    <node id="Session Token">
      <data key="d1">variable</data>
      <data key="d2">A Session Token is a unique identifier required to establish a session with the Salable API, enabling secure interactions with web components.:|:Session Tokens are used for authenticating users and granting access to specific resources, crucial for maintaining security.:|:Session Token is a unique identifier used for authenticating and managing user sessions within the Salable API.:|:Session Token is a dynamically created credential used for maintaining a user's session within the Salable platform, essential for the functioning of the Cancellation Button feature.:|:A Session Token is a unique identifier generated by the Salable API, used for maintaining a user session within the pricing table web component.</data>
      <data key="d3">excerpt_id_94fb228ccda17239a53922fdeba71ddc:|:excerpt_id_9a944ddc3dfa0bec820becd08962062d:|:excerpt_id_1b612f26a43928677dcf8db549d3101b:|:excerpt_id_761b7e7d2e80ea5581133a171250a211:|:excerpt_id_fbb88f35eb8a656df79436055d95db83</data>
    </node>
    <node id="YOUR_SALABLE_API_TOKEN">
      <data key="d1">variable</data>
      <data key="d2">YOUR_SALABLE_API_TOKEN is a placeholder for the actual API key required to authenticate requests to the Salable API.</data>
      <data key="d3">excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </node>
    <node id="Plan UUID">
      <data key="d1">variable</data>
      <data key="d2">Plan UUID is a variable used to filter licenses by their associated plan, formatted as a UUID.:|:Plan UUID is a unique identifier that represents a subscription plan in the context of the Salable API.</data>
      <data key="d3">excerpt_id_2803692fca51400dad72f2a2a41f66b4:|:excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </node>
    <node id="Salable Checkout Web Component Example">
      <data key="d1">example</data>
      <data key="d2">Salable Checkout Web Component Example demonstrates how to use the checkout feature in conjunction with HTML and JavaScript.</data>
      <data key="d3">excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </node>
    <node id="Define Custom Elements">
      <data key="d1">function</data>
      <data key="d2">Define Custom Elements is a function that initializes and registers the custom elements required for the Salable web components.</data>
      <data key="d3">excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </node>
    <node id="salable-checkout">
      <data key="d1">component:|:interface</data>
      <data key="d2">salable-checkout is a custom HTML element that represents the checkout interface for completing transactions. It utilizes attributes for configuration.:|:salable-checkout is a web component used for processing checkout transactions with various parameters including session token, plan UUID, and currency.</data>
      <data key="d3">excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5:|:excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </node>
    <node id="Salable">
      <data key="d1">configuration:|:software:|:interface:|:organization:|:feature:|:api:|:platform</data>
      <data key="d2">Salable is an API provided by the '@salable/node-sdk' that allows interactions with licenses, including updating multiple licenses at once.:|:Salable is an API that provides functionalities related to products, allowing users to retrieve features and other product details.:|:Salable is a platform that allows users to configure products, manage user licenses, and implement various billing strategies.:|:Salable is the interface provided by the Salable SDK that allows interactions with various subscription management features, including cancellation.:|:Salable is an API that provides functionality for managing licenses, allowing updates to license details through specific requests.:|:Salable is an API that facilitates operations related to products, allowing users to retrieve pricing tables among other functionalities.:|:Salable is the platform providing pricing table functionality, allowing users to design and generate display code for pricing tables.:|:Salable is an organization providing a node SDK that facilitates interactions with their API, including the retrieval of currency data.:|:Salable is an API that allows developers to manage licenses programmatically, providing functions to update license details.:|:Salable is an API provided for managing subscriptions, allowing users to interact with subscription data for their organization.:|:Salable is an API that offers functionality for product creation, allowing users to manage capabilities, features, plans, pricing tables, licenses, payment integrations, webhooks, and API keys especially in Test Mode.:|:Salable is an application programming interface designed to integrate applications with chosen payment providers, offering flexibility in pricing structures and customer options.:|:Salable is an API that allows developers to manage subscriptions and payment links programmatically.:|:Salable is a feature that enables businesses to integrate payment solutions, enhancing their sales capabilities.:|:Salable is an API that provides functionality to interact with plans and their associated capabilities using various methods.:|:Salable is an API from the '@salable/node-sdk' package that allows for managing subscriptions, including operations such as removing seats from a subscription.:|:Salable is an API that allows interaction with product data, requiring API keys for authentication and providing functionality for product management.:|:Salable is an API or platform that facilitates account creation and management for teams, allowing users to sign up and access services through individual accounts.:|:Salable is an API design used within Node.js for handling licensing checks and capabilities.:|:Salable is an application programming interface (API) that allows developers to interact with subscription data, specifically to retrieve details about a single subscription.:|:Salable is an API used for managing subscriptions and related tasks, including adding seats to subscriptions.:|:Salable is an API provided by the Salable SDK that allows users to manage licenses and other functionalities.:|:Salable is an API that provides functionalities for managing subscriptions, such as adding or removing seats for users.:|:Salable is the API interface used to interact with subscription services, enabling functionalities such as subscription cancellation based on provided parameters.:|:Salable is an API that provides functionalities for managing licenses and various operations associated with it.:|:Salable is an API used for managing subscription services, offering functionality to retrieve subscription payment details.:|:Salable is an API designed for integrating applications with payment providers, offering flexibility in pricing structures and customer options.:|:Salable is a node SDK that provides functionalities for managing licenses, including the ability to cancel multiple licenses through its methods.:|:Salable is a software tool that allows users to manage and view licenses issued for various products.:|:Salable is an application or service that requires an API key for access, indicating its reliance on this key for security and user identification.:|:Salable is an API that enables interactions with subscription functionalities, including canceling subscriptions through its methods and configurations.:|:Salable is an API that enables operations related to subscription management, and is used here to facilitate the removal of subscription seats.:|:Salable is an API that facilitates payment processing and link generation for different programming environments including JavaScript and Node.js.:|:Salable is an API that allows users to manage licenses, including the ability to cancel them using their UUIDs.:|:Salable is an API that allows developers to interact with license data, providing functionality such as counting licenses based on specified filters.:|:Salable is an API that provides functionality for creating sessions with web components, facilitating various operations within its ecosystem.:|:Salable is an API that allows interactions with various products, requiring an API key for authentication.:|:Salable is an API that allows users to create and manage licenses programmatically using provided keys and parameters.:|:Salable is an API that provides tools for developers, allowing them to integrate and set up services effectively.:|:Salable is an API that provides access to functionalities related to products and services within a Salable organization, enabling developers to interact with the platform.:|:Salable is an API that facilitates interactions, in this case, providing access to product capabilities through various functions.:|:Salable is the application programming interface that offers various functionalities, including Test Mode for users to create and test products.:|:Salable is an API service that facilitates e-commerce transactions by providing functionalities like generating checkout links for subscription plans.:|:Salable is an API that provides functionality related to managing subscriptions, allowing users to update properties of subscriptions with API calls.:|:Salable is an API used to manage subscriptions and billing within a specific application context.:|:Salable is an API that provides functionality for managing licenses, accessed using a specific API key and versioning information.:|:Salable is an API used for managing subscriptions and invoices, offering functionality through a specific SDK.:|:Salable is an API service designed for managing licenses, providing functionality to update usage counts on licenses.:|:Salable is a platform that manages plans, features, and capabilities for applications, offering a structured approach to user authorisation.:|:Salable is an API that allows users to interact with the licensing features of the Salable platform through various functions.:|:Salable is an API that allows interactions with various pricing functionalities, requiring an API key for access.:|:Salable is a platform designed for selling applications, allowing integration of payment systems and customization of customer plans.:|:Salable is an API used for managing licenses, providing functionalities to retrieve specific license information.:|:Salable is the organization that provides the Grantee System, offering tools for managing licenses and functionality access within applications.:|:Salable is a platform that offers capabilities to create and manage plans with defined features and options for customers.:|:Salable is an API provided by Salable that facilitates interactions with the product plans through its endpoints.:|:Salable is an API that facilitates the creation of ad hoc licenses for users within an organization using specific input parameters.:|:Salable is an API that connects to a node SDK, enabling retrieval of features associated with plans in a specific format.:|:Salable is an API that provides functionalities for managing subscriptions, including changing subscription plans.:|:Salable is an API that provides various functionalities in the context of subscription management, allowing interactions such as reactivating subscriptions.:|:Salable is a node SDK that enables interaction with Salable's API, facilitating various operations such as checking licenses.:|:Salable is an API provided by Salable that allows users to interact with various resources, including plans, using an API key.:|:Salable is an API used to interact with subscription services in a programmatic way, specifically within the example provided, showcasing its use in obtaining subscription details.:|:Salable is an API that enables interaction with the licensing system, providing methods to retrieve licenses based on various parameters.:|:Salable is an API used in the provided code sample to interact with subscription-related functionalities in the system.:|:Salable is an application programming interface that allows users to manage team member access and permissions within an organisational dashboard.:|:Salable is a platform that integrates with payment providers like Stripe to facilitate payment processing for businesses.:|:Salable is an API that allows developers to interact with metered licenses, requiring an API key for authentication.:|:Salable is an API that allows developers to interact with metered licenses and usage records.:|:Salable is an interface in the '@salable/node-sdk' library that facilitates interaction with the Salable API, requiring an API key for access.:|:Salable is an API that facilitates interaction with the Salable service, allowing users to perform various operations including retrieving events.</data>
      <data key="d3">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb:|:excerpt_id_8df36f78ea176c6bcbef6fd852df56e5:|:excerpt_id_5054bb85ceb11e7cd95222d0fffc6476:|:excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_af891ba93357fd6013d5bbd53f638736:|:excerpt_id_2cd46a574579b7b43c3f957d890e1c25:|:excerpt_id_d979fc2428d484e09ae3b62b942d5968:|:excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d:|:excerpt_id_e030f342082b40970042b8abc1e01c3a:|:excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4:|:excerpt_id_9e7d62a87ad119e8af876e0901542e69:|:excerpt_id_03a1e0b7542d58580d2e6e791794e576:|:excerpt_id_93d0cd6095f34cb94d3af52c681f6f6b:|:excerpt_id_5f94c3a04c280fb20bcd425bb5880a08:|:excerpt_id_eb980ddfe99dddb529d8107a56a3e090:|:excerpt_id_cb965cbdb5538866a79f985d89308954:|:excerpt_id_ec8853c4684794f440831d669649c3b8:|:excerpt_id_4084123f56be759c3a4de2c2abd2e01d:|:excerpt_id_f45958815097879415986e68ae21cbba:|:excerpt_id_a78cd4046bc4c2cd90d128228e28893d:|:excerpt_id_7f708cd18160447dd54fdd10c6e9203e:|:excerpt_id_889335c292df0ac0fb3417eda2e436b9:|:excerpt_id_af600649bc560ccce1729a149fdba460:|:excerpt_id_0605f5987dc662b127cbcde1ca896ece:|:excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb:|:excerpt_id_b48f747b61cda7dfebb331b0fdd6525d:|:excerpt_id_fde1d0189eaa75074956787efcc59cec:|:excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce:|:excerpt_id_d96e80b895dea6915b51ebb69acff797:|:excerpt_id_957a53aebe179fef047e927dd691f8e1:|:excerpt_id_986393e22f5effe04fced6469538c6a8:|:excerpt_id_e8114e81957601460a88df02adf09794:|:excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c:|:excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2:|:excerpt_id_431115802905d2582e7883b3b0c33bf9:|:excerpt_id_38026b862e04409b6fbda7aa7728c287:|:excerpt_id_a4b8e11006d615b209673feede32f6c5:|:excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2:|:excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f:|:excerpt_id_99827a02251fd259a13d407966db3096:|:excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00:|:excerpt_id_fabc937abc8c4367253839f749f33317:|:excerpt_id_413bf83a1f6433b1357024badf84fc52:|:excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd:|:excerpt_id_43aad08feabcefa292e03d2681262e0b:|:excerpt_id_4a229833547e95024c6779c45ca44d74:|:excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d:|:excerpt_id_09329d7ae662ecf72d3d964190506555:|:excerpt_id_310437ff88c214d922e257631db6a72d:|:excerpt_id_75226dd1c0681dee658c82abefbedb30:|:excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7:|:excerpt_id_e6d45aa0665fc0645841e246e19a8aee:|:excerpt_id_7f2c8e47d35bb9218308b14f91edc663:|:excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0:|:excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b:|:excerpt_id_9f79e3a1bec25332acbb8c2bde410424:|:excerpt_id_ddaf4e6518a73006b4437f10458e27ba:|:excerpt_id_58ff1c48dee01d0183a336f780b53149:|:excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3:|:excerpt_id_3e7d435b3bee1520f4473a125ea800e1:|:excerpt_id_b0d99f3af716852d9f2a0d8e9d551113:|:excerpt_id_a3e10272ea78f4d7722234027bb8e4bc:|:excerpt_id_74b2b33402d8e1fd884f911b29d71f78:|:excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a:|:excerpt_id_15ef1834aa3a1da2af8e9952509255a2:|:excerpt_id_a019e4a9249294b3ee673d179bd32d72:|:excerpt_id_d9c1267809cd58cbd21415af67a458ab:|:excerpt_id_c260728e1de323aa7fe6e522b249a64f:|:excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </node>
    <node id="Pro Plan">
      <data key="d1">configuration:|:feature</data>
      <data key="d2">Pro Plan refers to a subscription tier in Salable that includes access to specific features like 'Export CSV'.:|:Pro Plan is an upgraded subscription plan that includes additional features compared to the Basic Plan.</data>
      <data key="d3">excerpt_id_99827a02251fd259a13d407966db3096:|:excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </node>
    <node id="Export CSV">
      <data key="d1">feature</data>
      <data key="d2">Export CSV is a feature that allows users to export data into a CSV format, with varying availability across different plans.:|:Export CSV is a feature in Salable that is only accessible to users subscribed to the Pro Plan, which illustrates user access based on subscription levels.</data>
      <data key="d3">excerpt_id_99827a02251fd259a13d407966db3096:|:excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </node>
    <node id="Granular Approach">
      <data key="d1">concept</data>
      <data key="d2">Granular Approach refers to the recommended method of authorising users in Salable, focusing on feature-level access instead of plan-level access.</data>
      <data key="d3">excerpt_id_99827a02251fd259a13d407966db3096</data>
    </node>
    <node id="Capabilities">
      <data key="d1">variable:|:feature</data>
      <data key="d2">Capabilities refer to the various functionalities and features available within the system, including specific attributes such as capability types.:|:Capabilities is a variable representing an array of capability items that describe the features available to a purchaser.:|:Capabilities are bespoke functionalities that do not require predefined values for each plan and are attached to specific customer needs.:|:Capabilities are additional functionalities that can be added to a product to enhance its offering.:|:Capabilities refer to the various functionalities or features that a product can offer, which can be managed and deprecated as necessary.:|:Capabilities define functionalities that are available across all plans and can be easily turned on and off without the need for an API call.:|:Capabilities in Salable describe the various functionalities or features that can be enabled or disabled based on user authorisation.</data>
      <data key="d3">excerpt_id_26398496b4725d2ebb6afc8f67da70c0:|:excerpt_id_99827a02251fd259a13d407966db3096:|:excerpt_id_889335c292df0ac0fb3417eda2e436b9:|:excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0:|:excerpt_id_b672ed1c3e3680e80873b4a4ba2d3012:|:excerpt_id_9516a99c40383674c2274db86035bea6:|:excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </node>
    <node id="Node SDK">
      <data key="d1">interface</data>
      <data key="d2">The Node SDK is a software development kit that provides HTTP endpoints and facilitates communication between the application and the Salable API.</data>
      <data key="d3">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00</data>
    </node>
    <node id="API_KEY">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">API_KEY is a required variable that must be replaced with the user's actual API key in order to authenticate API requests.:|:API_KEY is a placeholder for the actual API key used to authenticate requests to the Salable API.:|:API_KEY is a variable that represents the authentication key required to access the Salable API services securely.:|:API_KEY is a placeholder used to authenticate and authorize API requests made to the Salable API.:|:API_KEY is a required variable for authentication while using the Salable API.:|:API_KEY is a placeholder for the authentication key required to access the Salable API.:|:API_KEY is a variable needed for authentication to access Salable API resources.:|:API_KEY is a configuration setting required for authenticating requests to the Salable API.:|:API_KEY is a placeholder for the user's API key, required for authentication in the Salable SDK.:|:API_KEY is a variable that is used for authentication when instantiating the Salable class, ensuring secure access to the API.:|:API_KEY is a placeholder for the authentication key required to access the Salable API services.</data>
      <data key="d3">excerpt_id_a78cd4046bc4c2cd90d128228e28893d:|:excerpt_id_38026b862e04409b6fbda7aa7728c287:|:excerpt_id_9f79e3a1bec25332acbb8c2bde410424:|:excerpt_id_a4b8e11006d615b209673feede32f6c5:|:excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00:|:excerpt_id_413bf83a1f6433b1357024badf84fc52:|:excerpt_id_e030f342082b40970042b8abc1e01c3a:|:excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d:|:excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d:|:excerpt_id_310437ff88c214d922e257631db6a72d:|:excerpt_id_75226dd1c0681dee658c82abefbedb30</data>
    </node>
    <node id="Stripe">
      <data key="d1">configuration:|:api</data>
      <data key="d2">Stripe is a payment processing platform that allows businesses to accept payments and manage transactions online.:|:Stripe is a payment provider that can be connected to Salable to facilitate payment integrations.:|:Stripe is a payment processing platform that can be connected to Salable for handling transactions, providing additional integration options.</data>
      <data key="d3">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00:|:excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c:|:excerpt_id_986393e22f5effe04fced6469538c6a8</data>
    </node>
    <node id="Salable Account">
      <data key="d1">configuration:|:api</data>
      <data key="d2">Salable Account refers to the user profile needed to utilize the features of the Salable API service.:|:Salable Account is necessary to begin using the Salable API and allows users to create and manage their organization.:|:A Salable Account is an account created by users to access the Salable platform, providing them with a pre-configured API Key for integration.</data>
      <data key="d3">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00:|:excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c:|:excerpt_id_e92c83ab9e90ff89816fc1841452b9ce</data>
    </node>
    <node id="Salable Organization">
      <data key="d1">configuration</data>
      <data key="d2">Salable Organization is used to manage users and transactions associated with a Salable account.</data>
      <data key="d3">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00</data>
    </node>
    <node id="SDK Call">
      <data key="d1">function</data>
      <data key="d2">SDK Call refers to the operation of calling the Salable API via the Node SDK to perform actions such as creating products or plans.</data>
      <data key="d3">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00</data>
    </node>
    <node id="Grantee System">
      <data key="d1">feature</data>
      <data key="d2">The Grantee System facilitates access to functionality in a product by creating and managing licenses that define what features and capabilities can be accessed by various entities.</data>
      <data key="d3">excerpt_id_431115802905d2582e7883b3b0c33bf9</data>
    </node>
    <node id="License">
      <data key="d1">configuration:|:variable:|:example:|:feature:|:schema:|:api</data>
      <data key="d2">License is a schema component that outlines the details of a license, including its attributes and data structure.:|:License is a schema that defines the structure of license data returned in the API response.:|:License is associated with a Grantee, detailing the access permissions based on the relevant Plan as it pertains to the application's functionalities.:|:License is a representation of a permission granted to users for specific actions, which may include usage rights or subscription details.:|:License is referenced as a concept related to ad hoc licenses in the API documentation, where it plays a role in the cancelation process.:|:A License broadly describes what features and capabilities can be accessed and is associated with a unique identifier for an entity that it belongs to.:|:A License is a structured configuration that holds various properties relevant to the management of a product or service, including UUIDs and status definitions.:|:License is a schema representing a license object, detailing its attributes and structure within the system.:|:A License can have parameters such as grantee ID, which can be updated or suspended through the Salable Dashboard.:|:License refers to an authorization allowing specified granteeIds access to features, particularly in a software context.</data>
      <data key="d3">excerpt_id_431115802905d2582e7883b3b0c33bf9:|:excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4:|:excerpt_id_9a33a99f7264e4cca3eb424f6cfded53:|:excerpt_id_8949faee968ed6bf19c979f4b005a699:|:excerpt_id_49c1f925b9b823dbc869debcecd54227:|:excerpt_id_8f76cec6c3c5c205e09868b54019ae7b:|:excerpt_id_a8a1a1f7699cb50324dc4207ba11c6e6:|:excerpt_id_93a1bdd9071867235ec2537127127c00:|:excerpt_id_2803692fca51400dad72f2a2a41f66b4:|:excerpt_id_ed15282d717d6166fcb39ad94076c541</data>
    </node>
    <node id="Grantee">
      <data key="d1">concept:|:variable</data>
      <data key="d2">Grantee refers to the entity that a License is assigned to, which could vary in nature, including users, teams, organizations, or identifiable elements within the application.:|:The Grantee represents the entity that the license belongs to, which can be uniquely identified and may be a user, organization, or other entities in the system.:|:Grantee is an object that may have properties indicating licensing and subscription status related to the plan.</data>
      <data key="d3">excerpt_id_431115802905d2582e7883b3b0c33bf9:|:excerpt_id_8949faee968ed6bf19c979f4b005a699:|:excerpt_id_7661720ce3af8e047797addb307a930b</data>
    </node>
    <node id="User ID">
      <data key="d1">variable</data>
      <data key="d2">User ID is an example of a unique identifier that can be used as a Grantee to define the license holder in the system.</data>
      <data key="d3">excerpt_id_431115802905d2582e7883b3b0c33bf9</data>
    </node>
    <node id="Board ID">
      <data key="d1">variable</data>
      <data key="d2">Board ID is another example of a unique identifier that can serve as a Grantee for licenses assigned to specific boards.</data>
      <data key="d3">excerpt_id_431115802905d2582e7883b3b0c33bf9</data>
    </node>
    <node id="Cancellation Button">
      <data key="d1">feature:|:component</data>
      <data key="d2">Cancellation Button is a feature in the web components allowing clients to implement a mechanism for subscription cancellation in their applications.:|:The Cancellation Button component provides users with the functionality to cancel their subscriptions or licenses.:|:The Cancellation Button is a web component designed to facilitate cancellation actions within user interfaces, integrating with a backend API to manage session tokens effectively.</data>
      <data key="d3">excerpt_id_06e17d56e4842e103630578061ddccad:|:excerpt_id_94fb228ccda17239a53922fdeba71ddc:|:excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </node>
    <node id="request template">
      <data key="d1">configuration</data>
      <data key="d2">The request template provides a structured format to make requests to the Salable API for session creation, illustrating how to set parameters and handle responses.</data>
      <data key="d3">excerpt_id_94fb228ccda17239a53922fdeba71ddc</data>
    </node>
    <node id="Tabs">
      <data key="d1">function:|:component:|:feature:|:interface</data>
      <data key="d2">Tabs is a component used for creating tabbed navigation in a documentation interface, allowing users to switch between different content views.:|:Tabs is a user interface component that allows for the organization of content into separate sections, presenting them in a cohesive manner.:|:Tabs is a component that allows users to switch between different views or content areas within a UI.:|:Tabs is a feature that allows users to organize content into separate views, improving user navigation.:|:Tabs is a user interface component that allows users to switch between multiple views or sections, enhancing user experience in web applications.:|:Tabs is a user interface component that allows users to switch between different views or sections of content!:|:Tabs is a UI component that allows users to switch between different sections of content, enhancing user navigation.:|:Tabs is a user interface component that allows users to switch between different content panels, facilitating organized content management.:|:Tabs is a component used to create tabbed interfaces in the documentation, allowing the user to switch between different content options.:|:Tabs is an interface element used to organize content into separate sections, allowing users to toggle between different content areas within the documentation.:|:Tabs is a feature that allows displaying different content segments within the same space, enabling users to switch between different views easily.</data>
      <data key="d3">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2:|:excerpt_id_94fb228ccda17239a53922fdeba71ddc:|:excerpt_id_58ff1c48dee01d0183a336f780b53149:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd:|:excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_5ebe47a66fffe70faec5fc051e3e9666:|:excerpt_id_cb965cbdb5538866a79f985d89308954:|:excerpt_id_761b7e7d2e80ea5581133a171250a211:|:excerpt_id_ee6311eda1a74d2cb86e7774e2dda643:|:excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </node>
    <node id="TabItem">
      <data key="d1">interface:|:function:|:feature:|:component</data>
      <data key="d2">TabItem is a component associated with Tabs that represents an individual tab containing specific content relevant to a particular topic.:|:TabItem represents a UI component that allows for tab navigation, enabling the user to switch between different content representations.:|:TabItem is a component used within Tabs that represents a single tab in the tabbed interface.:|:TabItem is a component of Tabs that represents each individual tab, allowing users to select and view corresponding content.:|:TabItem is a child component of Tabs that represents a single tab with a label, enabling the display of content specific to that tab.:|:TabItem is a component used within the Tabs feature to represent individual tabs that can contain different content or views.:|:TabItem is a component that represents a single tab within the Tabs interface, containing content to be displayed when the tab is selected.:|:TabItem is a specific interface component used within Tabs that represents individual sections or views within the tabbed interface.:|:TabItem is a part of the Tabs interface that represents an individual section or grouping of content within the Tabs component.:|:TabItem is a component within the Tabs feature that represents an individual tab, each of which can hold content specific to it.:|:TabItem is a sub-component of Tabs that represents individual tabs, allowing users to navigate between different content sections.</data>
      <data key="d3">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2:|:excerpt_id_94fb228ccda17239a53922fdeba71ddc:|:excerpt_id_58ff1c48dee01d0183a336f780b53149:|:excerpt_id_da0a09d7dfdef3227e5234d284bf95ca:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd:|:excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_5ebe47a66fffe70faec5fc051e3e9666:|:excerpt_id_cb965cbdb5538866a79f985d89308954:|:excerpt_id_ee6311eda1a74d2cb86e7774e2dda643:|:excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </node>
    <node id="JavaScript">
      <data key="d1">example</data>
      <data key="d2">JavaScript is provided as an example for creating session tokens using the Salable API, demonstrating how to implement API calls in a web application.:|:An example code snippet in JavaScript showing how to fetch a session token from the Salable API for a pricing table.</data>
      <data key="d3">excerpt_id_94fb228ccda17239a53922fdeba71ddc:|:excerpt_id_fbb88f35eb8a656df79436055d95db83</data>
    </node>
    <node id="cURL">
      <data key="d1">configuration:|:api:|:example:|:interface</data>
      <data key="d2">cURL is another example demonstrating how to make API requests to create session tokens using command line syntax, suitable for testing purposes.:|:cURL is a command-line tool used for transferring data with URLs. It supports various protocols and can be used to interact with RESTful APIs.:|:cURL is a command-line tool for transferring data using various protocols, utilized in the examples for making API requests to Salable.:|:cURL is a command-line tool used to send requests to the Salable API for cancelling licenses.:|:An example command using cURL to create a session token with the Salable API for a pricing table.</data>
      <data key="d3">excerpt_id_94fb228ccda17239a53922fdeba71ddc:|:excerpt_id_58ff1c48dee01d0183a336f780b53149:|:excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab:|:excerpt_id_fbb88f35eb8a656df79436055d95db83:|:excerpt_id_f45958815097879415986e68ae21cbba</data>
    </node>
    <node id="Version">
      <data key="d1">variable</data>
      <data key="d2">Version is a required argument for instantiating the Salable API, indicating the version of the API being used, currently supporting 'v2'.</data>
      <data key="d3">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </node>
    <node id="getAll">
      <data key="d1">api:|:function</data>
      <data key="d2">getAll is a function that retrieves all licenses with support for cursor-based pagination and filtering options based on various identifiers.:|:getAll is an API method that retrieves a list of all subscriptions, increasing the ease of management for subscriptions.</data>
      <data key="d3">excerpt_id_6570345c98baaf7dba384cd0d59011cb:|:excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="cursor based pagination">
      <data key="d1">feature</data>
      <data key="d2">Cursor based pagination is a feature that allows retrieval of a large set of records in manageable portions, enhancing the efficiency of data retrieval.</data>
      <data key="d3">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </node>
    <node id="getOne">
      <data key="d1">api:|:function</data>
      <data key="d2">getOne is a method in the SDK used to retrieve a single instance of various entities, including licensing and pricing tables.:|:getOne is an API method that retrieves information, and it has been updated to include options such as `granteeId` and `currency` for enhanced functionality.:|:getOne is a function that fetches a specific license and now includes an expand option to reveal certain properties.</data>
      <data key="d3">excerpt_id_92801c82ba27735682f0b681e6920d1e:|:excerpt_id_6570345c98baaf7dba384cd0d59011cb:|:excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="granteeId">
      <data key="d1">variable</data>
      <data key="d2">granteeId is a variable that indicates the unique identifier for the user or entity receiving the license.:|:granteeId is a required string that specifies the new grantee ID value when updating a license.:|:granteeId is a variable representing the unique identifier for the grantee, necessary for retrieving a personalized pricing table.:|:granteeId is a variable that corresponds to the user ID of the individual making the purchase, critical for identification in the transaction process.:|:The granteeId is a required variable that serves as a unique identifier for licensing, representing the entity to which a license is granted.:|:Grantee ID is an identifier that references the recipient of the License, which could be nullable.:|:granteeId represents the unique identifier for the license that is used to track its ownership and usage.:|:granteeId is a parameter in the API request which represents the ID of the grantee to whom the first seat will be assigned.:|:granteeId represents the ID of the individual or entity receiving the license, which is an optional field in the creation process.:|:granteeId is a required parameter that specifies the identifier of the license holder for which the usage record is being requested.:|:granteeId is a variable used in both query and path parameters to uniquely identify the grantee associated with a license.:|:granteeId is a required input parameter of type string used in the function to specify which grantee's licenses are to be retrieved.:|:granteeId is a variable that holds the ID of the grantee for the created license, which can be null.:|:granteeId refers to the identifier used in association with the Plan, essential for aligning user permissions and access.:|:granteeId is a variable used to identify the recipient of the license and is incorporated within various API methods.:|:granteeId is a mandatory field in the updateLicenseParams configuration that specifies the new grantee ID for the license being updated.:|:granteeId is a string variable representing the identifier of the license holder to whom the license is granted.:|:granteeId is a variable representing the ID of the user or entity to whom a license is assigned.:|:granteeId is an optional variable representing the unique identifier for the grantee associated with the pricing table request.</data>
      <data key="d3">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5:|:excerpt_id_af891ba93357fd6013d5bbd53f638736:|:excerpt_id_2cd46a574579b7b43c3f957d890e1c25:|:excerpt_id_aeed752a0854093562fcab1a2782b1b3:|:excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_6570345c98baaf7dba384cd0d59011cb:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858:|:excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab:|:excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb:|:excerpt_id_d96e80b895dea6915b51ebb69acff797:|:excerpt_id_6b75e0b0ccb8be642042580b0d5bc451:|:excerpt_id_b2fd5f6d47556cbfaceb821af5580333:|:excerpt_id_fabc937abc8c4367253839f749f33317:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_3e7d435b3bee1520f4473a125ea800e1:|:excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_c7ede61793c23fd3416361ade4773f19:|:excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </node>
    <node id="create">
      <data key="d1">function</data>
      <data key="d2">create is a function that initializes a new license, now allowing for optional parameters such as status and endTime.</data>
      <data key="d3">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </node>
    <node id="update">
      <data key="d1">function</data>
      <data key="d2">update is a method in the SDK that updates existing resources or licenses.:|:update is a function that modifies an existing license and requires an object for its second parameter to specify changes.</data>
      <data key="d3">excerpt_id_92801c82ba27735682f0b681e6920d1e:|:excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </node>
    <node id="cancelMany">
      <data key="d1">function</data>
      <data key="d2">cancelMany is a method within the Salable SDK for canceling multiple licenses by passing in an array of UUIDs.:|:cancelMany is a function that allows the cancellation of multiple licenses using an array of license UUIDs provided in an object.</data>
      <data key="d3">excerpt_id_a78cd4046bc4c2cd90d128228e28893d:|:excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </node>
    <node id="verify">
      <data key="d1">function</data>
      <data key="d2">verify is the renamed function formerly known as verifyLicenseCheck, used to confirm the validity of licenses.</data>
      <data key="d3">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </node>
    <node id="status">
      <data key="d1">variable</data>
      <data key="d2">status is a variable that indicates the current operational state of a pricing table, expressed in enumerated values like ACTIVE or DEPRECATED.:|:status denotes the current state of the product, which can either be ACTIVE or DEPRECATED, representing its operational status.:|:status represents the current state of a license, such as ACTIVE in this context.:|:status is a string that indicates the current state of a plan, with possible values like ACTIVE, DEPRECATED, or DRAFT.:|:status is a variable indicating the current state of an entity, which could be ACTIVE, DEPRECATED, or other predefined statuses.:|:status is a variable of type string that indicates the current operational state of the subscription plan, with several possible values.:|:status is a variable that indicates whether the capability is ACTIVE or DEPRECATED, providing insight into its current state.:|:Status is a property that describes the current state of the License, which can be one of several enumerated values such as ACTIVE or CANCELED.:|:status is an optional variable used to filter the licenses based on their operational state.:|:status is a variable that can be used to filter licenses based on their current status when invoking the Get Licenses Count function.:|:status is a property that indicates the current state of the license, which could either be ACTIVE or TRIALING.:|:Status is a variable that represents the payment state, which can hold values such as 'paid' and is nullable.:|:status is a string variable that indicates whether the object is ACTIVE or DEPRECATED, with 'ACTIVE' as an example.:|:status refers to the current state of the license being created, with possible values such as 'ACTIVE' or 'TRIALING', and is optional.:|:status is a string variable indicating the current state of a feature, which can be either ACTIVE or DEPRECATED.:|:status is a string variable that represents the current state of the event, with values such as retrying, pending, success, and others.:|:The status variable indicates the current state of the product, which can be either ACTIVE or DEPRECATED, thus affecting its availability.:|:status is a variable that indicates the current state of the subscription, with defined statuses like 'ACTIVE', 'CANCELED', etc.:|:A string property within automatic_tax that can indicate the current status, nullable if not applicable.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5:|:excerpt_id_2cd46a574579b7b43c3f957d890e1c25:|:excerpt_id_e030f342082b40970042b8abc1e01c3a:|:excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858:|:excerpt_id_2703d4708f21fd100dfa3bb784effc38:|:excerpt_id_b48f747b61cda7dfebb331b0fdd6525d:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_a0fec7d8127f726de8c00070d4b3778f:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_e641edc1cfd6a00298605ef35f2ad243:|:excerpt_id_b5b087e2945918c40faadd1bcef0b6d2:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_5be8ee65f617fbdda55811498eb94708:|:excerpt_id_1c13b52ff77353471ab9c278f922f502:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </node>
    <node id="endTime">
      <data key="d1">variable</data>
      <data key="d2">endTime is a variable that stores a string value representing a custom end time for a license, allowing for an override of the default interval set by the plan.:|:End Time is a timestamp indicating when the License will cease to be valid, formatted in date-time.:|:endTime is a variable that indicates the expiration or termination time of a license, often provided in a date-time format.:|:endTime is a variable that allows the user to specify a custom expiration date for the license, overriding the default set in the plan.:|:endTime is a property that allows setting a custom expiration date for the license, overriding the default plan interval.:|:endTime is an optional field in the updateLicenseParams configuration that allows for a custom DateTime string for the license, overriding default intervals.</data>
      <data key="d3">excerpt_id_2cd46a574579b7b43c3f957d890e1c25:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_157af2fc7f3224cea8bd3bb2e3388abb:|:excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb:|:excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </node>
    <node id="getInvoices">
      <data key="d1">api:|:function</data>
      <data key="d2">getInvoices is a function that retrieves invoices for a given subscription based on its UUID.:|:getInvoices is an API method that retrieves a list of invoices associated with a subscription, aiding in invoice management.</data>
      <data key="d3">excerpt_id_0605f5987dc662b127cbcde1ca896ece:|:excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="getSwitchablePlans">
      <data key="d1">api</data>
      <data key="d2">getSwitchablePlans is an API method that retrieves a list of available plans for users to switch to, enhancing user experience.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="getUpdatePaymentLink">
      <data key="d1">api</data>
      <data key="d2">getUpdatePaymentLink is an API method that retrieves a portal link for updating payment information for a specific subscription.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="getPortalLink">
      <data key="d1">api</data>
      <data key="d2">getPortalLink is an API method that retrieves the customer portal link for a subscription, streamlining user access.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="getCancelSubscriptionLink">
      <data key="d1">api</data>
      <data key="d2">getCancelSubscriptionLink is an API method that retrieves the cancellation portal link for a subscription, providing user control over their subscriptions.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="getPaymentMethod">
      <data key="d1">api</data>
      <data key="d2">getPaymentMethod is an API method that retrieves the payment method tied to a subscription, essential for billing transparency.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="reactivateSubscription">
      <data key="d1">api</data>
      <data key="d2">reactivateSubscription is an API method that allows reactivation of a subscription's scheduled cancellation prior to the completion of the billing period.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="updatePlan">
      <data key="d1">api</data>
      <data key="d2">updatePlan had been an API method used to modify subscription plans but has now been deprecated.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="addSeats">
      <data key="d1">function</data>
      <data key="d2">addSeats is a function that allows for the addition of seats to a subscription, enhancing user capacity. It now optionally includes proration as a feature.:|:addSeats is a method within the subscription service of the SDK that adds seats to an existing subscription.:|:addSeats is a function that adds a specified number of seats to a subscription, identified by its UUID.</data>
      <data key="d3">excerpt_id_fde1d0189eaa75074956787efcc59cec:|:excerpt_id_92801c82ba27735682f0b681e6920d1e:|:excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="removeSeats">
      <data key="d1">function</data>
      <data key="d2">removeSeats is a function that allows for the removal of seats from a subscription, also including an optional proration feature.:|:removeSeats is a specific function within the Salable API that allows for the modification of subscription seats by decrementing their count.:|:removeSeats is a method within the subscription service of the SDK that removes seats from an existing subscription.:|:removeSeats is a function within the Salable API that is used to decrement the number of seats for a given subscription identified by its UUID.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a:|:excerpt_id_92801c82ba27735682f0b681e6920d1e:|:excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f:|:excerpt_id_de8626e7234f5a3c62010de5ee420028</data>
    </node>
    <node id="getAllUsageRecords">
      <data key="d1">api</data>
      <data key="d2">getAllUsageRecords is an API method that retrieves all usage records for grantee's metered licenses, aiding in usage management.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="getCurrentUsageRecord">
      <data key="d1">api</data>
      <data key="d2">getCurrentUsageRecord is an API method that retrieves the current usage record for a grantee on their plan, providing real-time data.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="updateLicenseUsage">
      <data key="d1">api</data>
      <data key="d2">updateLicenseUsage is an API method that updates a license's usage, which is essential for keeping usage data current.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="Licenses">
      <data key="d1">tag:|:feature:|:interface</data>
      <data key="d2">Licenses is a feature that encompasses various API methods designed for managing licenses, including retrieval, counting, and usage tracking.:|:Licenses is a tag used in the API to categorize functions related to license retrieval and management.:|:Licenses is a feature indicating the functional area of the API that deals with the management and retrieval of licenses.:|:Licenses refer to the various licensing options available through the SDK, including methods to manage them.:|:Licenses feature focuses on operations that pertain to the issuance and management of licenses.:|:Licenses is a feature that encompasses the management and counting of licenses in the system.:|:Licenses are issued within Salable to provide access to individual users or organizations for using a product.:|:Licenses refer to a section within the sidebar where users can manage licenses, including creating and issuing free licenses to customers.:|:Licenses refer to permissions issued for a product, which can be viewed or managed through the Salable interface.:|:Licenses is a feature under which various operations regarding license management are categorized in this API.:|:Licenses is a feature tag that categorizes the API operations related to license management.</data>
      <data key="d3">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4:|:excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_8f76cec6c3c5c205e09868b54019ae7b:|:excerpt_id_49c1f925b9b823dbc869debcecd54227:|:excerpt_id_92801c82ba27735682f0b681e6920d1e:|:excerpt_id_d6f8663943e239a00e14d46ce038881f:|:excerpt_id_15ef1834aa3a1da2af8e9952509255a2:|:excerpt_id_93d0cd6095f34cb94d3af52c681f6f6b:|:excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167:|:excerpt_id_436e9d6c339c56d143b4d7eb7f449283:|:excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="RBAC">
      <data key="d1">feature</data>
      <data key="d2">RBAC (Role-Based Access Control) refers to a set of methods used for managing user access, which have been deprecated in the current SDK version.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="Error Handling">
      <data key="d1">feature</data>
      <data key="d2">Error Handling refers to the mechanisms employed to manage and respond to errors like HTTP 403 and 404 errors, enhancing robustness.</data>
      <data key="d3">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </node>
    <node id="LE_GRANTEE_ID">
      <data key="d1">variable</data>
      <data key="d2">LE_GRANTEE_ID is a placeholder variable indicative of an identifier used in a salable checkout process.</data>
      <data key="d3">excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5</data>
    </node>
    <node id="success-url">
      <data key="d1">variable</data>
      <data key="d2">success-url is a URL where users will be redirected upon successful completion of the Salable Checkout process.:|:success-url is a variable that stores the URL to redirect to upon a successful checkout.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d:|:excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5</data>
    </node>
    <node id="currency">
      <data key="d1">variable</data>
      <data key="d2">currency is a variable representing the shortname of the currency to be used in the transaction, defaulting to the product's currency setting.:|:currency denotes the short form of the monetary unit used during the checkout, essential for transaction processing.:|:currency is a variable that holds the short name representation of the currency, such as USD, and is required in pricing tables for paid plans.:|:currency is a variable indicating the type of currency used in transactions, exemplified here as GBP.:|:currency refers to the financial instrument selected for transactions on the product, affecting payment processing.:|:currency is a variable that specifies the type of currency being used in transactions, essential for financial operations.:|:currency is a variable that specifies the type of currency being used in the transaction, in this case GBP.:|:The currency is a required variable representing the short name of the currency used in the checkout, such as USD.:|:currency is a variable that denotes the currency used for the pricing in the SalablePricingTable, in this case, GBP.:|:currency represents the monetary type of the transaction, indicated in the formatted currency code 'GBP'.:|:currency is a string variable that defines the currency in which the price is denominated, essential for financial transactions.:|:currency is a variable that specifies the currency short name for displaying prices in the pricing table.:|:currency is a variable specifying the currency used in the pricing table, affecting the display and transactions.:|:currency is a variable that references the schema for Currency, indicating the model for handling currency in the configuration.:|:currency represents the short name of the currency used, such as USD, in payment transactions.:|:currency is a variable that allows specifying the currency short name (e.g., USD) for the pricing table, defaulting to the product's currency if not provided.</data>
      <data key="d3">excerpt_id_b70787affc67ce541e7d959da486303e:|:excerpt_id_dcb04584bdf965125367de7881cf4516:|:excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_fabc937abc8c4367253839f749f33317:|:excerpt_id_3e5aff90a7d27611da426420fa021bf0:|:excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_d96e80b895dea6915b51ebb69acff797:|:excerpt_id_76f2bf224d3111fcdb908c47e3e64890:|:excerpt_id_0ab876e01883ecefd90117ac472049ae:|:excerpt_id_c7ede61793c23fd3416361ade4773f19:|:excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1:|:excerpt_id_23065bf6bbd2623f9f9fc906460b3f70</data>
    </node>
    <node id="defineCustomElements">
      <data key="d1">function</data>
      <data key="d2">defineCustomElements is a function that initializes the custom web components from the salable library for use in the Svelte application.:|:defineCustomElements is a function that initializes custom web components, making them available for use in the application.:|:defineCustomElements is a function that initializes all custom elements and should be called before rendering any web components.:|:defineCustomElements is a function that registers custom web components for use, ensuring they are available before rendering.:|:defineCustomElements is a function that initializes custom elements, allowing the use of web components in the DOM.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d:|:excerpt_id_da0a09d7dfdef3227e5234d284bf95ca:|:excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_192d34c930ce13b033dea301e1b00bfe:|:excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5</data>
    </node>
    <node id="Basic Plan">
      <data key="d1">configuration</data>
      <data key="d2">Basic Plan is a predefined plan that provides a limited set of features to users, designed for entry-level access.</data>
      <data key="d3">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </node>
    <node id="Premium Plan">
      <data key="d1">configuration</data>
      <data key="d2">Premium Plan is the highest tier subscription offering that grants access to all available features and options.</data>
      <data key="d3">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </node>
    <node id="Bespoke Plans">
      <data key="d1">configuration</data>
      <data key="d2">Bespoke Plans are customizable plans designed for specific customers with unique feature sets.:|:Bespoke Plans are customized plans created for specific customers, allowing flexibility in feature sets and capabilities.</data>
      <data key="d3">excerpt_id_889335c292df0ac0fb3417eda2e436b9:|:excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="Proprietary Plans">
      <data key="d1">configuration</data>
      <data key="d2">Proprietary Plans are standard subscription plans that come with predefined features, such as Basic, Pro, and Premium.</data>
      <data key="d3">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </node>
    <node id="Data Analytics">
      <data key="d1">function</data>
      <data key="d2">Data Analytics is a functionality that can be enabled as part of a feature and is initially available only on select plans such as the Pro Plan.</data>
      <data key="d3">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </node>
    <node id="API Docs">
      <data key="d1">api</data>
      <data key="d2">API Docs provide documentation for creating sessions in web components, detailing the necessary procedures and endpoints.</data>
      <data key="d3">excerpt_id_843312fa18be8527f5843f17a4d64ad3</data>
    </node>
    <node id="Sessions">
      <data key="d1">function</data>
      <data key="d2">Sessions refer to the functional aspect of managing user sessions in web components, facilitating communication between the client and server.</data>
      <data key="d3">excerpt_id_843312fa18be8527f5843f17a4d64ad3</data>
    </node>
    <node id="Salable Cancellation Button">
      <data key="d1">feature</data>
      <data key="d2">The Salable Cancellation Button is a web component that enables users to cancel subscriptions easily, requiring a session token and a UUID for proper functionality.</data>
      <data key="d3">excerpt_id_843312fa18be8527f5843f17a4d64ad3</data>
    </node>
    <node id="HTML/JavaScript">
      <data key="d1">example</data>
      <data key="d2">HTML/JavaScript example demonstrates how to set up a basic webpage that integrates the Salable Cancellation Button, highlighting the necessary script imports and component usage.:|:HTML/JavaScript shows how to use the Salable Pricing Table Web Component in a webpage, including script imports and component attributes.</data>
      <data key="d3">excerpt_id_843312fa18be8527f5843f17a4d64ad3:|:excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </node>
    <node id="session-token">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">session-token is a variable used to store the session identifier for user authentication within the system, essential for secure access.:|:session-token is a required variable used within the Salable Cancellation Button to authenticate user sessions.:|:session-token is a configuration attribute linked to the sessionToken variable used in API calls for authentication.:|:session-token is a variable that holds the session identifier needed for the SalableCancellationButton component to function properly.:|:session-token is a variable that holds a unique token for managing user sessions during transactions.:|:session-token is a variable representing the authentication token required to create a session for the web component.</data>
      <data key="d3">excerpt_id_dcb04584bdf965125367de7881cf4516:|:excerpt_id_414b247030d869939909cae61904cbaf:|:excerpt_id_843312fa18be8527f5843f17a4d64ad3:|:excerpt_id_76f2bf224d3111fcdb908c47e3e64890:|:excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542:|:excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </node>
    <node id="uuid">
      <data key="d1">variable</data>
      <data key="d2">uuid is a required string that identifies the specific license to update, ensuring the correct license is modified.:|:uuid is a variable that represents a universally unique identifier, used for various object types.:|:uuid is a unique identifier of type string formatted as a UUID, used to distinguish individual instances of an object.:|:uuid is a universally unique identifier format used to identify entries such as plans, features, and pricing tables, ensuring distinctiveness across the system.:|:uuid refers to the unique identifier of the pricing table that will be displayed, formatted as a string.:|:uuid is a variable that uniquely identifies the pricing table instance, essential for maintaining distinct sessions.:|:uuid is a variable type that serves as a universally unique identifier, ensuring the distinct representation of objects like Plan and Capability.:|:uuid is a variable that stores a unique subscription or license identifier required for the SalableCancellationButton component.:|:uuid is a unique identifier that is formatted as a universally unique identifier, commonly used for distinguishing data elements.:|:uuid is a variable that uniquely identifies the pricing table instance being used, essential for managing multiple tables or sessions.:|:UUID is a universally unique identifier used to distinctly identify Licenses and associated entities.:|:The uuid variable represents a universally unique identifier for products, ensuring each product can be distinctly identified.:|:uuid is a variable representing a universally unique identifier, often used to uniquely identify objects.:|:uuid is a variable that holds the unique identifier for the pricing table being displayed in the SalablePricingTable component.:|:The uuid is a unique identifier for the Plan, required to retrieve the checkout link.:|:uuid is a variable representing the unique identifier of a license in the Salable system.:|:uuid is a required variable representing the unique identifier for the subscription or license that is to be canceled.:|:uuid is a unique identifier in string format that is used to distinguish each event in the system.:|:uuid is a unique identifier for records in the LicenseUsageRecord structure, formatted as a UUID.:|:uuid is a variable of type string designed to hold universally unique identifiers for subscription plans.:|:uuid is a variable representing a unique identifier for the user’s subscription or license, critical for the functionality of the Salable Cancellation Button.:|:uuid is a variable representing a unique identifier for the pricing table instance being used.:|:A universally unique identifier that is used to uniquely identify an object or an entity in the system.</data>
      <data key="d3">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5:|:excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_591961ae8bc9634e2c292997a16088d5:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1:|:excerpt_id_2703d4708f21fd100dfa3bb784effc38:|:excerpt_id_dcb04584bdf965125367de7881cf4516:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_76f2bf224d3111fcdb908c47e3e64890:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_192d34c930ce13b033dea301e1b00bfe:|:excerpt_id_a0fec7d8127f726de8c00070d4b3778f:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_4a856870c319acb269c556884ddef7f2:|:excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_9372e24bc34dbf7191b5152899bc4fb2:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_e641edc1cfd6a00298605ef35f2ad243:|:excerpt_id_b5b087e2945918c40faadd1bcef0b6d2:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4:|:excerpt_id_843312fa18be8527f5843f17a4d64ad3:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_c7ede61793c23fd3416361ade4773f19:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </node>
    <node id="getCount">
      <data key="d1">function</data>
      <data key="d2">getCount is a method associated with SDK licenses that retrieves the count of licenses available.</data>
      <data key="d3">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="getForPurchaser">
      <data key="d1">function</data>
      <data key="d2">getForPurchaser is a method that retrieves licenses specifically for a purchaser.</data>
      <data key="d3">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="getForGranteeId">
      <data key="d1">function</data>
      <data key="d2">getForGranteeId is a method that retrieves licenses according to a specific grantee ID.</data>
      <data key="d3">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="getUsage">
      <data key="d1">function</data>
      <data key="d2">getUsage is a function in the SDK that retrieves usage statistics related to licenses.</data>
      <data key="d3">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="updateMany">
      <data key="d1">function</data>
      <data key="d2">updateMany is a function in the SDK that allows bulk updates of existing resources or licenses.:|:The updateMany function is a method of the Salable API for updating multiple licenses at once based on specified criteria.</data>
      <data key="d3">excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="changePlan">
      <data key="d1">function</data>
      <data key="d2">changePlan is a subscription method that allows users to change their subscription plan within the SDK.</data>
      <data key="d3">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="SalableResponseError">
      <data key="d1">api:|:error</data>
      <data key="d2">SalableResponseError is an error class introduced to handle specific types of errors related to responses from the SDK.:|:SalableResponseError is an exception type thrown by the Salable node SDK for known errors, encompassing specific error data fields such as code, status, and associated error messages.</data>
      <data key="d3">excerpt_id_570e9764415e5e3f2711ee0725da220d:|:excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="SalableValidationError">
      <data key="d1">api:|:error</data>
      <data key="d2">SalableValidationError is an error class that handles validation errors that occur within the SDK's processes.:|:SalableValidationError is an exception type that occurs when there's a validation issue with the data on the request, containing properties related to the error code, status, and validation errors.</data>
      <data key="d3">excerpt_id_570e9764415e5e3f2711ee0725da220d:|:excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="SalableUnknownError">
      <data key="d1">api:|:error</data>
      <data key="d2">SalableUnknownError is an exception type representing unknown errors in the Salable SDK, detailing error codes and messages associated with the unidentified errors.:|:SalableUnknownError is an error class used to capture unknown errors that are not categorized under other specific errors.</data>
      <data key="d3">excerpt_id_570e9764415e5e3f2711ee0725da220d:|:excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </node>
    <node id="Subscriptions">
      <data key="d1">feature</data>
      <data key="d2">Subscriptions feature deals with operations related to managing subscriptions and licenses.:|:Subscriptions is a feature that encompasses the management of licenses related to a subscription model.:|:Subscriptions refer to the methods associated with managing subscription services within the SDK.:|:Subscriptions is a feature that encompasses all operations related to managing user subscriptions, including getting payment methods and reactivating subscriptions.:|:Subscriptions is a feature that encompasses various operations related to managing subscription services, including cancellation.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_92801c82ba27735682f0b681e6920d1e:|:excerpt_id_0b9474a6f5a5fdb347caada72f379c22:|:excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00:|:excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a</data>
    </node>
    <node id="Products">
      <data key="d1">configuration:|:variable:|:feature</data>
      <data key="d2">Products is a feature in the interface that allows users to manage their offerings, specifically in deleting or modifying items as needed.:|:Products encompass a set of methods in the SDK for retrieving product information, features, and capabilities.:|:Products are the items that users can create and manage within the Salable platform as part of their payment offerings.:|:Products refer to items or services available for configuration within a specific system or platform, central to the plan editing process.:|:Products refers to the items or services that can be configured with various plans in the system.:|:Products feature encompasses operations related to managing products within a given system.:|:Products refers to items available for sale that can be configured and are associated with pricing tables.:|:Products represents the various items within a system that can be configured to include or exclude certain capabilities.:|:Products refer to the items available for configuration in the application, which include different features depending on the plan chosen.:|:Products is a section in the navigation menu where users can select and configure the product related to adding capabilities.</data>
      <data key="d3">excerpt_id_26398496b4725d2ebb6afc8f67da70c0:|:excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_5fe5d153a20530106ecd1eab48fbc041:|:excerpt_id_1c89a3caf8d5091ef21a456f714763dc:|:excerpt_id_92801c82ba27735682f0b681e6920d1e:|:excerpt_id_680976a6fc3bada749f88e7d3b2ab7ed:|:excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c:|:excerpt_id_b672ed1c3e3680e80873b4a4ba2d3012:|:excerpt_id_ec35536b3d41d59d2de737f1e2874f82:|:excerpt_id_a8239cb71650f45a73ca9ee6f9267131</data>
    </node>
    <node id="Plans">
      <data key="d1">configuration:|:variable:|:feature</data>
      <data key="d2">Plans are configurations that define how users are billed, including options for monthly recurring payments and usage-based billing.:|:Plans represent subscription options that can be retrieved and managed using methods within the SDK.:|:Plans are configurations that specify the features offered with products, which can be edited based on user requirements.:|:Plans are options provided to customers, customizable by features, pricing, and billing intervals, allowing tailored value to meet their needs.:|:Plans refers to the various subscription options available to customers, each having specific characteristics and pricing.:|:Plans outline pricing and access levels for the products offered to users, differentiating between free and paid options.:|:Plans are pre-defined structures that outline the pricing and payment terms associated with the Products offered via Salable.:|:Plans feature entails operations related to creating, modifying, and retrieving plans.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_e92c83ab9e90ff89816fc1841452b9ce:|:excerpt_id_ddc9e4fbd355f7d9a819edc36d148407:|:excerpt_id_5fe5d153a20530106ecd1eab48fbc041:|:excerpt_id_a9b4a17e631a0468ea971fdd9105b1d3:|:excerpt_id_92801c82ba27735682f0b681e6920d1e:|:excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0:|:excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c</data>
    </node>
    <node id="UR_SESSION_TOKEN">
      <data key="d1">variable</data>
      <data key="d2">UR_SESSION_TOKEN is a variable used to store the session token needed for the Salable Checkout process.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </node>
    <node id="plan-uuid">
      <data key="d1">variable</data>
      <data key="d2">plan-uuid stores the unique identifier for the plan associated with the Salable Checkout process.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </node>
    <node id="owner">
      <data key="d1">variable</data>
      <data key="d2">The owner variable holds the ID of the entity that will own the subscription, indicating ownership in the process.:|:owner represents the entity identified as the subscriber to the service, defaulting to the member if not explicitly set.:|:owner is a variable that holds the identifier of the entity that owns or manages the session, crucial for permission and access control.:|:owner is an optional variable of type string indicating the ID of the entity that owns the subscription.:|:owner is a variable that denotes the ID of the entity responsible for owning the subscription, provided as a string.:|:owner is a variable that specifies the owner of the pricing table or resource being set up.:|:owner is a variable that indicates the owner associated with the pricing table.:|:owner indicates the owner of the Salable Checkout session, likely identifying a user or account.:|:owner is a variable indicating the ownership of the pricing table component, used for display or session tracking.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d:|:excerpt_id_dcb04584bdf965125367de7881cf4516:|:excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_d979fc2428d484e09ae3b62b942d5968:|:excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_76f2bf224d3111fcdb908c47e3e64890:|:excerpt_id_c7ede61793c23fd3416361ade4773f19:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </node>
    <node id="grantee-id">
      <data key="d1">variable</data>
      <data key="d2">grantee-id specifies the identifier for the grantee associated with the Salable Checkout.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </node>
    <node id="SalableCheckout">
      <data key="d1">component</data>
      <data key="d2">SalableCheckout is a customizable component from the @salable/react-web-components library that facilitates the checkout process, utilizing various parameters like sessionToken and successUrl.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </node>
    <node id="dynamic">
      <data key="d1">function</data>
      <data key="d2">dynamic is a function from the Next.js framework that allows for dynamic import of components, facilitating code-splitting and optimization.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </node>
    <node id="SalableCheckoutDemo">
      <data key="d1">interface</data>
      <data key="d2">SalableCheckoutDemo is a functional component that demonstrates the usage of the SalableCheckout component, including session and plan configurations.</data>
      <data key="d3">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </node>
    <node id="Plan Name">
      <data key="d1">variable</data>
      <data key="d2">Plan Name is a variable input representing the name displayed in the Salable Dashboard for a plan.:|:Plan Name is a variable representing the specific licensing plan that is tied to particular functionalities within an application.</data>
      <data key="d3">excerpt_id_ec35536b3d41d59d2de737f1e2874f82:|:excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </node>
    <node id="Functionality">
      <data key="d1">feature</data>
      <data key="d2">Functionality refers to the capabilities associated with a specific plan, helping to dictate what actions can be performed within the application.</data>
      <data key="d3">excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </node>
    <node id="Salable Way">
      <data key="d1">example</data>
      <data key="d2">Salable Way serves as an illustrative example of best practices for setting up plans and functionalities within a system.</data>
      <data key="d3">excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </node>
    <node id="Bespoke Plan">
      <data key="d1">configuration</data>
      <data key="d2">Bespoke Plan refers to customized plans set up for specific customers, allowing tailored functionality.</data>
      <data key="d3">excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </node>
    <node id="Proprietary Functionality">
      <data key="d1">feature</data>
      <data key="d2">Proprietary Functionality indicates features that are unique to a specific plan and not shared with others.</data>
      <data key="d3">excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </node>
    <node id="SalableCancellationButton">
      <data key="d1">api:|:component</data>
      <data key="d2">SalableCancellationButton is an API component that handles the cancellation of a subscription or license, utilizing provided session and UUID tokens.:|:SalableCancellationButton is a web component used to initiate cancellation actions, requiring a session token and a unique identifier.</data>
      <data key="d3">excerpt_id_4a856870c319acb269c556884ddef7f2:|:excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </node>
    <node id="Svelte">
      <data key="d1">framework</data>
      <data key="d2">Svelte is a front-end framework that allows developers to create user interfaces with a declarative syntax.</data>
      <data key="d3">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </node>
    <node id="React">
      <data key="d1">framework</data>
      <data key="d2">React is a JavaScript library for building user interfaces, allowing for the creation of reusable UI components.</data>
      <data key="d3">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </node>
    <node id="Next.js Pages Router">
      <data key="d1">framework</data>
      <data key="d2">Next.js Pages Router is a framework that allows server-side rendering and static site generation for React applications.</data>
      <data key="d3">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </node>
    <node id="Next.js App Router">
      <data key="d1">framework</data>
      <data key="d2">Next.js App Router is a version of the Next.js framework that simplifies the routing of applications with client-side rendering.</data>
      <data key="d3">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </node>
    <node id="EXAMPLE_OWNER">
      <data key="d1">variable</data>
      <data key="d2">EXAMPLE_OWNER is a variable representing the owner in a system, typically used in configuration settings.</data>
      <data key="d3">excerpt_id_fbdb809c0bb44640a84ab10e32221e37</data>
    </node>
    <node id="EXAMPLE_GRANTEE_ID">
      <data key="d1">variable</data>
      <data key="d2">EXAMPLE_GRANTEE_ID is a variable that identifies the grantee in a system, integral for defining permissions or access rights.</data>
      <data key="d3">excerpt_id_fbdb809c0bb44640a84ab10e32221e37</data>
    </node>
    <node id="successUrl">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">successUrl is the URL to redirect users to upon successful completion of a purchase, marking a successful transaction.:|:successUrl is a parameter that specifies the URL users are redirected to upon successful completion of the checkout process.:|:The successUrl is a required variable that directs the user to a URL after successfully completing a payment.:|:successUrl is a variable representing the URL that the user is redirected to upon a successful checkout, indicating where completion of the purchase is confirmed.:|:successUrl is a URL parameter that specifies where users will be redirected after a successful payment.:|:successUrl is a configuration setting that defines the URL to which users are redirected upon successful completion of a checkout.:|:successUrl is a URL provided that users are redirected to upon a successful payment transaction.:|:successUrl is a variable that holds the URL to be redirected to upon successful completion of a process, typically in web applications.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_b0d99f3af716852d9f2a0d8e9d551113:|:excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab:|:excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_c7ede61793c23fd3416361ade4773f19:|:excerpt_id_fbdb809c0bb44640a84ab10e32221e37:|:excerpt_id_ec8853c4684794f440831d669649c3b8</data>
    </node>
    <node id="GBP">
      <data key="d1">variable</data>
      <data key="d2">GBP represents the variable used for the currency in a financial context, indicating currency type in transactions.</data>
      <data key="d3">excerpt_id_fbdb809c0bb44640a84ab10e32221e37</data>
    </node>
    <node id="member">
      <data key="d1">variable</data>
      <data key="d2">member indicates the ID of the member responsible for managing the license, necessary for the setup.:|:member is a variable representing the user ID for team or group memberships, also used for access control features.:|:member is a variable that refers to the unique identifier of a member associated with a license.:|:The member variable is a unique identifier for a member or user, but it is deprecated in favor of using owner.:|:member is a variable indicating the ID of the member tasked with managing the license, which is required during the license creation process.:|:member is the individual or entity that purchases the license, playing a crucial role in transactions.:|:member identifies the ID of the individual tasked with managing the license, though it is deprecated in favor of the owner variable.:|:member indicates the parameter for the purchaser's ID in the API call, essential for processing the sale within the checkout link.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_2cd46a574579b7b43c3f957d890e1c25:|:excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab:|:excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_c7ede61793c23fd3416361ade4773f19:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </node>
    <node id="planUuid">
      <data key="d1">variable</data>
      <data key="d2">planUuid is a unique identifier associated with a specific subscription plan, formatted as a UUID.:|:planUuid is a string variable that holds the unique identifier of the plan that the specified license belongs to.:|:planUuid is a string representing the UUID of a pricing plan, ensuring each plan is uniquely identifiable.:|:planUuid is a required variable in query parameters representing the unique UUID of the plan that the license belongs to.:|:planUuid is a variable representing the UUID of the license plan associated with the license, essential for the license creation process.:|:planUuid is a variable representing the UUID of the plan associated with the subscription.:|:planUuid is a required string parameter representing the unique identifier (uuid) of the plan for which the checkout link is to be generated.:|:planUuid is a variable within the PlanCapability that stores a unique identifier for the plan, formatted as a UUID.:|:planUuid is a required parameter that specifies the UUID of the plan associated with the license.:|:planUuid is a required parameter of type string that uniquely identifies the specific plan from which to return features.:|:planUuid is a unique identifier for a subscription plan, required when changing the active plan of a subscription.:|:planUuid is a specific identifier for the plan that is linked to both the checkout component and the license management process.:|:Plan UUID is a unique identifier that ties a License to a specific service plan.:|:planUuid is a variable that represents a unique identifier for a plan, used in the context of license management.:|:planUuid is a required parameter that represents the unique identifier (uuid) of the Plan from which the Currencies will be retrieved.:|:The 'planUuid' variable is a unique identifier for subscription plans within the API.:|:planUuid is a variable that stores the UUID of the license plan associated with a record.:|:planUuid is a required parameter of type string that specifies the unique identifier (UUID) of the plan for which features are to be retrieved.:|:The planUuid is a required variable that acts as a unique identifier for a specific plan within the system.:|:planUuid is a required option that specifies the new plan's UUID to which the subscription will be moved.:|:planUuid is a string that specifies the UUID for a plan within the capabilities object.:|:planUuid is a required variable of type string that represents the UUID of the Plan to be returned.</data>
      <data key="d3">excerpt_id_af891ba93357fd6013d5bbd53f638736:|:excerpt_id_2cd46a574579b7b43c3f957d890e1c25:|:excerpt_id_aeed752a0854093562fcab1a2782b1b3:|:excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_a873e2cace623f12f690b112f35aa4f7:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b:|:excerpt_id_ec8853c4684794f440831d669649c3b8:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858:|:excerpt_id_af600649bc560ccce1729a149fdba460:|:excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d:|:excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d:|:excerpt_id_9372e24bc34dbf7191b5152899bc4fb2:|:excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0:|:excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b:|:excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a:|:excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_23065bf6bbd2623f9f9fc906460b3f70:|:excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </node>
    <node id="sessionToken">
      <data key="d1">configuration:|:variable:|:interface</data>
      <data key="d2">sessionToken is an authentication token representing a user's active session, required for specific API requests.:|:sessionToken is a necessary variable that stores the authentication token required for rendering secure components like SalableInvoices.:|:sessionToken is a security scheme that authenticates requests using a token named Authorization in the request header.:|:sessionToken is a mandatory variable that stores the generated token for the session from the Salable API, formatted as a string.:|:sessionToken is a variable representing the token generated for using requested web components in a session.:|:sessionToken is a variable that stores the authentication token for user sessions, essential for maintaining security during interactions.:|:sessionToken is a required variable for the SalableCancellationButton, representing a session-specific token that is generated by the Salable API.:|:The sessionToken is a required variable generated for the session from the Salable API, facilitating user identification.:|:sessionToken is a variable that stores the user's session token, necessary for authentication when using the SalablePricingTable.:|:sessionToken is a required variable that holds the generated token for the current session, necessary for authentication when calling the API.</data>
      <data key="d3">excerpt_id_dc525bd2329c111af82010ba09911981:|:excerpt_id_7c997969594a4417e475afa3bf6edfa2:|:excerpt_id_ddc9e4fbd355f7d9a819edc36d148407:|:excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_4a856870c319acb269c556884ddef7f2:|:excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </node>
    <node id="email">
      <data key="d1">variable</data>
      <data key="d2">Email is an optional property that can hold the contact email associated with the License's purchaser.:|:Email is a variable representing a user's email address used for the checkout process, which can facilitate a smoother user experience by bypassing the email step.:|:email is a variable representing the subscriber's email, which is nullable and must follow email format.:|:The email variable is used to hold a user's email address during the checkout process.</data>
      <data key="d3">excerpt_id_a281d51fe193582e940b069350512acc:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507</data>
    </node>
    <node id="license">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">license is a variable representing the instantiated license object obtained after the creation process.:|:The license is a configuration entity that specifies the terms under which a user may access an application or service.</data>
      <data key="d3">excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </node>
    <node id="subscription">
      <data key="d1">variable</data>
      <data key="d2">subscription is a variable that holds the result of the API call to get all subscriptions.:|:Subscription is a variable that refers to a specific subscription identifier, represented as a string.:|:Subscription is a variable that represents a unique identifier for a subscription, exemplified by 'sub_xxxx'.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8:|:excerpt_id_9f79e3a1bec25332acbb8c2bde410424:|:excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="checkout">
      <data key="d1">function</data>
      <data key="d2">Checkout is a function in the user interface where users complete their purchases, and the email variable plays a role in streamlining this process.</data>
      <data key="d3">excerpt_id_a281d51fe193582e940b069350512acc</data>
    </node>
    <node id="payment" />
    <node id="ableCancellationButtonDemo">
      <data key="d1">function</data>
      <data key="d2">ableCancellationButtonDemo is a function that returns a SalableCancellationButton component, requiring specific properties to be functional.</data>
      <data key="d3">excerpt_id_4a856870c319acb269c556884ddef7f2</data>
    </node>
    <node id="undefined">
      <data key="d1">configuration</data>
      <data key="d2">Undefined is a term indicating that no value is assigned or expected in this context, typically used in programming and API documentation when describing optional fields.</data>
      <data key="d3">excerpt_id_a281d51fe193582e940b069350512acc</data>
    </node>
    <node id="Feature">
      <data key="d1">feature:|:schema</data>
      <data key="d2">Feature is a schema component that defines the attributes and structure for various features in the API.:|:Feature is a schema component that defines the attributes and structure of product features returned in API responses.:|:Feature refers to a specific functionality or aspect that can be utilized within a plan, providing a basis for enhancing the user's experience.:|:Feature is a structural element that includes attributes such as uuid, name, description, displayName, variableName, status, visibility, valueType, defaultValue, showUnlimited, productUuid, updatedAt, and sortOrder.:|:Feature is a specific benefit, augmentation, or liberty delivered by a product, varying by the plan purchased, and can include functionality or access to services.:|:Feature is a functionality toggle for Grantees within an application, which can contain boolean, numeric, or text values and is attached to a Plan.:|:Feature is a schema component that defines various functionality or characteristics within a system.</data>
      <data key="d3">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23:|:excerpt_id_8949faee968ed6bf19c979f4b005a699:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4:|:excerpt_id_90c759c4feb12e8e2b105cd945aeabd3:|:excerpt_id_680976a6fc3bada749f88e7d3b2ab7ed:|:excerpt_id_292ab6a210a5d658e3c94cd9b3e02c1a:|:excerpt_id_4ce077a690e06fe23daada90c307e546</data>
    </node>
    <node id="Capability">
      <data key="d1">configuration:|:feature:|:schema</data>
      <data key="d2">Capability is a schema representing the attributes and functionalities that a product can offer, structured in an array format.:|:Capability is a configuration object that defines features associated with a product, encompassing properties like UUID, name, description, status, and product UUID.:|:Capability is defined as a schema that describes the features and functionalities available within the API's context.:|:Capability is used to provide bespoke functionality options to Grantees, with fixed values that do not change during the license period.</data>
      <data key="d3">excerpt_id_a0fec7d8127f726de8c00070d4b3778f:|:excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab:|:excerpt_id_8949faee968ed6bf19c979f4b005a699:|:excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </node>
    <node id="Plan">
      <data key="d1">object:|:configuration:|:variable:|:feature:|:api</data>
      <data key="d2">Plan is a collection of Features and Capabilities assigned to a Grantee to define their access and functionalities within the application.:|:Plan represents a schema that is associated with products, describing different plans available for a product.:|:Plan is an API reference that outlines the attributes and configurations associated with a specific plan available to purchasers.:|:Plan represents an object that holds information regarding the operational aspects of a subscription or service, including its ID, activation status, and billing information.:|:Plan represents a configuration object that defines various parameters used in the application, and includes schemas for features and currencies.:|:Plan is the feature that includes various capabilities that can be queried through the Salable API.:|:Plan refers to a schema component that is referenced, so it is part of an API structure, defining how a plan is structured or utilized.:|:Plan refers to an entity that contains all relevant details about a specific plan, which can be retrieved by the API.:|:Plan is a configuration object that describes the various properties related to a subscription or service model, including UUID, name, description, status, trial days, evaluation, pricing type, and other attributes.</data>
      <data key="d3">excerpt_id_e9974e8199195febc17fa224f2404286:|:excerpt_id_6e08170f25211b887436970d3fc7ed73:|:excerpt_id_8949faee968ed6bf19c979f4b005a699:|:excerpt_id_a0fec7d8127f726de8c00070d4b3778f:|:excerpt_id_af600649bc560ccce1729a149fdba460:|:excerpt_id_9516a99c40383674c2274db86035bea6:|:excerpt_id_8afa492aad2baaf4c1b74f1b88500086:|:excerpt_id_aec59c84e38b8bb0a72122b3e79c8052:|:excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Subscription">
      <data key="d1">configuration:|:api:|:variable:|:schema</data>
      <data key="d2">Subscription is a recurring payment model made at designated intervals, typically not present for ad-hoc licenses or free plans.:|:Subscription is a configuration object that contains various properties necessary for managing subscriptions for products.:|:Subscription is a schema that describes the structure of a single subscription object returned by the API.:|:Subscription is an API component that defines the properties related to a user's subscription status and details.:|:Subscription API allows users to manage subscriptions including seat increments and decrements, providing HTTP responses for different scenarios.:|:Subscription is an API endpoint that allows users to change a subscription's plan based on a unique identifier (UUID).:|:Subscription refers to a schema that defines a subscription component, detailing the properties and structure for managing subscriptions.</data>
      <data key="d3">excerpt_id_8949faee968ed6bf19c979f4b005a699:|:excerpt_id_e71e21c92a42f2bc62641e1f5a2e6ea4:|:excerpt_id_ce43f56f1c477d0c5bb726334f2a714d:|:excerpt_id_9516a99c40383674c2274db86035bea6:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_aec59c84e38b8bb0a72122b3e79c8052:|:excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </node>
    <node id="Payment Integration">
      <data key="d1">configuration:|:variable:|:feature:|:interface</data>
      <data key="d2">Payment Integration is a variable that must be configured in Live Mode for users to successfully move products from Test Mode to Live Mode.:|:Payment Integration refers to the setup required to process payments within Salable, supporting both internal and external options like Stripe.:|:Payment Integration is a feature that allows users to connect to payment systems, which requires configuration for production use but supports immediate test mode development.:|:Payment Integration refers to the account associated with processing payments for paid products.:|:Payment Integration refers to an external payment provider linked to a Salable account for collecting payments.</data>
      <data key="d3">excerpt_id_8949faee968ed6bf19c979f4b005a699:|:excerpt_id_e92c83ab9e90ff89816fc1841452b9ce:|:excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0:|:excerpt_id_03a1e0b7542d58580d2e6e791794e576:|:excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </node>
    <node id="Invoices Web Component">
      <data key="d1">feature</data>
      <data key="d2">The Invoices Web Component is a UI component that allows users to display invoices in a web application, requiring a Session Token to function.</data>
      <data key="d3">excerpt_id_761b7e7d2e80ea5581133a171250a211</data>
    </node>
    <node id="Subscription UUID">
      <data key="d1">variable</data>
      <data key="d2">Subscription UUID is a variable that filters licenses by their associated subscription, formatted as a UUID.:|:The Subscription UUID is a unique identifier associated with a user's subscription, which is necessary for creating sessions with the Salable API.</data>
      <data key="d3">excerpt_id_761b7e7d2e80ea5581133a171250a211:|:excerpt_id_2803692fca51400dad72f2a2a41f66b4</data>
    </node>
    <node id="Creating a Session Token">
      <data key="d1">function</data>
      <data key="d2">Creating a Session Token is a functional process that involves making an API call to the Salable API to receive a token needed for authentication with web components.</data>
      <data key="d3">excerpt_id_761b7e7d2e80ea5581133a171250a211</data>
    </node>
    <node id="Example Code">
      <data key="d1">example</data>
      <data key="d2">Example Code illustrates how to implement the Salable Invoices Web Component in different programming languages, providing users with practical implementations.</data>
      <data key="d3">excerpt_id_761b7e7d2e80ea5581133a171250a211</data>
    </node>
    <node id="Salable Error Codes">
      <data key="d1">configuration</data>
      <data key="d2">Salable Error Codes are a predefined list of codes that describe various error types in the Salable API, aiding in identifying issues related to API usage.</data>
      <data key="d3">excerpt_id_570e9764415e5e3f2711ee0725da220d</data>
    </node>
    <node id="Code">
      <data key="d1">variable</data>
      <data key="d2">Code is a property associated with error types that provides a Salable specific error code, fundamental for error tracking and handling.:|:Code refers to the generated Vanilla JS or React code needed to display the pricing table, which users can copy and paste.</data>
      <data key="d3">excerpt_id_570e9764415e5e3f2711ee0725da220d:|:excerpt_id_e6d45aa0665fc0645841e246e19a8aee</data>
    </node>
    <node id="Status">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">Status indicates the current state of the feature, which can be ACTIVE or DEPRECATED.:|:Status is a string variable that represents the current state of the system or feature, which can be nullable.:|:Status is a string variable that describes the current state of a transaction, with 'paid' being an example of a potential value.:|:Status is a property detailing the status code of the error, necessary for understanding the nature of the error in API interactions.</data>
      <data key="d3">excerpt_id_570e9764415e5e3f2711ee0725da220d:|:excerpt_id_1c04b1c5e30972f3289d5a41f2049659:|:excerpt_id_aecd89cee2523c6280f6e76d501f92b4:|:excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Data">
      <data key="d1">variable</data>
      <data key="d2">Data refers to the additional information or messages associated with errors thrown by the Salable SDK, helping to clarify the issue.:|:Data is an array variable containing objects with various properties including id, amount, and currency.</data>
      <data key="d3">excerpt_id_570e9764415e5e3f2711ee0725da220d:|:excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </node>
    <node id="subscription-uuid">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">subscription-uuid is a variable that stores the unique identifier for a user's subscription, necessary for tracking service usage and access.:|:subscription-uuid is a configuration attribute that corresponds to the subscriptionUuid variable, essential for querying the API.</data>
      <data key="d3">excerpt_id_414b247030d869939909cae61904cbaf:|:excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542</data>
    </node>
    <node id="salable-invoices">
      <data key="d1">api</data>
      <data key="d2">salable-invoices is an API component that retrieves and displays a list of sellable invoices based on specific parameters such as session token and subscription ID.</data>
      <data key="d3">excerpt_id_414b247030d869939909cae61904cbaf</data>
    </node>
    <node id="limit">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">limit is a configuration parameter that sets the maximum number of sellable invoices to retrieve, controlling the volume of data returned by the API.:|:limit is a configuration attribute that determines how many invoice records to show in a single API response.:|:limit is an optional variable that specifies the number of rows of invoices to display per page, defaulting to 25 if not specified.:|:limit is a property that specifies the maximum number of invoices to display in the SalableInvoices component.</data>
      <data key="d3">excerpt_id_414b247030d869939909cae61904cbaf:|:excerpt_id_da0a09d7dfdef3227e5234d284bf95ca:|:excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542</data>
    </node>
    <node id="@salable/web-components/loader">
      <data key="d1">interface</data>
      <data key="d2">@salable/web-components/loader is an interface that loads the necessary web components for displaying sellable invoices and ensures they function correctly in the application.</data>
      <data key="d3">excerpt_id_414b247030d869939909cae61904cbaf</data>
    </node>
    <node id="API Key">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">API Key is a variable that serves as a security token required for authenticating requests to the Salable API, which can be generated in the Salable dashboard.:|:API Key is a required variable used to authenticate requests to the Salable API.:|:The API Key is a critical variable needed for using Salable's developer tools, ensuring secure access.:|:API Key is a unique identifier used in the request header for authenticating API calls to Salable.:|:API Key is a variable used for authenticating requests made to the API, ensuring secure access to the services provided.:|:API Key is a placeholder indicating the authentication token required for accessing the Salable API.:|:API Key is a sensitive variable used for authentication when making requests to the Salable API.:|:An API Key in Salable is a security token used to authenticate the user and their requests to the Salable services.:|:The API Key is a unique identifier required for making requests to Salable, ensuring that the requests are authenticated and authorized.</data>
      <data key="d3">excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0:|:excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b:|:excerpt_id_e92c83ab9e90ff89816fc1841452b9ce:|:excerpt_id_1447c9ad088ee587d295240cee723646:|:excerpt_id_9e7d62a87ad119e8af876e0901542e69:|:excerpt_id_5f94c3a04c280fb20bcd425bb5880a08:|:excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c:|:excerpt_id_7f5459c7889a5aa990fe3da8c8f562de:|:excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </node>
    <node id="Salable Dashboard">
      <data key="d1">interface</data>
      <data key="d2">The Salable Dashboard is the user interface where users can manage their products, configure payment plans, and view statistics.:|:The Salable Dashboard is a user interface where users can manage licenses, including updating grantee IDs and suspending licenses.</data>
      <data key="d3">excerpt_id_9a33a99f7264e4cca3eb424f6cfded53:|:excerpt_id_e92c83ab9e90ff89816fc1841452b9ce</data>
    </node>
    <node id="Checkout Link">
      <data key="d1">api:|:function</data>
      <data key="d2">Checkout Link is a function that generates a payment link for users to process payments for the application.:|:The generated checkout link for the plan, used in transactions related to the specific plan.</data>
      <data key="d3">excerpt_id_e92c83ab9e90ff89816fc1841452b9ce:|:excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </node>
    <node id="Features">
      <data key="d1">variable:|:feature</data>
      <data key="d2">Features represent the individual capabilities and options available within the Salable products that can be defined by the user.:|:Features are specific components that can be added to a product in the Salable dashboard, which are configured within the interface.:|:Features represent specific functionalities within a product that provide value to users.:|:Features are distinct characteristics or functionalities offered by a plan, which can be added or removed as needed.:|:Features are properties associated with a PricingTablePlan, which describe additional capabilities included in the plan.:|:Features represent distinct functionalities within the system, categorized into subattributes like feature types and enumerated values.</data>
      <data key="d3">excerpt_id_e92c83ab9e90ff89816fc1841452b9ce:|:excerpt_id_e2c009bde3f9c48c2520232d0990c9fa:|:excerpt_id_5fe5d153a20530106ecd1eab48fbc041:|:excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0:|:excerpt_id_7661720ce3af8e047797addb307a930b:|:excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </node>
    <node id="SalableInvoices">
      <data key="d1">api:|:component</data>
      <data key="d2">SalableInvoices is a web component designed to display invoice information within React applications, requiring specific properties like sessionToken and subscriptionUuid.:|:SalableInvoices is an API that retrieves a list of invoices based on the provided session token, subscription UUID, and limit parameters.:|:SalableInvoices is a custom web component used to display invoices with properties like sessionToken, subscriptionUuid, and limit.</data>
      <data key="d3">excerpt_id_da0a09d7dfdef3227e5234d284bf95ca:|:excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542</data>
    </node>
    <node id="YOUR_SESSION_TOKEN">
      <data key="d1">variable</data>
      <data key="d2">YOUR_SESSION_TOKEN is a placeholder representing the user's unique session token for authentication.</data>
      <data key="d3">excerpt_id_da0a09d7dfdef3227e5234d284bf95ca</data>
    </node>
    <node id="YOUR_SUBSCRIPTION_UUID">
      <data key="d1">variable</data>
      <data key="d2">YOUR_SUBSCRIPTION_UUID is a placeholder representing the unique identifier for a user's subscription.</data>
      <data key="d3">excerpt_id_da0a09d7dfdef3227e5234d284bf95ca</data>
    </node>
    <node id="Salable Web Component Library">
      <data key="d1">library</data>
      <data key="d2">The Salable Web Component Library is designed to aid in the development of SaaS products by providing a collection of Web Components that simplify payment integration and flexible pricing models.</data>
      <data key="d3">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </node>
    <node id="Web Components">
      <data key="d1">feature</data>
      <data key="d2">Web Components are standards-compliant resources that work across all modern browsers, ensuring broad compatibility for developers integrating payment and licensing functionalities.</data>
      <data key="d3">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </node>
    <node id="React Wrappers">
      <data key="d1">feature</data>
      <data key="d2">React Wrappers are the wrapped versions of the Web Components specifically designed to integrate seamlessly into React projects.</data>
      <data key="d3">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </node>
    <node id="Pricing Table">
      <data key="d1">api:|:feature:|:component</data>
      <data key="d2">The Pricing Table is a web component that displays pricing information, which can be customized using the Salable API.:|:Pricing Table is a web component feature that presents pricing options and is documented for users to easily reference.:|:The Pricing Table component displays product plans, enabling users to sign up for free or purchase subscription plans.:|:The Pricing Table feature allows users to create and edit pricing tables to display various pricing plans.:|:A Pricing Table is a feature that allows users to display various product plans for easy comparison on a single screen, automatically generated for Standard or Coming Soon plans.:|:Pricing Table is a feature that provides all necessary data on a Product for displaying its pricing options.:|:Pricing Table is a feature allowing the presentation of various pricing options to users, enhancing the user experience in making selections.:|:The Pricing Table feature allows users to display product plans, features, and costs clearly to customers, facilitating the sales process.:|:Pricing Table is an API that allows the retrieval of a pricing table using its UUID, providing necessary data for display purposes.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333:|:excerpt_id_06e17d56e4842e103630578061ddccad:|:excerpt_id_2606a25588f8e8e2ee794116e597f0bd:|:excerpt_id_1c89a3caf8d5091ef21a456f714763dc:|:excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_fabc937abc8c4367253839f749f33317:|:excerpt_id_39737808dc86383e52da4e4e8f531f84:|:excerpt_id_fbb88f35eb8a656df79436055d95db83:|:excerpt_id_e6d45aa0665fc0645841e246e19a8aee</data>
    </node>
    <node id="Invoices">
      <data key="d1">component</data>
      <data key="d2">The Invoices component allows users to display and download invoices associated with their subscriptions.</data>
      <data key="d3">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </node>
    <node id="POST /sessions">
      <data key="d1">api</data>
      <data key="d2">The POST /sessions endpoint is an API method used to generate a session token required for using specific Web Components from the Salable Web Component Library.:|:The POST /sessions endpoint is part of the Salable API, used to create a new session token for granting access to sensitive information.</data>
      <data key="d3">excerpt_id_06e17d56e4842e103630578061ddccad:|:excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </node>
    <node id="checkoutLink">
      <data key="d1">variable</data>
      <data key="d2">checkoutLink is a variable that holds the URL generated for the checkout process based on the specified plan and parameters.:|:checkoutLink is a variable that stores the URL generated for the checkout process, which is presented to the user.</data>
      <data key="d3">excerpt_id_ec8853c4684794f440831d669649c3b8:|:excerpt_id_b0d99f3af716852d9f2a0d8e9d551113</data>
    </node>
    <node id="cancelUrl">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">cancelUrl is a parameter that specifies the URL users are redirected to if they cancel the checkout process.:|:cancelUrl is a configuration setting that specifies the URL to which users are redirected if they cancel the checkout process.:|:cancelUrl is a URL parameter used to determine the redirect location for users if the payment is canceled.:|:cancelUrl is a URL specified for user redirection in the event that a payment is canceled.:|:cancelUrl is the URL designated for users to transition to if a transaction fails, highlighting the need for error management.:|:cancelUrl is a variable representing the URL that the user is redirected to if they cancel the checkout process, showing the path for user decision-making.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_b0d99f3af716852d9f2a0d8e9d551113:|:excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab:|:excerpt_id_c7ede61793c23fd3416361ade4773f19:|:excerpt_id_ec8853c4684794f440831d669649c3b8</data>
    </node>
    <node id="your-salable-api-key">
      <data key="d1">variable:|:example</data>
      <data key="d2">your-salable-api-key is a placeholder variable representing the user's actual API key necessary for authenticating requests to the Salable API.:|:your-salable-api-key is a variable placeholder representing the API key necessary for authenticating requests to the Salable API.:|:your-salable-api-key is a variable representing the API key required for authentication when making requests to the Salable API.:|:your-salable-api-key is a placeholder used in code examples to represent the API key required to authenticate to the Salable API.:|:your-salable-api-key is a placeholder variable representing the user's unique API key required to authenticate with the Salable API.:|:your-salable-api-key is a placeholder for the API key required to authenticate requests to the Salable API.:|:your-salable-api-key is a placeholder variable representing the unique API key required to authenticate requests to the Salable API.</data>
      <data key="d3">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_b0d99f3af716852d9f2a0d8e9d551113:|:excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd:|:excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_5ebe47a66fffe70faec5fc051e3e9666:|:excerpt_id_f45958815097879415986e68ae21cbba</data>
    </node>
    <node id="your-plan-uuid">
      <data key="d1">variable</data>
      <data key="d2">your-plan-uuid is a variable placeholder representing the unique identifier for a specific subscription plan in the Salable system.</data>
      <data key="d3">excerpt_id_b0d99f3af716852d9f2a0d8e9d551113</data>
    </node>
    <node id="your-users-id">
      <data key="d1">variable</data>
      <data key="d2">your-users-id is a variable placeholder for the unique identifier associated with a user, utilized in the checkout link generation.</data>
      <data key="d3">excerpt_id_b0d99f3af716852d9f2a0d8e9d551113</data>
    </node>
    <node id="V2 endpoints">
      <data key="d1">configuration</data>
      <data key="d2">The V2 endpoints of the Salable API are the updated pathways for making requests to the API, requiring a specific `version` header to be included in each request.</data>
      <data key="d3">excerpt_id_c08dee207a93dbeac363d048eb1567e4</data>
    </node>
    <node id="version header">
      <data key="d1">variable</data>
      <data key="d2">The `version` header is a variable that must be included in API requests to indicate the version of the API being used, specifically 'v2' for the new endpoints.</data>
      <data key="d3">excerpt_id_c08dee207a93dbeac363d048eb1567e4</data>
    </node>
    <node id="licenses">
      <data key="d1">variable:|:feature</data>
      <data key="d2">Licenses are a feature of the Salable API, which can be managed including the capability to cancel them.:|:The licenses feature allows users to manage and interact with licensing data within the API, with changes in how data is paginated and accessed in version 2.:|:licenses is a variable that stores the result of the fetch operation of licenses associated with the grantee ID.</data>
      <data key="d3">excerpt_id_c08dee207a93dbeac363d048eb1567e4:|:excerpt_id_3e7d435b3bee1520f4473a125ea800e1:|:excerpt_id_f45958815097879415986e68ae21cbba</data>
    </node>
    <node id="GET /subscriptions/{id}">
      <data key="d1">interface</data>
      <data key="d2">The `GET /subscriptions/{id}` interface is an endpoint that was previously used to fetch licenses associated with a specific subscription, which has changed in version 2.</data>
      <data key="d3">excerpt_id_c08dee207a93dbeac363d048eb1567e4</data>
    </node>
    <node id="GET /licenses">
      <data key="d1">api:|:interface</data>
      <data key="d2">The GET /licenses endpoint is used to retrieve license data associated with subscriptions.:|:The `GET /licenses` interface is a new endpoint in V2 for fetching licenses, requiring a `subscriptionUuid` to retrieve associated license data.</data>
      <data key="d3">excerpt_id_c08dee207a93dbeac363d048eb1567e4:|:excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </node>
    <node id="Tabs Component">
      <data key="d1">interface</data>
      <data key="d2">The Tabs Component is utilized to organize different code examples by programming language within the documentation.</data>
      <data key="d3">excerpt_id_fbb88f35eb8a656df79436055d95db83</data>
    </node>
    <node id="Pricing Models">
      <data key="d1">example:|:feature</data>
      <data key="d2">Pricing Models refer to various strategies employed by Salable to structure the payment plans for customers, allowing different billing methods based on selected plans.:|:Pricing Models illustrate different billing methods available for plans, including flat rate, usage-based, or per seat pricing.</data>
      <data key="d3">excerpt_id_bdaf47c34544829246213081b5843311:|:excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="Flat Rate Model">
      <data key="d1">configuration</data>
      <data key="d2">Flat Rate Model is a pricing configuration where a specific price is charged at regular billing cycles, simplifying cost management for customers.</data>
      <data key="d3">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </node>
    <node id="Usage-based Model">
      <data key="d1">configuration</data>
      <data key="d2">Usage-based Model charges customers based on their usage of specific features during the billing cycle, promoting fairness in billing.</data>
      <data key="d3">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </node>
    <node id="Per-seat Model">
      <data key="d1">configuration</data>
      <data key="d2">Per-seat Model allows customers to pay based on the number of licenses they use, providing clarity and flexibility in budgeting.</data>
      <data key="d3">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </node>
    <node id="Freemium">
      <data key="d1">feature</data>
      <data key="d2">Freemium is a pricing feature that offers users a free plan with potential upgrades to paid plans, attracting a broader user base.</data>
      <data key="d3">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </node>
    <node id="Free trials">
      <data key="d1">feature</data>
      <data key="d2">Free trials refer to a period where users can utilize a plan without cost, allowing them to evaluate the service before committing to a purchase.</data>
      <data key="d3">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </node>
    <node id="Features tab">
      <data key="d1">interface</data>
      <data key="d2">Features tab is the section in the product configuration interface where users can view and manage the features for a selected product.</data>
      <data key="d3">excerpt_id_680976a6fc3bada749f88e7d3b2ab7ed</data>
    </node>
    <node id="Add New Feature">
      <data key="d1">function</data>
      <data key="d2">Add New Feature is a function in the user interface allowing users to create and input new features into a product's configuration.</data>
      <data key="d3">excerpt_id_680976a6fc3bada749f88e7d3b2ab7ed</data>
    </node>
    <node id="Trash Can Icon">
      <data key="d1">interface</data>
      <data key="d2">The Trash Can Icon is a user interface element that allows users to remove or deprecate a capability from a product.</data>
      <data key="d3">excerpt_id_b672ed1c3e3680e80873b4a4ba2d3012</data>
    </node>
    <node id="Default Pricing Table">
      <data key="d1">feature:|:interface</data>
      <data key="d2">The Default Pricing Table is an interface element that displays available plans, allowing users to view and select various pricing configurations.:|:The Default Pricing Table is automatically created for each product, displaying plans with a Plan Type of Standard or Coming Soon.</data>
      <data key="d3">excerpt_id_dcbbc112726c43262b223ebfe3ca030b:|:excerpt_id_e6d45aa0665fc0645841e246e19a8aee</data>
    </node>
    <node id="Add Currencies">
      <data key="d1">function</data>
      <data key="d2">Add Currencies refers to the function that allows users to select and manage the default currency for a product when creating or configuring it.</data>
      <data key="d3">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </node>
    <node id="Create a Product">
      <data key="d1">api</data>
      <data key="d2">Create a Product is an API endpoint that facilitates the initial setup of a product, allowing selection of various configurations including currency settings.</data>
      <data key="d3">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </node>
    <node id="Currencies Tab">
      <data key="d1">interface</data>
      <data key="d2">Currencies Tab is a user interface section where users can view and manage the currency settings associated with a specific product.</data>
      <data key="d3">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </node>
    <node id="Products Menu">
      <data key="d1">interface</data>
      <data key="d2">Products Menu is the navigation interface that provides access to the list of products for configuration and management.</data>
      <data key="d3">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </node>
    <node id="Add Currency">
      <data key="d1">feature</data>
      <data key="d2">Add Currency is a feature that allows users to add additional currency options to a product's settings.</data>
      <data key="d3">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </node>
    <node id="Set Default">
      <data key="d1">function</data>
      <data key="d2">Set Default is a function that permits users to designate one currency as the default for a product.</data>
      <data key="d3">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </node>
    <node id="Product">
      <data key="d1">object:|:configuration:|:variable:|:feature:|:api</data>
      <data key="d2">Product is an object representing an item associated with the feature, containing properties such as uuid, name, and description.:|:The Product is a feature within Salable, representing the item or service that users can offer.:|:The Product configuration defines the attributes for a product including unique identification, name, description, logo, display name, organisation details, status, payment integration, and whether it's a test product or not.:|:Product is an API reference that details properties and schemas related to a particular product available for purchase.:|:Product refers to the project or item to which plans can be added, showcasing the context where the Create a Plan function is applied.:|:Product refers to items that can be created and tested within Test Mode in Salable.:|:Product represents a schema that is referenced throughout the API, likely describing the attributes of a product.:|:Product refers to a schema that represents the structure of product data returned by the API.:|:Product refers to a type or schema defined within the components, likely representing an item or service being managed in the system.:|:A Product in Salable is an app or service that customers can purchase, containing features and plans offered to users.</data>
      <data key="d3">excerpt_id_e9974e8199195febc17fa224f2404286:|:excerpt_id_1c04b1c5e30972f3289d5a41f2049659:|:excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0:|:excerpt_id_f867ef75edd7d7d3c434b36eb4078f99:|:excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11:|:excerpt_id_9516a99c40383674c2274db86035bea6:|:excerpt_id_aec59c84e38b8bb0a72122b3e79c8052:|:excerpt_id_c260728e1de323aa7fe6e522b249a64f:|:excerpt_id_e641edc1cfd6a00298605ef35f2ad243:|:excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </node>
    <node id="Products Page">
      <data key="d1">interface</data>
      <data key="d2">The Products Page is an interface where users can manage and move products from Test Mode to Live Mode, facilitating operations between modes.:|:The Products Page displays all created products and allows for their management and editing.</data>
      <data key="d3">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0:|:excerpt_id_03a1e0b7542d58580d2e6e791794e576</data>
    </node>
    <node id="Create New Product">
      <data key="d1">function</data>
      <data key="d2">Create New Product is a function that allows users to initiate the process of adding a new product to their account.</data>
      <data key="d3">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0</data>
    </node>
    <node id="Default Currency">
      <data key="d1">variable</data>
      <data key="d2">Default Currency is the primary currency selected for transactions related to the product.</data>
      <data key="d3">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0</data>
    </node>
    <node id="Capabilities Tab">
      <data key="d1">interface</data>
      <data key="d2">The Capabilities Tab is part of the interface used to set up specific capabilities for the product and includes the Plan Slug.:|:The Capabilities Tab is found in the sidebar and is used to manage the capabilities of a selected product.</data>
      <data key="d3">excerpt_id_26398496b4725d2ebb6afc8f67da70c0:|:excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </node>
    <node id="Name">
      <data key="d1">variable</data>
      <data key="d2">Name is a variable that refers to the user's name required during the account creation process.:|:Name refers to a variable field for referencing the pricing table within the dashboard, which is not visible to customers.:|:Name refers to the input required to label a capability, with a character limit of 191 characters.</data>
      <data key="d3">excerpt_id_26398496b4725d2ebb6afc8f67da70c0:|:excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce:|:excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </node>
    <node id="Add">
      <data key="d1">function</data>
      <data key="d2">Add is an action performed to create a new capability after naming it.</data>
      <data key="d3">excerpt_id_26398496b4725d2ebb6afc8f67da70c0</data>
    </node>
    <node id="Delete a Product">
      <data key="d1">function</data>
      <data key="d2">Delete a Product is a specific function allowing users to remove items from their list of products, with restrictions on type.</data>
      <data key="d3">excerpt_id_a8239cb71650f45a73ca9ee6f9267131</data>
    </node>
    <node id="Menu icon">
      <data key="d1">interface</data>
      <data key="d2">Menu icon is a graphical user interface element that enables users to access additional options for managing products.</data>
      <data key="d3">excerpt_id_a8239cb71650f45a73ca9ee6f9267131</data>
    </node>
    <node id="Grantee ID">
      <data key="d1">variable</data>
      <data key="d2">Grantee ID is a variable that allows filtering of licenses based on the ID of the grantee.:|:Grantee ID is an identifier used to validate if an evaluation license exists for a particular individual or entity.:|:Grantee ID is a unique identifier used to verify the validity of a license being issued to a customer.:|:Grantee ID is a specific parameter of a License that can be updated within the Salable Dashboard to reflect new information.</data>
      <data key="d3">excerpt_id_edf36a481b1048696352d880c847800e:|:excerpt_id_d6f8663943e239a00e14d46ce038881f:|:excerpt_id_2803692fca51400dad72f2a2a41f66b4:|:excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </node>
    <node id="API Method">
      <data key="d1">api</data>
      <data key="d2">An API method is an interface that allows users to interact programmatically with the license management system, including suspending licenses.</data>
      <data key="d3">excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </node>
    <node id="Update License">
      <data key="d1">function</data>
      <data key="d2">Update License is a method within the Salable API that facilitates the updating of specific licenses with new values provided in a request.:|:Update License is a function that allows users to modify the parameters of an existing license within the Salable Dashboard.</data>
      <data key="d3">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb:|:excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </node>
    <node id="Suspend License">
      <data key="d1">function</data>
      <data key="d2">Suspend License is a function that allows users to suspend an existing license, making it inactive and requiring a new license for adjustments.</data>
      <data key="d3">excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </node>
    <node id="Create New License">
      <data key="d1">function</data>
      <data key="d2">Create New License is a function that allows users to generate a new license for customers directly from the Licenses interface.</data>
      <data key="d3">excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </node>
    <node id="Licensee Email">
      <data key="d1">variable</data>
      <data key="d2">Licensee Email is the email address of the customer who will receive the evaluation license, necessary for issuing the license.:|:Licensee Email is the email address used to send the free license to the customer, ensuring they receive the necessary information.</data>
      <data key="d3">excerpt_id_edf36a481b1048696352d880c847800e:|:excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </node>
    <node id="Product &amp; Plan">
      <data key="d1">configuration</data>
      <data key="d2">Product &amp; Plan includes options for selecting the specific product and plan level related to the license being issued.:|:Product &amp; Plan refers to the specific product and its associated service level that a customer will receive under the evaluation license.</data>
      <data key="d3">excerpt_id_edf36a481b1048696352d880c847800e:|:excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </node>
    <node id="Let Expire/Renew Forever">
      <data key="d1">feature</data>
      <data key="d2">Let Expire/Renew Forever is an option that allows users to choose whether the free license will expire or will renew indefinitely.</data>
      <data key="d3">excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </node>
    <node id="Product Page">
      <data key="d1">interface</data>
      <data key="d2">The Product Page is part of the Salable interface where specific licenses for a product can be viewed.</data>
      <data key="d3">excerpt_id_15ef1834aa3a1da2af8e9952509255a2</data>
    </node>
    <node id="Left-Hand Menu">
      <data key="d1">interface</data>
      <data key="d2">The Left-Hand Menu is another part of the Salable interface that allows users to view all licenses issued across all products.</data>
      <data key="d3">excerpt_id_15ef1834aa3a1da2af8e9952509255a2</data>
    </node>
    <node id="Evaluation License">
      <data key="d1">feature</data>
      <data key="d2">Evaluation License is a feature that allows organizations to grant temporary access to a product for assessment purposes.</data>
      <data key="d3">excerpt_id_edf36a481b1048696352d880c847800e</data>
    </node>
    <node id="Expiration Date Parameter">
      <data key="d1">variable</data>
      <data key="d2">Expiration Date Parameter determines the validity period of the evaluation license and can be set according to the plan's cycle time.</data>
      <data key="d3">excerpt_id_edf36a481b1048696352d880c847800e</data>
    </node>
    <node id="Create License Sidebar">
      <data key="d1">interface</data>
      <data key="d2">Create License Sidebar is a user interface element that appears for users to enter details and create a new evaluation license.</data>
      <data key="d3">excerpt_id_edf36a481b1048696352d880c847800e</data>
    </node>
    <node id="Pricing Tables">
      <data key="d1">configuration:|:feature:|:interface</data>
      <data key="d2">Pricing Tables feature involves operations concerned with managing pricing tables for different offerings.:|:Pricing Tables are configuration elements within the Salable dashboard that allow users to create and manage pricing options for various products.:|:Pricing Tables allow for the sharing of plan details, which can be embedded into websites and applications for customer access.</data>
      <data key="d3">excerpt_id_a9b4a17e631a0468ea971fdd9105b1d3:|:excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce</data>
    </node>
    <node id="Edit Icon">
      <data key="d1">interface</data>
      <data key="d2">The Edit Icon is an interface element that allows users to make changes to the plan after it's created.:|:The Edit Icon is a user interface element that allows users to initiate changes to a selected plan.</data>
      <data key="d3">excerpt_id_5fe5d153a20530106ecd1eab48fbc041:|:excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </node>
    <node id="Value Type">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">Value Type determines the nature of the input values for a feature, allowing users to choose from options like Numerical, Text Options, or True/False.:|:Value Type denotes the data type of the feature value, which may be boolean or another type.:|:Value Type is a classification that defines the options available for each feature within a plan.</data>
      <data key="d3">excerpt_id_5fe5d153a20530106ecd1eab48fbc041:|:excerpt_id_1c04b1c5e30972f3289d5a41f2049659:|:excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </node>
    <node id="Create a Plan">
      <data key="d1">function</data>
      <data key="d2">Create a Plan is a function that allows users to add new plans to a product, indicating its utility in product management.</data>
      <data key="d3">excerpt_id_f867ef75edd7d7d3c434b36eb4078f99</data>
    </node>
    <node id="Sidebar Position">
      <data key="d1">variable</data>
      <data key="d2">Sidebar Position is a variable that determines the display order of the sidebar, in this case set to 2.</data>
      <data key="d3">excerpt_id_f867ef75edd7d7d3c434b36eb4078f99</data>
    </node>
    <node id="Preview in Browser">
      <data key="d1">function</data>
      <data key="d2">Preview in Browser is a function that allows users to view a live preview of the pricing table before implementing it on their webpage or app.</data>
      <data key="d3">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </node>
    <node id="Copy React Code">
      <data key="d1">function</data>
      <data key="d2">Copy React Code is a function that enables users to copy the React implementation of the pricing table for integration into their projects.</data>
      <data key="d3">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </node>
    <node id="Copy Vanilla JS Code">
      <data key="d1">function</data>
      <data key="d2">Copy Vanilla JS Code allows users to copy the plain JavaScript version of the pricing table for use in web applications.</data>
      <data key="d3">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </node>
    <node id="Actions">
      <data key="d1">configuration</data>
      <data key="d2">Actions refers to a set of options available to users for interacting with the pricing table feature, including previewing and copying code.</data>
      <data key="d3">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </node>
    <node id="API Overview">
      <data key="d1">feature</data>
      <data key="d2">API Overview provides a general introduction to the Salable API, highlighting its purpose and advantages in terms of integration and flexibility.</data>
      <data key="d3">excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c</data>
    </node>
    <node id="API Documentation">
      <data key="d1">interface</data>
      <data key="d2">API Documentation offers detailed information regarding how to use the API and the specific function involved in getting a pricing table.:|:API Documentation contains full details on the Salable APIs, including how to authenticate, set up an account, and make API calls.</data>
      <data key="d3">excerpt_id_d96e80b895dea6915b51ebb69acff797:|:excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c</data>
    </node>
    <node id="Settings">
      <data key="d1">configuration:|:interface</data>
      <data key="d2">Settings is the interface that allows users to manage various aspects of their account, including team management and permissions.:|:Settings is a section within Salable's user interface where users can manage options and configurations related to their account and application behavior.:|:Settings is an interface within Salable that enables users to manage configurations and integrations for their payment processing.:|:Settings refers to the configuration section within Salable where users can manage team members and other settings.:|:Settings is the menu option in Salable where users can manage configurations related to their account, including payment integrations.</data>
      <data key="d3">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb:|:excerpt_id_309cb05ad9ffc9790904eeb1293bc388:|:excerpt_id_5f94c3a04c280fb20bcd425bb5880a08:|:excerpt_id_957a53aebe179fef047e927dd691f8e1:|:excerpt_id_986393e22f5effe04fced6469538c6a8</data>
    </node>
    <node id="API Keys Tab">
      <data key="d1">interface</data>
      <data key="d2">The API Keys Tab is part of the Settings interface where users can view, create, and manage their API keys.</data>
      <data key="d3">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </node>
    <node id="Create New API Key">
      <data key="d1">function</data>
      <data key="d2">Create New API Key is a function that allows users to generate a new API key for their account, specifying necessary attributes such as the key name and scopes.</data>
      <data key="d3">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </node>
    <node id="API Key Name">
      <data key="d1">variable</data>
      <data key="d2">API Key Name is an identifier that the user assigns to their newly created API key, allowing for easy recognition of its purpose or usage.</data>
      <data key="d3">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </node>
    <node id="Scopes">
      <data key="d1">feature</data>
      <data key="d2">Scopes are permissions associated with the API key that define what actions or access the key allows once generated.</data>
      <data key="d3">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </node>
    <node id="Expiry Date">
      <data key="d1">variable</data>
      <data key="d2">Expiry Date is an optional setting users can define for their API key, determining until when the key remains valid.</data>
      <data key="d3">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </node>
    <node id="Copy Icon">
      <data key="d1">interface</data>
      <data key="d2">Copy Icon is a user interface element that allows users to easily copy the API key once it has been generated for use in making requests.</data>
      <data key="d3">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </node>
    <node id="Join an Organisation">
      <data key="d1">function</data>
      <data key="d2">Join an Organisation is a function that describes the process of entering an existing organisation through an invitation from the owner.</data>
      <data key="d3">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </node>
    <node id="Invite Your Team to Salable">
      <data key="d1">api</data>
      <data key="d2">Invite Your Team to Salable is an API endpoint that allows organisation owners to send invitations for team members to join their organisations.</data>
      <data key="d3">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </node>
    <node id="Secure Password">
      <data key="d1">variable</data>
      <data key="d2">Secure Password is a variable that refers to the password chosen by the user to protect their account.</data>
      <data key="d3">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </node>
    <node id="Accept Invitation">
      <data key="d1">feature</data>
      <data key="d2">Accept Invitation is a feature that allows users to confirm their membership in an organisation through a link provided in the invitation email.</data>
      <data key="d3">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </node>
    <node id="Invitation Email">
      <data key="d1">example</data>
      <data key="d2">Invitation Email is an example of the communication sent to users containing a link to join the organisation, which they might find in their inbox or junk folder.</data>
      <data key="d3">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </node>
    <node id="Setup">
      <data key="d1">function</data>
      <data key="d2">Setup is a function that outlines the necessary steps to initialize Salable, guiding users through the process.</data>
      <data key="d3">excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </node>
    <node id="Subscription Plans">
      <data key="d1">feature</data>
      <data key="d2">Subscription Plans are one of the functionalities within Salable that allow the setup of recurring payment arrangements for customers.</data>
      <data key="d3">excerpt_id_93d0cd6095f34cb94d3af52c681f6f6b</data>
    </node>
    <node id="Evaluation Licenses">
      <data key="d1">feature</data>
      <data key="d2">Evaluation Licenses are a feature in Salable enabling customers to try products before purchasing, enhancing customer engagement.</data>
      <data key="d3">excerpt_id_93d0cd6095f34cb94d3af52c681f6f6b</data>
    </node>
    <node id="Customizable Features">
      <data key="d1">feature</data>
      <data key="d2">Customizable Features allow users to create varying plans for a single product tailored to individual needs.</data>
      <data key="d3">excerpt_id_93d0cd6095f34cb94d3af52c681f6f6b</data>
    </node>
    <node id="Pricing Changes">
      <data key="d1">feature</data>
      <data key="d2">Pricing Changes refers to the capability to adjust product prices as needed in the Salable platform.</data>
      <data key="d3">excerpt_id_93d0cd6095f34cb94d3af52c681f6f6b</data>
    </node>
    <node id="Support Team">
      <data key="d1">organization</data>
      <data key="d2">The Support Team is responsible for assisting users with inquiries and issues, highlighting their role in customer service.</data>
      <data key="d3">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </node>
    <node id="Support Portal">
      <data key="d1">interface</data>
      <data key="d2">The Support Portal is an online platform where users can submit support requests and access assistance from the support team.</data>
      <data key="d3">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </node>
    <node id="Salable Status Page">
      <data key="d1">interface</data>
      <data key="d2">The Salable Status Page provides real-time updates on the service's uptime and availability, along with historical data.</data>
      <data key="d3">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </node>
    <node id="Email Support">
      <data key="d1">function</data>
      <data key="d2">Email Support refers to the option for users to contact the support team via email for assistance.</data>
      <data key="d3">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </node>
    <node id="Discord">
      <data key="d1">interface</data>
      <data key="d2">Discord is a communication platform where users can interact with the support team and community.</data>
      <data key="d3">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </node>
    <node id="Org Settings">
      <data key="d1">configuration</data>
      <data key="d2">Org Settings refers to a configurable option in a platform that allows users to manage and update their organisation's details.</data>
      <data key="d3">excerpt_id_acea73938f6ace38d84b68497fd7b05a</data>
    </node>
    <node id="Organisation Details">
      <data key="d1">variable</data>
      <data key="d2">Organisation Details are the specific attributes associated with a user's organisation, which can be updated as needed.</data>
      <data key="d3">excerpt_id_acea73938f6ace38d84b68497fd7b05a</data>
    </node>
    <node id="Account Creation">
      <data key="d1">event</data>
      <data key="d2">Account Creation is the process that triggers the automatic creation of an organisation within the platform.</data>
      <data key="d3">excerpt_id_acea73938f6ace38d84b68497fd7b05a</data>
    </node>
    <node id="Save Changes">
      <data key="d1">function</data>
      <data key="d2">Save Changes is a function that finalizes updates made to the organisation details, ensuring the new information is stored.</data>
      <data key="d3">excerpt_id_acea73938f6ace38d84b68497fd7b05a</data>
    </node>
    <node id="Scope">
      <data key="d1">configuration</data>
      <data key="d2">Scope refers to the specific domain of functionality within the Salable API that is required when creating session tokens.</data>
      <data key="d3">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </node>
    <node id="Metadata">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">Metadata consists of additional pieces of information needed for session token generation, varying based on the scope provided.:|:Metadata is an object that can hold additional properties related to the invoice item, but currently has no specified properties.:|:Metadata is an object variable that holds additional properties, defined as an empty object.</data>
      <data key="d3">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f:|:excerpt_id_1b612f26a43928677dcf8db549d3101b:|:excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="web-components:invoices">
      <data key="d1">feature</data>
      <data key="d2">web-components:invoices is a specific scope within the Salable API focusing on invoice functionalities.</data>
      <data key="d3">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </node>
    <node id="Salable Web Components library">
      <data key="d1">feature</data>
      <data key="d2">The Salable Web Components library is a package that can be installed to use Salable's web components in projects.</data>
      <data key="d3">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </node>
    <node id="Salable React Web Components library">
      <data key="d1">feature</data>
      <data key="d2">The Salable React Web Components library allows for easy integration of Salable components in React-based applications.</data>
      <data key="d3">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </node>
    <node id="Custom Elements Definition">
      <data key="d1">function</data>
      <data key="d2">Defining custom elements allows web components to be rendered dynamically in HTML, enhancing the user interface.</data>
      <data key="d3">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </node>
    <node id="component's documentation">
      <data key="d1">example</data>
      <data key="d2">The component's documentation provides a complete list of requirements for using various components effectively.</data>
      <data key="d3">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </node>
    <node id="Get Started Free">
      <data key="d1">feature</data>
      <data key="d2">Get Started Free is a feature on the Salable home page that prompts users to initiate the account creation process.</data>
      <data key="d3">excerpt_id_a3e10272ea78f4d7722234027bb8e4bc</data>
    </node>
    <node id="GitHub">
      <data key="d1">interface</data>
      <data key="d2">GitHub is an interface that users can utilize to sign up for Salable accounts without needing to create a password specifically for the service.</data>
      <data key="d3">excerpt_id_a3e10272ea78f4d7722234027bb8e4bc</data>
    </node>
    <node id="Google">
      <data key="d1">interface</data>
      <data key="d2">Google is another interface option that allows users to sign up for Salable accounts conveniently, facilitating a quicker registration process.</data>
      <data key="d3">excerpt_id_a3e10272ea78f4d7722234027bb8e4bc</data>
    </node>
    <node id="Verification Code">
      <data key="d1">variable</data>
      <data key="d2">Verification Code is a code sent to the user's email that is required for verifying their account during the sign-up process.</data>
      <data key="d3">excerpt_id_a3e10272ea78f4d7722234027bb8e4bc</data>
    </node>
    <node id="Team Tab">
      <data key="d1">interface</data>
      <data key="d2">The Team Tab in Salable provides options to invite team members, view their status, and manage their permissions.</data>
      <data key="d3">excerpt_id_957a53aebe179fef047e927dd691f8e1</data>
    </node>
    <node id="Invite Member Button">
      <data key="d1">function</data>
      <data key="d2">The Invite Member Button is a function that initiates the process to invite new team members to the Salable platform by entering their email addresses.</data>
      <data key="d3">excerpt_id_957a53aebe179fef047e927dd691f8e1</data>
    </node>
    <node id="Email Address">
      <data key="d1">variable</data>
      <data key="d2">Email Address is the variable needed to send an invitation for account creation to prospective team members within Salable.</data>
      <data key="d3">excerpt_id_957a53aebe179fef047e927dd691f8e1</data>
    </node>
    <node id="Manage Your Team Page">
      <data key="d1">feature</data>
      <data key="d2">Manage Your Team Page is a feature within Salable that provides guidance on how to edit team member permissions and manage invites.</data>
      <data key="d3">excerpt_id_957a53aebe179fef047e927dd691f8e1</data>
    </node>
    <node id="Teams Tab">
      <data key="d1">configuration</data>
      <data key="d2">The Teams Tab is a section within the Settings interface where users can view and manage team members and their status.</data>
      <data key="d3">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </node>
    <node id="Team Member">
      <data key="d1">variable</data>
      <data key="d2">A Team Member refers to individuals who are part of the team, with specific roles and permissions within the Salable account.</data>
      <data key="d3">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </node>
    <node id="Permissions">
      <data key="d1">feature</data>
      <data key="d2">Permissions are controls that dictate what access and capabilities a team member has within the Salable account.</data>
      <data key="d3">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </node>
    <node id="Invitation Process">
      <data key="d1">function</data>
      <data key="d2">The Invitation Process allows users to invite new members to join the team and manage their status during onboarding.</data>
      <data key="d3">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </node>
    <node id="Remove Member">
      <data key="d1">function</data>
      <data key="d2">Remove Member is a function that allows administrators to revoke access for team members who no longer require it.</data>
      <data key="d3">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </node>
    <node id="Payment Integrations">
      <data key="d1">configuration:|:feature</data>
      <data key="d2">Payment Integrations refers to the settings within Salable where users can manage their payment solutions.:|:Payment Integrations is a feature within Salable that allows users to connect various payment providers, including Stripe, to their account.</data>
      <data key="d3">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb:|:excerpt_id_986393e22f5effe04fced6469538c6a8</data>
    </node>
    <node id="Add Payment Integration">
      <data key="d1">function</data>
      <data key="d2">Add Payment Integration is a function within Salable that allows users to add a new payment provider to their account.:|:Add Payment Integration is a function in Salable that allows users to initiate the process of linking a payment provider to their account.</data>
      <data key="d3">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb:|:excerpt_id_986393e22f5effe04fced6469538c6a8</data>
    </node>
    <node id="Account Name">
      <data key="d1">variable</data>
      <data key="d2">Account Name is a variable that users must provide to identify their Salable Payment account within the Salable dashboard.</data>
      <data key="d3">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb</data>
    </node>
    <node id="Stripe Onboarding">
      <data key="d1">api</data>
      <data key="d2">Stripe Onboarding refers to the external service process users will be directed to for completing the payment account setup.</data>
      <data key="d3">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb</data>
    </node>
    <node id="Test Mode">
      <data key="d1">configuration:|:example:|:feature</data>
      <data key="d2">Test Mode is a feature within Salable that provides an environment to test functionality without affecting the production environment.:|:Test Mode is an example of using the Salable API for testing purposes, requiring an API key prefixed with 'test_' for safe interaction.:|:Test Mode is a configuration option within Salable that allows users to create and test products in a safe environment, replicating behavior found in the production environment.</data>
      <data key="d3">excerpt_id_1447c9ad088ee587d295240cee723646:|:excerpt_id_03a1e0b7542d58580d2e6e791794e576:|:excerpt_id_c260728e1de323aa7fe6e522b249a64f</data>
    </node>
    <node id="Live Mode">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">Live Mode is a boolean indicating whether the environment is live, with an example value of true.:|:Live Mode refers to the operational state of Salable where products are active and used in real transactions, contrasting with the testing functionalities of Test Mode.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677:|:excerpt_id_03a1e0b7542d58580d2e6e791794e576</data>
    </node>
    <node id="Copy to Live Mode">
      <data key="d1">function</data>
      <data key="d2">Copy to Live Mode is a function that allows users to transfer a product from Test Mode to Live Mode once testing is complete.</data>
      <data key="d3">excerpt_id_03a1e0b7542d58580d2e6e791794e576</data>
    </node>
    <node id="Get Capabilities">
      <data key="d1">function</data>
      <data key="d2">Get Capabilities is a function that retrieves a list of all capabilities associated with a specific plan identified by its UUID.:|:Get Capabilities function returns a list of all the capabilities associated with a product, allowing users to retrieve essential information about a specific product.</data>
      <data key="d3">excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3:|:excerpt_id_af600649bc560ccce1729a149fdba460</data>
    </node>
    <node id="{{API_KEY}}">
      <data key="d1">variable</data>
      <data key="d2">{{API_KEY}} is a placeholder variable used to represent the user's unique API key necessary for authenticating requests to the Salable API.:|:{{API_KEY}} is a placeholder variable representing the unique API key necessary for authenticating requests to the Salable API.</data>
      <data key="d3">excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3:|:excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </node>
    <node id="currencies">
      <data key="d1">variable:|:feature</data>
      <data key="d2">currencies is a variable that stores the result from the Get Capabilities function, holding the capabilities of a specified product.:|:currencies is an array containing objects that define the currencies associated with the product, including product UUID and currency details.:|:currencies is an array feature representing various currencies supported by the subscription plan, each containing schema references.</data>
      <data key="d3">excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </node>
    <node id="productUuid">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">productUuid is a variable representing the unique identifier of a product, used in API requests.:|:productUuid is a required parameter of type string that represents the UUID of the Product, necessary for fetching associated plans.:|:productUuid represents the unique identifier for the product whose licenses are being fetched.:|:productUuid is a variable that uniquely identifies a product for displaying default pricing information in the SessionCreatePricingTableRequest function.:|:productUuid is a required variable that represents the unique identifier of the product whose currencies are being fetched, formatted as a string.:|:productUuid is a string that must adhere to UUID format, uniquely identifying a product.:|:productUuid is a variable representing the UUID of the product associated with the subscription.:|:productUuid is a required string parameter that represents the UUID of the product for which features are requested.:|:productUuid is a required string variable that represents the UUID of the product to be returned.:|:productUuid is a unique identifier linked to a specific product associated with a pricing table, reinforcing the connection between products and their respective pricing.:|:Product UUID is a unique identifier that links a License to a specific product.:|:productUuid is a required parameter representing the UUID of the product whose licenses are being checked.:|:productUuid is a required variable representing the unique identifier (UUID) of the product for constructing the pricing table.:|:productUuid is a required parameter that must be specified to identify the product for which capabilities are being requested.:|:productUuid is a variable of type string that holds the universally unique identifier for the product associated with the subscription plan.</data>
      <data key="d3">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476:|:excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3:|:excerpt_id_90c759c4feb12e8e2b105cd945aeabd3:|:excerpt_id_fabc937abc8c4367253839f749f33317:|:excerpt_id_413bf83a1f6433b1357024badf84fc52:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_e030f342082b40970042b8abc1e01c3a:|:excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c:|:excerpt_id_43aad08feabcefa292e03d2681262e0b:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_09329d7ae662ecf72d3d964190506555:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_4084123f56be759c3a4de2c2abd2e01d</data>
    </node>
    <node id="Product Capability Object">
      <data key="d1">example</data>
      <data key="d2">The Product Capability Object provides a structured format for the capabilities returned by the API, detailing features of the specific product.</data>
      <data key="d3">excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3</data>
    </node>
    <node id="Get All Products">
      <data key="d1">function</data>
      <data key="d2">Get All Products is a function that returns a list of all the products created by a Salable organization.</data>
      <data key="d3">excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d</data>
    </node>
    <node id="Product Object">
      <data key="d1">example</data>
      <data key="d2">Product Object is an example of the data structure returned when retrieving product information using the Salable API.:|:Product Object is an example in the documentation that outlines the structure and details returned by the Salable API for a product.</data>
      <data key="d3">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476:|:excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d</data>
    </node>
    <node id="Code Sample">
      <data key="d1">feature:|:example</data>
      <data key="d2">Code Sample provides an example of how to use the Salable SDK to call the cancelMany function for canceling licenses.:|:Code Sample provides a practical demonstration of how to implement the Get One Pricing Table function in TypeScript.:|:Code Sample demonstrates how to use the Salable API to retrieve the currencies for a specified product using TypeScript.:|:Code Sample provides a practical illustration of how to implement the Reactivate a Subscription function using the Salable API in TypeScript.:|:Code Sample demonstrates how to implement the removeSeats function using the Salable API in TypeScript.:|:Code Sample is an example of how to use the Salable API in TypeScript to call the Get One Plan function.:|:Code Sample demonstrates how to use the Salable API to retrieve switchable plans for a specific subscription using TypeScript.:|:Code Sample provides a practical implementation example of how to use the Salable API to create multiple licenses using TypeScript.:|:Code Sample is a demonstrative example provided to show how to implement the Create Session function within TypeScript using the Salable API.:|:Code Sample provides an example of how to implement the functionality of canceling a subscription using the Salable API in TypeScript.:|:Code Sample provides an example implementation of how to use the getFeatures function with the Salable API in TypeScript.:|:Code Sample demonstrates how to use the Salable API in TypeScript to retrieve the customer portal link for a specific subscription using its UUID.:|:Code Sample provides a practical example of how to implement the Get One Event function within a TypeScript application.:|:Code Sample presents a sample implementation of the licenses.getForPurchaser function using the Salable API, serving as a practical reference for users.:|:Code Sample illustrates how to use the Salable API to get a pricing table for a specific product, including required parameters.:|:Code Sample refers to the provided TypeScript code that demonstrates how to implement the function to get the payment method for a subscription.:|:Code Sample demonstrates how to use the Salable API to update a subscription programmatically, providing practical implementation guidance.:|:Code Sample provides an example of how to use the Salable API to get a subscription update payment link in TypeScript.:|:Code Sample is an example code snippet written in TypeScript demonstrating how to use the Salable API to get product plans.:|:Code Sample demonstrates how to use the Salable API to update a license using TypeScript, showcasing practical application.:|:Code Sample refers to an illustrative example showing how to use the Salable API in a TypeScript code snippet.</data>
      <data key="d3">excerpt_id_2cd46a574579b7b43c3f957d890e1c25:|:excerpt_id_d979fc2428d484e09ae3b62b942d5968:|:excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d:|:excerpt_id_e030f342082b40970042b8abc1e01c3a:|:excerpt_id_9e7d62a87ad119e8af876e0901542e69:|:excerpt_id_eb980ddfe99dddb529d8107a56a3e090:|:excerpt_id_4084123f56be759c3a4de2c2abd2e01d:|:excerpt_id_a78cd4046bc4c2cd90d128228e28893d:|:excerpt_id_7f708cd18160447dd54fdd10c6e9203e:|:excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb:|:excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce:|:excerpt_id_d96e80b895dea6915b51ebb69acff797:|:excerpt_id_a4b8e11006d615b209673feede32f6c5:|:excerpt_id_fabc937abc8c4367253839f749f33317:|:excerpt_id_413bf83a1f6433b1357024badf84fc52:|:excerpt_id_310437ff88c214d922e257631db6a72d:|:excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7:|:excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0:|:excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b:|:excerpt_id_ddaf4e6518a73006b4437f10458e27ba:|:excerpt_id_d9c1267809cd58cbd21415af67a458ab</data>
    </node>
    <node id="typescript">
      <data key="d1">configuration</data>
      <data key="d2">typescript is a programming language that is being used in the provided code sample to demonstrate the API usage.</data>
      <data key="d3">excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d</data>
    </node>
    <node id="queryParams">
      <data key="d1">variable</data>
      <data key="d2">queryParams is a required variable that encompasses additional parameters used in the API call to customize the response for the pricing table.</data>
      <data key="d3">excerpt_id_fabc937abc8c4367253839f749f33317</data>
    </node>
    <node id="Get Currencies for a Product">
      <data key="d1">function</data>
      <data key="d2">Get Currencies for a Product is a function that returns a list of all currencies associated with a specific product using a product identifier.</data>
      <data key="d3">excerpt_id_413bf83a1f6433b1357024badf84fc52</data>
    </node>
    <node id="Product Currency Object">
      <data key="d1">feature</data>
      <data key="d2">Product Currency Object is a feature that provides detailed information regarding the currencies of a product as part of the API documentation.</data>
      <data key="d3">excerpt_id_413bf83a1f6433b1357024badf84fc52</data>
    </node>
    <node id="Get One">
      <data key="d1">function</data>
      <data key="d2">Get One is a function that returns the details of a single product from the Salable API.</data>
      <data key="d3">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476</data>
    </node>
    <node id="options">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">options refers to an optional configuration object that can include parameters like granteeId and currency for customizing the pricing table fetch request.:|:options is a variable used to pass parameters to the function call for fetching subscriptions.:|:options is a parameter that includes additional configuration options, allowing for the specification of properties to be expanded in the result.:|:options is a required variable that encompasses settings such as planUuid and proration affecting the subscription change.:|:options refers to additional parameters that can be passed to the function for more specific requests like pagination and limiting the number of fetched invoices.:|:options are additional parameters that can be passed to customize the request; they are not mandatory.:|:options are additional configurations that can be passed to the function, allowing customization of the data returned.:|:options is an optional configuration variable that specifies additional parameters for the API call, such as which properties to expand.:|:options refers to optional parameters that can be specified to modify the request, such as expanding certain properties.</data>
      <data key="d3">excerpt_id_9f79e3a1bec25332acbb8c2bde410424:|:excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b:|:excerpt_id_5054bb85ceb11e7cd95222d0fffc6476:|:excerpt_id_3e7d435b3bee1520f4473a125ea800e1:|:excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a:|:excerpt_id_74b2b33402d8e1fd884f911b29d71f78:|:excerpt_id_0605f5987dc662b127cbcde1ca896ece:|:excerpt_id_d96e80b895dea6915b51ebb69acff797:|:excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </node>
    <node id="GetProductOptions">
      <data key="d1">configuration</data>
      <data key="d2">GetProductOptions is a type that includes optional parameters for the Get One function, allowing for customization of the product details returned.</data>
      <data key="d3">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476</data>
    </node>
    <node id="expand">
      <data key="d1">variable:|:feature</data>
      <data key="d2">expand is an optional array variable that can be used to specify which properties of the product to expand in the response.:|:expand is a feature that allows users to specify additional properties to return in the API response, enhancing the detail of the output.:|:expand is a query parameter that specifies additional resource fields to include in the API response as comma-separated values.:|:expand is a variable parameter in API requests that specifies additional fields to include in the response.:|:expand is a variable of type string array used in the options to specify which properties of the plan should be expanded in the response.:|:expand is an optional property that allows users to define which additional subscription properties they wish to retrieve.</data>
      <data key="d3">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4:|:excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b:|:excerpt_id_8f76cec6c3c5c205e09868b54019ae7b:|:excerpt_id_5054bb85ceb11e7cd95222d0fffc6476:|:excerpt_id_74b2b33402d8e1fd884f911b29d71f78:|:excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </node>
    <node id="Get Plans for a Product">
      <data key="d1">function</data>
      <data key="d2">Get Plans for a Product is a function that retrieves a list of all the plans associated with a given product.</data>
      <data key="d3">excerpt_id_4084123f56be759c3a4de2c2abd2e01d</data>
    </node>
    <node id="Plan Object">
      <data key="d1">feature</data>
      <data key="d2">Plan Object is a feature that contains details about the plans returned by the API, providing relevant information in the response.</data>
      <data key="d3">excerpt_id_4084123f56be759c3a4de2c2abd2e01d</data>
    </node>
    <node id="Salable(node-sdk)">
      <data key="d1">interface</data>
      <data key="d2">Salable(node-sdk) is the interface used to interact with the Salable API, allowing developers to make API calls and handle responses.</data>
      <data key="d3">excerpt_id_4084123f56be759c3a4de2c2abd2e01d</data>
    </node>
    <node id="Get Features">
      <data key="d1">function</data>
      <data key="d2">Get Features is a function that returns a list of all features associated with a specific product.</data>
      <data key="d3">excerpt_id_43aad08feabcefa292e03d2681262e0b</data>
    </node>
    <node id="Product Feature Object">
      <data key="d1">example</data>
      <data key="d2">Product Feature Object is an example structure returned by the API, detailing the features of a product.</data>
      <data key="d3">excerpt_id_43aad08feabcefa292e03d2681262e0b</data>
    </node>
    <node id="Get Licenses for a Purchaser">
      <data key="d1">function</data>
      <data key="d2">Get Licenses for a Purchaser is a function that retrieves licenses associated with a purchaser for a specific product, indicating the relationship between purchasers and their licenses.</data>
      <data key="d3">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </node>
    <node id="licenses.getForPurchaser">
      <data key="d1">function</data>
      <data key="d2">licenses.getForPurchaser is a specific function within the Salable API that allows users to fetch licenses for a given purchaser and product.</data>
      <data key="d3">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </node>
    <node id="getForPurchaserOptions">
      <data key="d1">configuration</data>
      <data key="d2">getForPurchaserOptions defines the required parameters for the licenses.getForPurchaser function, specifying the input necessary for its execution.</data>
      <data key="d3">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </node>
    <node id="purchaser">
      <data key="d1">variable</data>
      <data key="d2">purchaser is a variable representing the entity requesting the licenses, crucial for the function's operation.:|:Purchaser is the entity or individual who has acquired the License, required for tracking ownership.</data>
      <data key="d3">excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </node>
    <node id="License Object">
      <data key="d1">api:|:example:|:feature:|:interface</data>
      <data key="d2">License Object is a feature within the Salable API documentation detailing how the API operations are structured for license management.:|:License Object is an API endpoint that provides detailed information about licenses, including options to retrieve license details by UUID.:|:License Object is an interface representing the structure of the data returned from the API when querying for a license. Reference documentation is provided for more details.:|:License Object serves as an illustrative example of the data structure returned by the API call for licenses.:|:The License Object is an example representation of the data returned from the API when a license is successfully retrieved.:|:License Object exemplifies the structure and attributes of a license returned by the Salable API, providing a reference for users.</data>
      <data key="d3">excerpt_id_3e7d435b3bee1520f4473a125ea800e1:|:excerpt_id_74b2b33402d8e1fd884f911b29d71f78:|:excerpt_id_e030f342082b40970042b8abc1e01c3a:|:excerpt_id_157af2fc7f3224cea8bd3bb2e3388abb:|:excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7:|:excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </node>
    <node id="Get All Licenses">
      <data key="d1">function</data>
      <data key="d2">Get All Licenses is a function that returns a list of all licenses created by your Salable organization, facilitating license management.</data>
      <data key="d3">excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </node>
    <node id="GetLicenseOptions">
      <data key="d1">configuration</data>
      <data key="d2">GetLicenseOptions is a configuration object that defines various parameters for filtering license retrievals such as status and pagination.:|:GetLicenseOptions is a configuration type defining the parameters and options that can be used with the Get All Usage Records function.</data>
      <data key="d3">excerpt_id_e8114e81957601460a88df02adf09794:|:excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </node>
    <node id="licenses.getAll">
      <data key="d1">function</data>
      <data key="d2">licenses.getAll is a method within the Salable API utilized to fetch all licenses, showcasing the API's functionality.</data>
      <data key="d3">excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </node>
    <node id="Create Many Licenses">
      <data key="d1">function</data>
      <data key="d2">Create Many Licenses is a function within the Salable API used to generate multiple licenses based on provided attributes.</data>
      <data key="d3">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </node>
    <node id="createManyAdHocLicenseParams">
      <data key="d1">configuration</data>
      <data key="d2">createManyAdHocLicenseParams specifies the required and optional parameters needed to create multiple ad hoc licenses through the API.</data>
      <data key="d3">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </node>
    <node id="Get One License">
      <data key="d1">function</data>
      <data key="d2">Get One License is a function that retrieves a single license based on the provided UUID, facilitating license management.</data>
      <data key="d3">excerpt_id_74b2b33402d8e1fd884f911b29d71f78</data>
    </node>
    <node id="licenseUuid">
      <data key="d1">variable</data>
      <data key="d2">licenseUuid is a required string variable representing the UUID of the license that needs to be fetched using the API.:|:licenseUuid is a variable that holds the UUID of the specific license associated with a usage record.:|:licenseUuid is a required input parameter that represents the UUID of the license to be updated in the Update License function.:|:licenseUuid is a required parameter for the cancel License function, representing the unique identifier for the License to be canceled.</data>
      <data key="d3">excerpt_id_38026b862e04409b6fbda7aa7728c287:|:excerpt_id_9372e24bc34dbf7191b5152899bc4fb2:|:excerpt_id_74b2b33402d8e1fd884f911b29d71f78:|:excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </node>
    <node id="Get Licenses for a Grantee ID">
      <data key="d1">function</data>
      <data key="d2">Get Licenses for a Grantee ID is a function that returns licenses associated with a specific grantee ID, allowing users to fetch relevant license data.</data>
      <data key="d3">excerpt_id_3e7d435b3bee1520f4473a125ea800e1</data>
    </node>
    <node id="Check License">
      <data key="d1">function</data>
      <data key="d2">Check License is a function that retrieves the capabilities the grantee(s) have access to, based on provided parameters.</data>
      <data key="d3">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </node>
    <node id="checkLicenseParams">
      <data key="d1">configuration</data>
      <data key="d2">checkLicenseParams is a configuration object detailing the required and optional parameters for the Check License function.</data>
      <data key="d3">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </node>
    <node id="CheckLicenseInput">
      <data key="d1">variable</data>
      <data key="d2">CheckLicenseInput is the data structure type used to define the input parameters required for the Check License function call.</data>
      <data key="d3">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </node>
    <node id="License Check Object">
      <data key="d1">example</data>
      <data key="d2">License Check Object is an example returned from the API providing insights into the license check results for specific grantees.</data>
      <data key="d3">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </node>
    <node id="granteeIds">
      <data key="d1">variable</data>
      <data key="d2">granteeIds is an array of strings containing the IDs of the grantees for whom the license capabilities are being checked.</data>
      <data key="d3">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </node>
    <node id="Update Many Licenses">
      <data key="d1">function</data>
      <data key="d2">Update Many Licenses is a function that updates multiple licenses with specified values from the request body, as demonstrated in the code sample.</data>
      <data key="d3">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5</data>
    </node>
    <node id="updateManyLicensesParams">
      <data key="d1">variable</data>
      <data key="d2">updateManyLicensesParams is an input type required for the Update Many Licenses function, consisting of an array of objects containing grantee IDs and UUIDs.</data>
      <data key="d3">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5</data>
    </node>
    <node id="licenses object">
      <data key="d1">interface</data>
      <data key="d2">licenses object is an interface defined in the Salable API that outlines the structure and properties of the licenses being managed.</data>
      <data key="d3">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5</data>
    </node>
    <node id="Cancel License">
      <data key="d1">function</data>
      <data key="d2">Cancel License is a method used to cancel an ad hoc License in the Salable SDK.</data>
      <data key="d3">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </node>
    <node id="cancel License Documentation">
      <data key="d1">example</data>
      <data key="d2">The cancel License Documentation provides further details about the request and how to properly use the cancel License function.</data>
      <data key="d3">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </node>
    <node id="TypeScript Code Sample">
      <data key="d1">example</data>
      <data key="d2">The TypeScript Code Sample demonstrates how to implement the cancel License function using the Salable SDK.</data>
      <data key="d3">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </node>
    <node id="cancel License API Endpoint">
      <data key="d1">interface</data>
      <data key="d2">The cancel License API Endpoint refers to the specific endpoint in the Salable API documentation used to cancel a License.</data>
      <data key="d3">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </node>
    <node id="Create License">
      <data key="d1">function</data>
      <data key="d2">Create License is a method designed to create an ad hoc license within the Salable environment.</data>
      <data key="d3">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </node>
    <node id="CreateAdhocLicenseInput">
      <data key="d1">configuration</data>
      <data key="d2">CreateAdhocLicenseInput is a required parameter structure that specifies the necessary details for creating an ad hoc license.</data>
      <data key="d3">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </node>
    <node id="Parameters">
      <data key="d1">feature</data>
      <data key="d2">Parameters include options like planUuid, member, granteeId, status, and endTime, which are essential for creating a license.</data>
      <data key="d3">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </node>
    <node id="Plan view">
      <data key="d1">interface</data>
      <data key="d2">Plan view refers to the section in the Salable dashboard where plan details can be found, notably the planUuid.</data>
      <data key="d3">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </node>
    <node id="updateLicenseParams">
      <data key="d1">configuration</data>
      <data key="d2">updateLicenseParams is a required configuration object that contains parameters like granteeId for updating license details.</data>
      <data key="d3">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </node>
    <node id="license object">
      <data key="d1">feature</data>
      <data key="d2">license object is a feature provided by the Salable API that encapsulates the details and attributes of a license, which can be retrieved or updated using the API.</data>
      <data key="d3">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </node>
    <node id="Cancel Many Licenses">
      <data key="d1">function</data>
      <data key="d2">Cancel Many Licenses is a method used to cancel multiple ad hoc Licenses in a single operation.</data>
      <data key="d3">excerpt_id_a78cd4046bc4c2cd90d128228e28893d</data>
    </node>
    <node id="licenseUuids">
      <data key="d1">variable</data>
      <data key="d2">licenseUuids is an array of UUIDs representing the licenses that need to be canceled, required as a parameter for the Cancel Many Licenses function.</data>
      <data key="d3">excerpt_id_a78cd4046bc4c2cd90d128228e28893d</data>
    </node>
    <node id="Get Licenses Count">
      <data key="d1">function</data>
      <data key="d2">Get Licenses Count is a function that returns the aggregate count number of licenses, specifically tailored for interfaces requiring license data.</data>
      <data key="d3">excerpt_id_b48f747b61cda7dfebb331b0fdd6525d</data>
    </node>
    <node id="licenseCount">
      <data key="d1">variable</data>
      <data key="d2">licenseCount is a variable that stores the result from the Get Licenses Count function, representing the total number of active licenses.:|:licenseCount is a variable that stores the number of active, assigned, or unassigned licenses retrieved from the Salable API.</data>
      <data key="d3">excerpt_id_b48f747b61cda7dfebb331b0fdd6525d:|:excerpt_id_ee6311eda1a74d2cb86e7774e2dda643</data>
    </node>
    <node id="GetLicenseCountOptions">
      <data key="d1">configuration</data>
      <data key="d2">GetLicenseCountOptions is a configuration type that specifies the options available for the Get Licenses Count function, including parameters for filtering results.</data>
      <data key="d3">excerpt_id_b48f747b61cda7dfebb331b0fdd6525d</data>
    </node>
    <node id="subscriptionUuid">
      <data key="d1">variable</data>
      <data key="d2">subscriptionUuid is a URL parameter used in the endpoint to specify which subscription's seat count will be modified.:|:subscriptionUuid is a required parameter that denotes the unique identifier for the subscription whose payment method is to be retrieved.:|:subscriptionUuid is a required parameter that specifies the unique identifier of the subscription to be canceled.:|:Subscription UUID is an identifier that associates a License with a particular subscription, if applicable.:|:subscriptionUuid is a variable representing the unique identifier of a subscription, used to retrieve or update payment methods.:|:subscriptionUuid is a unique identifier for a subscription used in API requests to fetch specific subscription-related data.:|:subscriptionUuid is a variable used in query parameters to filter usage records by a particular license's subscription.:|:subscriptionUuid is a required parameter that denotes the unique identifier for the Subscription to which seats are being added.:|:subscriptionUuid is a required variable of type string that represents the unique identifier of a subscription to which seats are being removed.:|:subscriptionUuid is a required string parameter that specifies the UUID of the subscription for which the customer portal link is requested.:|:The 'subscriptionUuid' variable is a unique identifier for a specific subscription in the Salable API.:|:subscriptionUuid is a required variable that represents the unique ID of the subscription for which invoices will be displayed.:|:subscriptionUuid is a required variable of type string, representing the unique identifier for the subscription that is to be updated.:|:subscriptionUuid is a required variable representing the UUID of the subscription that must be provided to access subscription details.:|:subscriptionUuid is a required parameter that specifies the unique identifier of the subscription to be returned.:|:subscriptionUuid is a variable representing the unique identifier for a subscription used as a filter in the Get Licenses Count function.:|:subscriptionUuid is a required variable of type string, which holds the unique identifier for the subscription that is to be canceled.:|:subscriptionUuid is a required variable that represents the UUID of the subscription being moved to a new plan.:|:subscriptionUuid is a variable that holds the unique identifier for a subscription, used as a parameter in API requests to fetch relevant data.:|:subscriptionUuid is a variable used to uniquely identify a specific subscription for which the cancel link is being retrieved.:|:subscriptionUuid is a required parameter of type string, representing the UUID of the subscription that needs to be reactivated.:|:subscriptionUuid is a required parameter for the function, representing the UUID of the subscription to fetch the payment link.:|:subscriptionUuid is a variable representing the unique identifier for a subscription that is being canceled.:|:subscriptionUuid is a variable that identifies the user's subscription and is required as a property when rendering components such as SalableInvoices.:|:subscriptionUuid is a unique identifier for a subscription, which is necessary for making changes to it.:|:subscriptionUuid is a required variable representing the UUID of the subscription whose invoices are to be fetched.:|:subscriptionUuid is a variable used to identify a specific subscription, essential for generating invoice data in the SessionCreateInvoiceRequest function.</data>
      <data key="d3">excerpt_id_d979fc2428d484e09ae3b62b942d5968:|:excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c:|:excerpt_id_aeed752a0854093562fcab1a2782b1b3:|:excerpt_id_9e7d62a87ad119e8af876e0901542e69:|:excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00:|:excerpt_id_eb980ddfe99dddb529d8107a56a3e090:|:excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542:|:excerpt_id_a873e2cace623f12f690b112f35aa4f7:|:excerpt_id_ee6311eda1a74d2cb86e7774e2dda643:|:excerpt_id_7f708cd18160447dd54fdd10c6e9203e:|:excerpt_id_0605f5987dc662b127cbcde1ca896ece:|:excerpt_id_b48f747b61cda7dfebb331b0fdd6525d:|:excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce:|:excerpt_id_fde1d0189eaa75074956787efcc59cec:|:excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2:|:excerpt_id_a4b8e11006d615b209673feede32f6c5:|:excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_310437ff88c214d922e257631db6a72d:|:excerpt_id_75226dd1c0681dee658c82abefbedb30:|:excerpt_id_79ba54d7da0c670cf02d0b7a721733af:|:excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a:|:excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_d9c1267809cd58cbd21415af67a458ab:|:excerpt_id_a019e4a9249294b3ee673d179bd32d72:|:excerpt_id_5ebe47a66fffe70faec5fc051e3e9666:|:excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </node>
    <node id="API documentation">
      <data key="d1">feature</data>
      <data key="d2">API documentation provides detailed information about how to use the Get Licenses Count function, including parameters and return types.</data>
      <data key="d3">excerpt_id_b48f747b61cda7dfebb331b0fdd6525d</data>
    </node>
    <node id="Plan Capability Object">
      <data key="d1">configuration</data>
      <data key="d2">Plan Capability Object refers to the structured data returned by the Get Capabilities function, detailing the capabilities of a plan.</data>
      <data key="d3">excerpt_id_af600649bc560ccce1729a149fdba460</data>
    </node>
    <node id="Get Currencies">
      <data key="d1">function</data>
      <data key="d2">Get Currencies is a function that retrieves a list of all Currencies associated with a specific Plan.</data>
      <data key="d3">excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d</data>
    </node>
    <node id="Plan Currency Object">
      <data key="d1">api</data>
      <data key="d2">Plan Currency Object is part of the API documentation that details the structure and attributes of currency data related to a specific Plan.</data>
      <data key="d3">excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d</data>
    </node>
    <node id="plan">
      <data key="d1">variable</data>
      <data key="d2">plan is a variable in the code sample that stores the response from the API call, holding the Currencies associated with a specific Plan.</data>
      <data key="d3">excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d</data>
    </node>
    <node id="salable.plans.getCurrencies">
      <data key="d1">function</data>
      <data key="d2">salable.plans.getCurrencies is a function call made to retrieve the Currencies for a specific Plan by its unique identifier.</data>
      <data key="d3">excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d</data>
    </node>
    <node id="Get One Plan">
      <data key="d1">function</data>
      <data key="d2">Get One Plan is a function that retrieves the details of a single plan identified by its UUID.</data>
      <data key="d3">excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b</data>
    </node>
    <node id="plan object">
      <data key="d1">feature</data>
      <data key="d2">plan object refers to the structured data returned by the API that contains details of the requested plan.</data>
      <data key="d3">excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b</data>
    </node>
    <node id="Get Checkout Link">
      <data key="d1">api</data>
      <data key="d2">Get Checkout Link is an API endpoint that returns the checkout link for a paid plan, allowing users to initiate purchase processes.</data>
      <data key="d3">excerpt_id_ec8853c4684794f440831d669649c3b8</data>
    </node>
    <node id="GetPlanCheckoutOptions">
      <data key="d1">configuration</data>
      <data key="d2">GetPlanCheckoutOptions is a configuration type that encompasses the options available for customizing the checkout link, including URLs and identifiers.:|:GetPlanCheckoutOptions encompasses the query parameters necessary for configuring the checkout process, ensuring user-directed outcomes.</data>
      <data key="d3">excerpt_id_ec8853c4684794f440831d669649c3b8:|:excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </node>
    <node id="customerEmail">
      <data key="d1">variable</data>
      <data key="d2">customerEmail is a parameter that captures the email address of the customer, enabling notifications or correspondence regarding their purchase.:|:customerEmail is utilized to pre-fill the email address of the customer during the checkout process, streamlining the user experience.:|:customerEmail is a variable that pre-fills the customer's email in the Stripe checkout process to streamline user experience.</data>
      <data key="d3">excerpt_id_3e5aff90a7d27611da426420fa021bf0:|:excerpt_id_b70787affc67ce541e7d959da486303e:|:excerpt_id_ec8853c4684794f440831d669649c3b8</data>
    </node>
    <node id="getFeatures">
      <data key="d1">function</data>
      <data key="d2">getFeatures is a function within the Salable API that returns a list of all features associated with a specified plan.</data>
      <data key="d3">excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0</data>
    </node>
    <node id="Plan Feature Object">
      <data key="d1">configuration</data>
      <data key="d2">Plan Feature Object describes the structure and details of features related to a plan in the Salable API.</data>
      <data key="d3">excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0</data>
    </node>
    <node id="Get All Usage Records for a Grantee">
      <data key="d1">function</data>
      <data key="d2">Get All Usage Records for a Grantee is a function that retrieves a list of all usage records associated with a specific grantee's metered licenses.</data>
      <data key="d3">excerpt_id_e8114e81957601460a88df02adf09794</data>
    </node>
    <node id="GranteeId">
      <data key="d1">variable</data>
      <data key="d2">GranteeId is a required variable that uniquely identifies the grantee for whom the usage records are being fetched.</data>
      <data key="d3">excerpt_id_e8114e81957601460a88df02adf09794</data>
    </node>
    <node id="Usage Record Object">
      <data key="d1">example:|:feature</data>
      <data key="d2">Usage Record Object is a documented entity that outlines the structure of the data returned by the API when querying for usage records.:|:The Usage Record Object provides a comprehensive structure for understanding the details and attributes of each usage record.</data>
      <data key="d3">excerpt_id_8f56e428f951a352b3a5155a7b79b723:|:excerpt_id_e8114e81957601460a88df02adf09794</data>
    </node>
    <node id="UpdateLicenseUsage">
      <data key="d1">function</data>
      <data key="d2">UpdateLicenseUsage is a function within the Salable API that increments the usage count on a specific license based on provided parameters.</data>
      <data key="d3">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </node>
    <node id="UpdateLicenseUsageOptions">
      <data key="d1">configuration</data>
      <data key="d2">UpdateLicenseUsageOptions is a configuration object required by the UpdateLicenseUsage function, detailing the necessary parameters for the update process.</data>
      <data key="d3">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </node>
    <node id="increment">
      <data key="d1">variable</data>
      <data key="d2">increment is a numerical variable indicating the number of seats to be created.:|:increment is a numerical value defined within countOptions that indicates how much to increase the usage count of the license.:|:increment is a string variable indicating the value by which to increase the usage count for the license.</data>
      <data key="d3">excerpt_id_6b75e0b0ccb8be642042580b0d5bc451:|:excerpt_id_af891ba93357fd6013d5bbd53f638736:|:excerpt_id_fde1d0189eaa75074956787efcc59cec</data>
    </node>
    <node id="idempotencyKey">
      <data key="d1">variable</data>
      <data key="d2">idempotencyKey is a string variable used to ensure that requests to increment usage are idempotent, preventing duplicate processing.</data>
      <data key="d3">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </node>
    <node id="Get Current Usage Record for Grantee on Plan">
      <data key="d1">function</data>
      <data key="d2">Get Current Usage Record for Grantee on Plan is a function that returns the currency usage record for a metered license.</data>
      <data key="d3">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </node>
    <node id="CurrentUsageOptions">
      <data key="d1">configuration</data>
      <data key="d2">CurrentUsageOptions is a configuration object that contains parameters required for the function to retrieve current usage records.</data>
      <data key="d3">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </node>
    <node id="Records">
      <data key="d1">feature</data>
      <data key="d2">Records refers to the output data retrieved by the function, representing current usage records for a specified license.</data>
      <data key="d3">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </node>
    <node id="import statement">
      <data key="d1">interface</data>
      <data key="d2">The import statement is a code interface used to include the Salable SDK in a TypeScript environment.</data>
      <data key="d3">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </node>
    <node id="Get a Subscription Update Payment Link">
      <data key="d1">function</data>
      <data key="d2">Get a Subscription Update Payment Link is a function that retrieves the update payment link for a specific subscription in the Salable Node SDK.</data>
      <data key="d3">excerpt_id_310437ff88c214d922e257631db6a72d</data>
    </node>
    <node id="Subscription Payment Link Object">
      <data key="d1">configuration</data>
      <data key="d2">Subscription Payment Link Object describes the structure of the response from the API when a subscription update payment link is retrieved.</data>
      <data key="d3">excerpt_id_310437ff88c214d922e257631db6a72d</data>
    </node>
    <node id="salable">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">salable is an instance created from the Salable API, initialized with the API key and version.:|:salable is an instance of the Salable class within the Node.js context, used to interact with the Salable API, specifically for managing subscriptions.:|:salable is an instance of the Salable API client initialized with the API key and version.</data>
      <data key="d3">excerpt_id_310437ff88c214d922e257631db6a72d:|:excerpt_id_ddaf4e6518a73006b4437f10458e27ba:|:excerpt_id_de8626e7234f5a3c62010de5ee420028</data>
    </node>
    <node id="Increment Subscription Seats">
      <data key="d1">feature</data>
      <data key="d2">Increment Subscription Seats is a feature that allows adding seats to a Subscription, which are initially unassigned until granteeIds are assigned using another method.</data>
      <data key="d3">excerpt_id_fde1d0189eaa75074956787efcc59cec</data>
    </node>
    <node id="Options">
      <data key="d1">configuration</data>
      <data key="d2">Options refer to the parameters that can be specified when adding seats, including the number of seats and whether to create prorations.</data>
      <data key="d3">excerpt_id_fde1d0189eaa75074956787efcc59cec</data>
    </node>
    <node id="proration">
      <data key="d1">configuration:|:function:|:variable</data>
      <data key="d2">proration refers to the handling of prorated charges when modifying a subscription plan, with various settings affecting the behavior.:|:proration is a string variable indicating how proration invoices should be handled during the seat addition process.:|:proration is a configuration option that determines how billing adjustments are handled when changing subscription plans.:|:proration is an optional variable that determines whether to create proration invoice items during the seat removal process.:|:proration is a function that creates prorations for subscription adjustments or billing purposes.:|:Proration variable specifies the behavior regarding invoice proration when moving a subscription to a different plan, with multiple options for handling.:|:Proration is a boolean property indicating whether a specific calculation considers proportional values, with an example of true.:|:proration is an optional setting that determines how proration invoice items will be created during the change of the subscription plan.</data>
      <data key="d3">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d:|:excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2:|:excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a:|:excerpt_id_0b9474a6f5a5fdb347caada72f379c22:|:excerpt_id_2a288d213011152a702ad1023fbb23c8:|:excerpt_id_fde1d0189eaa75074956787efcc59cec:|:excerpt_id_eb980ddfe99dddb529d8107a56a3e090:|:excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </node>
    <node id="Subscription Invoice">
      <data key="d1">feature</data>
      <data key="d2">Subscription Invoice is a feature that returns a list of invoices associated with a specific subscription.</data>
      <data key="d3">excerpt_id_0605f5987dc662b127cbcde1ca896ece</data>
    </node>
    <node id="GetAllInvoicesOptions">
      <data key="d1">configuration</data>
      <data key="d2">GetAllInvoicesOptions is a configuration object that defines the optional parameters for fetching invoices, including cursor and take.</data>
      <data key="d3">excerpt_id_0605f5987dc662b127cbcde1ca896ece</data>
    </node>
    <node id="GET /subscriptions/123?expand=licenses">
      <data key="d1">example</data>
      <data key="d2">This example shows how to make a request to the GET /subscriptions API, with a specific subscription ID and the expand parameter for licenses.</data>
      <data key="d3">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </node>
    <node id="GET /licenses?subscriptionUuid=123">
      <data key="d1">example</data>
      <data key="d2">This example illustrates how to use the GET /licenses endpoint with the subscriptionUuid parameter to fetch associated licenses.</data>
      <data key="d3">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </node>
    <node id="update Subscription's plan endpoint">
      <data key="d1">api</data>
      <data key="d2">This API endpoint was previously used to update a subscription's plan but has been deprecated in favour of a newer endpoint.</data>
      <data key="d3">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </node>
    <node id="change Subscription plan endpoint">
      <data key="d1">api</data>
      <data key="d2">The change Subscription plan endpoint is the new method for modifying a subscription's plan, offering additional parameters for proration behaviour.</data>
      <data key="d3">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </node>
    <node id="checkout links">
      <data key="d1">feature</data>
      <data key="d2">Checkout links are URLs generated for purchasing subscriptions, though they have been moved from pricing table endpoints to dynamic fetching mechanisms.</data>
      <data key="d3">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </node>
    <node id="get Plan checkout link endpoint">
      <data key="d1">api</data>
      <data key="d2">The get Plan checkout link endpoint allows fetching the checkout link for a specific plan, ensuring users can still obtain purchase links.</data>
      <data key="d3">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </node>
    <node id="Get a Subscription Payment Method">
      <data key="d1">function</data>
      <data key="d2">Get a Subscription Payment Method is a function that retrieves the payment method used to pay for a subscription.</data>
      <data key="d3">excerpt_id_a4b8e11006d615b209673feede32f6c5</data>
    </node>
    <node id="Subscription Payment Method Object">
      <data key="d1">example</data>
      <data key="d2">Subscription Payment Method Object is a documented example that illustrates the structure of the data returned by the API when retrieving a payment method for a subscription.</data>
      <data key="d3">excerpt_id_a4b8e11006d615b209673feede32f6c5</data>
    </node>
    <node id="v2">
      <data key="d1">configuration:|:version</data>
      <data key="d2">v2 refers to the version of the Salable API that is currently being utilized, indicating any updates or changes since previous versions.:|:v2 indicates the version of the API being used in requests, specifically in the request header.:|:v2 indicates the version of the Salable API being used in the example code.</data>
      <data key="d3">excerpt_id_1447c9ad088ee587d295240cee723646:|:excerpt_id_a4b8e11006d615b209673feede32f6c5:|:excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="Get All Subscriptions">
      <data key="d1">function</data>
      <data key="d2">Get All Subscriptions is a function that retrieves a list of all subscriptions created by a Salable organization.</data>
      <data key="d3">excerpt_id_9f79e3a1bec25332acbb8c2bde410424</data>
    </node>
    <node id="GetSubscriptionOptions">
      <data key="d1">configuration</data>
      <data key="d2">GetSubscriptionOptions are the parameters that can be used to customize the request for fetching subscriptions, including optional filters like status, email, owner, and pagination.:|:GetSubscriptionOptions is an object type used to specify optional parameters for the Get One Subscription request.</data>
      <data key="d3">excerpt_id_9f79e3a1bec25332acbb8c2bde410424:|:excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </node>
    <node id="Subscription Object">
      <data key="d1">configuration:|:example:|:feature:|:interface</data>
      <data key="d2">Subscription Object provides details about the structure and data related to subscriptions, as referenced in the API documentation.:|:Subscription Object refers to the data structure returned by the API that contains detailed information about each subscription.:|:Subscription Object is the interface that defines the structure and attributes related to subscriptions in the Salable API.:|:The Subscription Object provides the structure and details related to subscriptions that can be returned by the API.</data>
      <data key="d3">excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a:|:excerpt_id_9f79e3a1bec25332acbb8c2bde410424:|:excerpt_id_9e7d62a87ad119e8af876e0901542e69:|:excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </node>
    <node id="Get Cancel Subscription Link">
      <data key="d1">api</data>
      <data key="d2">Get Cancel Subscription Link is an API endpoint that returns a link to cancel a specific subscription, facilitating the management of subscriptions in the Salable system.</data>
      <data key="d3">excerpt_id_75226dd1c0681dee658c82abefbedb30</data>
    </node>
    <node id="Cancel Subscription Link Object">
      <data key="d1">configuration</data>
      <data key="d2">Cancel Subscription Link Object is a reference in the API documentation detailing the structure and required fields of the response when a cancel subscription link is requested.</data>
      <data key="d3">excerpt_id_75226dd1c0681dee658c82abefbedb30</data>
    </node>
    <node id="Get One Subscription">
      <data key="d1">function</data>
      <data key="d2">Get One Subscription is a function within the Salable API designed to return the details of a single subscription based on its UUID.</data>
      <data key="d3">excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </node>
    <node id="Remove Subscription Seats">
      <data key="d1">function</data>
      <data key="d2">Remove Subscription Seats is a function that allows the removal of seats from a subscription, provided the seats are unassigned.</data>
      <data key="d3">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </node>
    <node id="decrement">
      <data key="d1">variable:|:example</data>
      <data key="d2">decrement is used as a parameter in the removeSeats function to indicate how many seats should be reduced from the subscription count.:|:decrement is a variable that specifies the number of seats to be removed from a subscription.:|:decrement is an option within the removeSeats function call that specifies the number of seats to be removed from the subscription.:|:decrement is a variable of type number that specifies how many seats are to be removed from the subscription.</data>
      <data key="d3">excerpt_id_0b9474a6f5a5fdb347caada72f379c22:|:excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f:|:excerpt_id_eb980ddfe99dddb529d8107a56a3e090:|:excerpt_id_de8626e7234f5a3c62010de5ee420028</data>
    </node>
    <node id="RemoveSubscriptionSeatsOption">
      <data key="d1">configuration</data>
      <data key="d2">RemoveSubscriptionSeatsOption is a configuration object that contains options for customizing the seat removal process in a subscription.</data>
      <data key="d3">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </node>
    <node id="Subscription Seat Object">
      <data key="d1">example</data>
      <data key="d2">Subscription Seat Object illustrates the data structure related to subscription seats in the API.</data>
      <data key="d3">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </node>
    <node id="Remove SubscriptionSeatsOption" />
    <node id="Get Switchable Plans for a Subscribed User">
      <data key="d1">function</data>
      <data key="d2">Get Switchable Plans for a Subscribed User is a function that retrieves the details of a single subscription based on the provided subscription UUID.</data>
      <data key="d3">excerpt_id_9e7d62a87ad119e8af876e0901542e69</data>
    </node>
    <node id="Cancel a Subscription">
      <data key="d1">function</data>
      <data key="d2">Cancel a Subscription is a function that allows users to cancel a subscription with options for the termination timing, such as immediate cancellation or cancellation at the end of the billing period.:|:Cancel a Subscription is a function that allows cancellation of a subscription using a specified subscriptionUuid, defining whether it cancels immediately or at the end of the subscription.</data>
      <data key="d3">excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00:|:excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce</data>
    </node>
    <node id="CancelSubscriptionOptions">
      <data key="d1">configuration</data>
      <data key="d2">CancelSubscriptionOptions is a configuration that specifies options for canceling subscriptions, such as the timing of the cancellation.</data>
      <data key="d3">excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce</data>
    </node>
    <node id="when">
      <data key="d1">variable</data>
      <data key="d2">when is a required variable within CancelSubscriptionOptions, which determines if the cancellation occurs immediately or at the end of the billing period.:|:when is a variable that determines the timing of cancellation for the subscription, either immediate or at the end of its term.</data>
      <data key="d3">excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00:|:excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce</data>
    </node>
    <node id="Get a Customer Portal Link for a Subscription">
      <data key="d1">function</data>
      <data key="d2">Get a Customer Portal Link for a Subscription is a function that returns the customer portal link associated with a specific subscription, allowing easy access for customers.</data>
      <data key="d3">excerpt_id_d9c1267809cd58cbd21415af67a458ab</data>
    </node>
    <node id="Subscription Portal Link Object">
      <data key="d1">feature</data>
      <data key="d2">Subscription Portal Link Object is the response type provided by the API which contains the link to the customer portal once the subscription is successfully retrieved.</data>
      <data key="d3">excerpt_id_d9c1267809cd58cbd21415af67a458ab</data>
    </node>
    <node id="await salable.subscriptions.getOne">
      <data key="d1">function</data>
      <data key="d2">await salable.subscriptions.getOne is a function call that retrieves a single subscription based on its UUID and is used in the provided code sample.</data>
      <data key="d3">excerpt_id_d9c1267809cd58cbd21415af67a458ab</data>
    </node>
    <node id="Update Subscription">
      <data key="d1">function</data>
      <data key="d2">Update Subscription is a function that updates properties on a subscription, specifically utilizing the Salable API for operational tasks.</data>
      <data key="d3">excerpt_id_d979fc2428d484e09ae3b62b942d5968</data>
    </node>
    <node id="UpdateSubscriptionInput">
      <data key="d1">configuration</data>
      <data key="d2">UpdateSubscriptionInput is a required configuration object that includes options for updating a subscription, such as the owner ID.</data>
      <data key="d3">excerpt_id_d979fc2428d484e09ae3b62b942d5968</data>
    </node>
    <node id="Subscription update">
      <data key="d1">feature</data>
      <data key="d2">Subscription update is a feature described in the API documentation, detailing how to manage subscription properties through API requests.</data>
      <data key="d3">excerpt_id_d979fc2428d484e09ae3b62b942d5968</data>
    </node>
    <node id="Change a Subscription's Plan">
      <data key="d1">function</data>
      <data key="d2">Change a Subscription's Plan is a function that allows a user to move a subscription to a new plan, with optional proration behavior.:|:Change a Subscription's Plan is a function that modifies a subscription's plan based on the UUID, potentially canceling and creating a new subscription based on the user's request.</data>
      <data key="d3">excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a:|:excerpt_id_e71e21c92a42f2bc62641e1f5a2e6ea4</data>
    </node>
    <node id="Reactivate a Subscription">
      <data key="d1">function</data>
      <data key="d2">Reactivate a Subscription is a method that allows a user to reactivate a subscription that was scheduled for cancellation before the billing period has passed.</data>
      <data key="d3">excerpt_id_7f708cd18160447dd54fdd10c6e9203e</data>
    </node>
    <node id="void">
      <data key="d1">return type</data>
      <data key="d2">void indicates that the Reactivate a Subscription function does not return any value upon completion.</data>
      <data key="d3">excerpt_id_7f708cd18160447dd54fdd10c6e9203e</data>
    </node>
    <node id="Get One Pricing Table">
      <data key="d1">function</data>
      <data key="d2">Get One Pricing Table is a function that retrieves all necessary data to display a pricing table for a specific identifier.</data>
      <data key="d3">excerpt_id_d96e80b895dea6915b51ebb69acff797</data>
    </node>
    <node id="pricingTableUuid">
      <data key="d1">variable</data>
      <data key="d2">pricingTableUuid is a unique identifier associated with a feature entry within the features array, linking it back to its pricing table.:|:PricingTableUuidPathParam is a path variable in an API call that denotes the unique identifier for a pricing table.:|:pricingTableUuid is a required variable that specifies the unique identifier (UUID) of the Pricing Table to build.:|:pricingTableUuid is a string that corresponds to the UUID of a pricing table that aggregates different pricing plans.:|:pricingTableUuid is a variable that denotes a specific pricing table, required for generating the corresponding session in the SessionCreatePricingTableRequest function.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c:|:excerpt_id_d96e80b895dea6915b51ebb69acff797:|:excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="Return Type">
      <data key="d1">feature</data>
      <data key="d2">Return Type describes the structure of the data returned by the Get One Pricing Table function, detailing the expected output format.</data>
      <data key="d3">excerpt_id_d96e80b895dea6915b51ebb69acff797</data>
    </node>
    <node id="Create Session">
      <data key="d1">function</data>
      <data key="d2">Create Session is a method within the Salable API that allows users to create a new session for interacting with Salable web components.</data>
      <data key="d3">excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7</data>
    </node>
    <node id="CreateSessionInput">
      <data key="d1">configuration</data>
      <data key="d2">CreateSessionInput is the required input type for the Create Session method, defining the parameters needed to successfully create a session.</data>
      <data key="d3">excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7</data>
    </node>
    <node id="SessionScope.PricingTable">
      <data key="d1">variable</data>
      <data key="d2">SessionScope.PricingTable is a variable that specifies the scope of the created session, used to indicate the component with which the session will interact.</data>
      <data key="d3">excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7</data>
    </node>
    <node id="Get One Event">
      <data key="d1">function</data>
      <data key="d2">Get One Event is a function that retrieves a single event from the Salable system using its UUID.</data>
      <data key="d3">excerpt_id_ddaf4e6518a73006b4437f10458e27ba</data>
    </node>
    <node id="eventUuid">
      <data key="d1">variable</data>
      <data key="d2">eventUuid is a required parameter for the Get One Event function, specified as a string representing the UUID of the event to be retrieved.</data>
      <data key="d3">excerpt_id_ddaf4e6518a73006b4437f10458e27ba</data>
    </node>
    <node id="Event Object">
      <data key="d1">example</data>
      <data key="d2">Event Object is an example referenced in the API documentation that details the structure of the event being returned by the Get One Event function.</data>
      <data key="d3">excerpt_id_ddaf4e6518a73006b4437f10458e27ba</data>
    </node>
    <node id="your-license-uuid">
      <data key="d1">variable:|:example</data>
      <data key="d2">your-license-uuid represents a placeholder for the unique identifier of a specific license that can be cancelled.:|:your-license-uuid is a placeholder representing the UUID of a specific license in the provided examples.</data>
      <data key="d3">excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_f45958815097879415986e68ae21cbba</data>
    </node>
    <node id="getGrantee">
      <data key="d1">api:|:function</data>
      <data key="d2">getGrantee is a function used to retrieve information about a grantee's capabilities within the Salable API.:|:getGrantee is a function that retrieves the status of a user regarding their capabilities in accessing specific features based on their license.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333:|:excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </node>
    <node id="capabilities">
      <data key="d1">variable:|:feature</data>
      <data key="d2">capabilities is a string parameter passed to the verifyLicenseCheck function, representing the capabilities that the signature authorizes.:|:capabilities is a variable that contains the data used to encode into bytes for the signature verification process.:|:Capabilities represent a list of features or functionalities provided under the License, referenced as an array of Capability schemas.:|:capabilities is a variable that lists the user permissions or abilities based on the licenses they hold, essential for access control.:|:capabilities is an array feature that holds a list of objects, detailing specific capabilities associated with a plan.:|:capabilities is a property that contains an array of objects representing different capabilities or features associated with a user's account.:|:Capabilities are features that list various operational abilities associated with a license, showing what actions can be performed.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd:|:excerpt_id_532dad11736e05ba4a1c64103447a997:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b:|:excerpt_id_aec59c84e38b8bb0a72122b3e79c8052:|:excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </node>
    <node id="your-products-uuid">
      <data key="d1">variable</data>
      <data key="d2">your-products-uuid is a placeholder variable representing the UUID identifier of a specific product for which the grantee's capabilities are being checked.</data>
      <data key="d3">excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </node>
    <node id="your-grantees-id">
      <data key="d1">variable</data>
      <data key="d2">your-grantees-id is a placeholder variable representing the ID of the grantee whose capabilities are being queried.</data>
      <data key="d3">excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </node>
    <node id="pro">
      <data key="d1">feature</data>
      <data key="d2">pro is a plan feature indicating a specific subscription or capability that a user might have access to.</data>
      <data key="d3">excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </node>
    <node id="getCheckoutLink">
      <data key="d1">function</data>
      <data key="d2">getCheckoutLink is a function that generates a checkout link for a payment system based on provided parameters including API key and plan UUID.</data>
      <data key="d3">excerpt_id_d9e1d76334e0264800ec30320373ba71</data>
    </node>
    <node id="checkoutUrl">
      <data key="d1">variable</data>
      <data key="d2">checkoutUrl is a variable that contains the generated URL for a customer's checkout link for purchasing a plan.:|:checkoutUrl is a variable that holds the URL for the checkout process, returned after calling getCheckoutLink.</data>
      <data key="d3">excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_ddc9e4fbd355f7d9a819edc36d148407</data>
    </node>
    <node id="your-salable-plans-uuid">
      <data key="d1">variable</data>
      <data key="d2">your-salable-plans-uuid is a placeholder variable indicating the unique identifier for a specific payment plan in the Salable API.</data>
      <data key="d3">excerpt_id_d9e1d76334e0264800ec30320373ba71</data>
    </node>
    <node id="quantity">
      <data key="d1">variable</data>
      <data key="d2">Quantity is an integer data property representing the amount of items involved, with an example being 1.:|:quantity is a variable indicating the number of items associated with the subscription, which must be at least 1.:|:quantity specifies the number of seats a customer is purchasing, relevant for checkout functionality.:|:quantity specifies the number of seats the customer is paying for, particularly for per seat plans.:|:quantity is a variable parameter used to specify the number of seats for a billing model, defaulting to a minimum seat count.:|:quantity is a variable that specifies the number of seats or items being purchased, with a default based on the plan's minimum requirements.</data>
      <data key="d3">excerpt_id_b70787affc67ce541e7d959da486303e:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab:|:excerpt_id_2a288d213011152a702ad1023fbb23c8:|:excerpt_id_c7ede61793c23fd3416361ade4773f19:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </node>
    <node id="Node.js">
      <data key="d1">configuration:|:interface</data>
      <data key="d2">Node.js is a runtime environment where the Salable API can be implemented using JavaScript for license management.:|:Node.js is a server-side JavaScript runtime that enables the execution of JavaScript code outside of a web browser, often used in conjunction with Salable for backend processing.:|:Node.js is a runtime environment used here for executing JavaScript code, particularly for making API calls to the Salable service.</data>
      <data key="d3">excerpt_id_de8626e7234f5a3c62010de5ee420028:|:excerpt_id_58ff1c48dee01d0183a336f780b53149:|:excerpt_id_f45958815097879415986e68ae21cbba</data>
    </node>
    <node id="Version v2">
      <data key="d1">configuration</data>
      <data key="d2">Version v2 refers to the specific version of the Salable API being used for license cancellation operations.</data>
      <data key="d3">excerpt_id_f45958815097879415986e68ae21cbba</data>
    </node>
    <node id="Fetch API">
      <data key="d1">api</data>
      <data key="d2">Fetch API is a web API that allows making network requests to servers, such as fetching subscription data.</data>
      <data key="d3">excerpt_id_ee6311eda1a74d2cb86e7774e2dda643</data>
    </node>
    <node id="active">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">active is a status configuration that indicates which subscriptions are currently active and usable.:|:active is a boolean variable that determines whether the price object is currently active and usable in transactions.:|:active is a boolean variable indicating whether the subscription plan is currently active or not.:|:active is a boolean variable indicating whether the entity is currently active, shown with an example value of true.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_ee6311eda1a74d2cb86e7774e2dda643:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="Add Seats">
      <data key="d1">function</data>
      <data key="d2">Add Seats is a function provided by the Salable API which enables the addition of seats to a subscription, handling both free plans and paid subscriptions.</data>
      <data key="d3">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </node>
    <node id="Remove Seats">
      <data key="d1">function</data>
      <data key="d2">Remove Seats is a function in the Salable API that allows for the removal of seats from a subscription, contingent on the seats being unassigned.</data>
      <data key="d3">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </node>
    <node id="Free Plan">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">The Free Plan is a pricing configuration that may include a trial period and be displayed in a default pricing table, allowing users to select relevant features and assign values.:|:Free Plan refers to a type of subscription that allows for basic usage of the Salable service with limitations compared to paid subscriptions.</data>
      <data key="d3">excerpt_id_dcbbc112726c43262b223ebfe3ca030b:|:excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </node>
    <node id="Paid Subscription">
      <data key="d1">("variable"</data>
      <data key="d2">Paid Subscription refers to a type of subscription that offers extended features and capabilities within the Salable service.</data>
      <data key="d3">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </node>
    <node id="ad hoc license">
      <data key="d1">feature</data>
      <data key="d2">Ad hoc licenses enable temporary free access to specific users for a paid plan, which can be created programmatically via the Salable API.</data>
      <data key="d3">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </node>
    <node id="YOUR-SALABLE-API-KEY">
      <data key="d1">variable</data>
      <data key="d2">YOUR-SALABLE-API-KEY is a placeholder variable representing a specific Salable API key that authenticates API requests.</data>
      <data key="d3">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </node>
    <node id="PLAN_UUID">
      <data key="d1">variable</data>
      <data key="d2">PLAN_UUID is a placeholder variable representing the unique identifier for a specific plan available in the Salable API.</data>
      <data key="d3">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </node>
    <node id="GRANTEE_ID">
      <data key="d1">variable</data>
      <data key="d2">GRANTEE_ID is a placeholder variable used to refer to a specific user who is granted a license through the Salable API.</data>
      <data key="d3">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </node>
    <node id="https://api.salable.app/licenses">
      <data key="d1">interface</data>
      <data key="d2">This is the endpoint interface where license creation requests can be sent in the Salable API.</data>
      <data key="d3">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </node>
    <node id="subscriptions.cancel">
      <data key="d1">function</data>
      <data key="d2">subscriptions.cancel is a function that allows for the cancellation of a subscription based on its UUID with options for immediate or end-of-billing period cancellation.</data>
      <data key="d3">excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </node>
    <node id="'your-salable-api-key'">
      <data key="d1">variable</data>
      <data key="d2">'your-salable-api-key' is a placeholder string representing the API key required for authenticating requests to the Salable API.</data>
      <data key="d3">excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </node>
    <node id="'your-subscription-uuid'">
      <data key="d1">variable</data>
      <data key="d2">'your-subscription-uuid' is a placeholder string that denotes the unique identifier for the subscription to be canceled.</data>
      <data key="d3">excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </node>
    <node id="'when'">
      <data key="d1">variable</data>
      <data key="d2">'when' is a query parameter that specifies the timing of the subscription cancellation, either 'now' for immediate termination or 'end' to cancel at the end of the billing cycle.</data>
      <data key="d3">excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </node>
    <node id="changeSubscriptionPlan">
      <data key="d1">function</data>
      <data key="d2">changeSubscriptionPlan is a function that allows users to change the subscription plan for a user account, facilitating plan upgrades or downgrades.</data>
      <data key="d3">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2</data>
    </node>
    <node id="curl">
      <data key="d1">example</data>
      <data key="d2">cURL is a command-line tool used for making HTTP requests, included here to show how to change a subscription plan via API.</data>
      <data key="d3">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2</data>
    </node>
    <node id="Parameter">
      <data key="d1">variable</data>
      <data key="d2">Parameters are required data points that need to be filled out to properly create or update a Feature within the Salable dashboard.</data>
      <data key="d3">excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </node>
    <node id="Variable Name">
      <data key="d1">variable</data>
      <data key="d2">Variable Name is the term used to reference a variable in the API, essential for proper identification during programming.:|:Variable Name is a variable signifying the internal representation of a feature, defined as a string.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659:|:excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </node>
    <node id="Feature Description">
      <data key="d1">variable:|:feature</data>
      <data key="d2">Feature Description provides a brief explanation that will be shown in tooltips, limited to 50 characters for conciseness.:|:Feature Description outlines the attributes and properties of a feature in the context of an application, detailing its display name, variable name, status, visibility, and other characteristics.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659:|:excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </node>
    <node id="Visibility">
      <data key="d1">configuration</data>
      <data key="d2">Visibility indicates whether a feature is shown in marketing materials, with options for Public and Private settings.:|:Visibility specifies the accessibility of the feature, defined as a string, with an example value of public.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659:|:excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </node>
    <node id="Create Feature">
      <data key="d1">function</data>
      <data key="d2">Create Feature is the action executed to finalize the addition of a new feature in the Salable dashboard after completing all required inputs.:|:Create Feature is an action that allows users to add new features to a product, emphasizing its functionality and relevance.</data>
      <data key="d3">excerpt_id_30cc79a13c79866d5507321347cb20a7:|:excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </node>
    <node id="Get subscriptions current payment method">
      <data key="d1">function</data>
      <data key="d2">Get subscriptions current payment method is a function that retrieves the current payment method details associated with a specified subscription UUID.</data>
      <data key="d3">excerpt_id_5ebe47a66fffe70faec5fc051e3e9666</data>
    </node>
    <node id="Get an 'update payment method' link">
      <data key="d1">function</data>
      <data key="d2">Get an 'update payment method' link is a function that generates a link to update the payment method associated with a specified subscription UUID.</data>
      <data key="d3">excerpt_id_5ebe47a66fffe70faec5fc051e3e9666</data>
    </node>
    <node id="payment-method API">
      <data key="d1">api</data>
      <data key="d2">payment-method API is an API that facilitates operations related to managing payment methods for subscriptions, including retrieving current methods and updating them.</data>
      <data key="d3">excerpt_id_5ebe47a66fffe70faec5fc051e3e9666</data>
    </node>
    <node id="Create Pricing Table">
      <data key="d1">function</data>
      <data key="d2">Create Pricing Table is a function that facilitates the creation of a new pricing table by completing specific fields within the Salable dashboard.:|:Create Pricing Table is a function that initiates the process of setting up a new pricing table, notifying the user upon creation.</data>
      <data key="d3">excerpt_id_2606a25588f8e8e2ee794116e597f0bd:|:excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce</data>
    </node>
    <node id="Add Plans">
      <data key="d1">feature</data>
      <data key="d2">Add Plans is a feature that allows users to include multiple pricing plans in the table by selecting from a dropdown menu.</data>
      <data key="d3">excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce</data>
    </node>
    <node id="Feature Order">
      <data key="d1">configuration:|:feature</data>
      <data key="d2">Feature Order is a feature that provides the ability to arrange multiple features of a pricing plan in a preferred sequence.:|:Feature Order refers to the arrangement of features on the Features tab, which impacts their display in the pricing table.</data>
      <data key="d3">excerpt_id_30cc79a13c79866d5507321347cb20a7:|:excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce</data>
    </node>
    <node id="salable.plans.getCheckoutLink">
      <data key="d1">function</data>
      <data key="d2">salable.plans.getCheckoutLink is a function that generates a payment checkout link for a specific plan based on a user's UUID and other parameters such as success and cancel URLs.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </node>
    <node id="License check">
      <data key="d1">function</data>
      <data key="d2">License check refers to the process of verifying if users have bought licenses to access specific features or functionalities within an application.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </node>
    <node id="hasCapability">
      <data key="d1">variable</data>
      <data key="d2">hasCapability is a variable used to determine whether a user possesses the necessary licenses to perform a designated action.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </node>
    <node id="Salable SDK">
      <data key="d1">interface</data>
      <data key="d2">Salable SDK is an interface that provides methods for interacting with the Salable API, facilitating operations such as license checks and plan management.</data>
      <data key="d3">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </node>
    <node id="Salable Pricing Table Web Component">
      <data key="d1">feature</data>
      <data key="d2">The Salable Pricing Table Web Component is designed to display a pricing table, requiring various attributes such as session-token and uuid for functionality.</data>
      <data key="d3">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </node>
    <node id="createSession">
      <data key="d1">api</data>
      <data key="d2">createSession is an API endpoint that allows the creation of sessions for web components, providing necessary interactions to initiate the component.</data>
      <data key="d3">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </node>
    <node id="global-success-url">
      <data key="d1">configuration</data>
      <data key="d2">global-success-url is a configuration parameter that defines the URL to redirect upon successful completion of the session.</data>
      <data key="d3">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </node>
    <node id="global-cancel-url">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">global-cancel-url is a variable that stores the URL to which users are redirected when they cancel a transaction.:|:global-cancel-url is a configuration parameter that specifies the URL to redirect if the session is canceled.</data>
      <data key="d3">excerpt_id_76f2bf224d3111fcdb908c47e3e64890:|:excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </node>
    <node id="global-grantee-id">
      <data key="d1">variable</data>
      <data key="d2">global-grantee-id is a variable intended to identify the grantee in the context of transaction processing.:|:global-grantee-id is a variable that identifies the grantee involved in the session, crucial for session management.</data>
      <data key="d3">excerpt_id_76f2bf224d3111fcdb908c47e3e64890:|:excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </node>
    <node id="Plans Tab">
      <data key="d1">interface</data>
      <data key="d2">Plans Tab is a section in the user interface where users can add and manage the plans associated with a product.</data>
      <data key="d3">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="Add Plan">
      <data key="d1">function</data>
      <data key="d2">Add Plan is a function that allows users to create a new plan for a product within the Plans Tab.</data>
      <data key="d3">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="Plan Slug">
      <data key="d1">variable</data>
      <data key="d2">Plan Slug is a variable representing how the plan is referenced by the API and SDKs.</data>
      <data key="d3">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="Plan Description">
      <data key="d1">variable</data>
      <data key="d2">Plan Description is used to provide information shown in tooltips about the plan.</data>
      <data key="d3">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="License Type Section">
      <data key="d1">configuration</data>
      <data key="d2">License Type Section is a part of the configuration process where users define the type of license for the plan.</data>
      <data key="d3">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="Standard Plans">
      <data key="d1">configuration</data>
      <data key="d2">Standard Plans are typical subscription plans that contain predefined features and are available for customers.</data>
      <data key="d3">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="Coming Soon Plans">
      <data key="d1">configuration</data>
      <data key="d2">Coming Soon Plans are plans displayed in a pricing table with future availability.</data>
      <data key="d3">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </node>
    <node id="Invoices Documentation">
      <data key="d1">example</data>
      <data key="d2">Invoices Documentation provides example usage and detailed guidelines on how to work with the SalableInvoices web component effectively.</data>
      <data key="d3">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </node>
    <node id="Svelte Demo">
      <data key="d1">example</data>
      <data key="d2">Svelte Demo is an example repository demonstrating how to integrate Salable Web Components within Svelte applications.</data>
      <data key="d3">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </node>
    <node id="React/Next.js Demo">
      <data key="d1">example</data>
      <data key="d2">React/Next.js Demo illustrates the integration of Salable Web Components specifically within React and Next.js environments.</data>
      <data key="d3">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </node>
    <node id="HTML/JavaScript Demo">
      <data key="d1">example</data>
      <data key="d2">HTML/JavaScript Demo showcases how to utilize Salable Web Components in standard HTML and JavaScript setups.</data>
      <data key="d3">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </node>
    <node id="promoCode">
      <data key="d1">variable</data>
      <data key="d2">promoCode refers to a discount mechanism that can be incorporated into the checkout, contingent upon specific usage rules.:|:promoCode is a variable used to pre-fill the promo code field in Stripe checkout, incorporating the promo code ID from the Stripe dashboard and disallowing customer edits during checkout.</data>
      <data key="d3">excerpt_id_0ab876e01883ecefd90117ac472049ae:|:excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </node>
    <node id="Flat Rate Billing in Next.js">
      <data key="d1">example</data>
      <data key="d2">This is a demonstration of implementing a flat rate billing strategy using the Next.js framework.</data>
      <data key="d3">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </node>
    <node id="Usage-Based Billing in Next.js">
      <data key="d1">example</data>
      <data key="d2">This is an example showcasing how to implement usage-based billing in an application using the Next.js framework.</data>
      <data key="d3">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </node>
    <node id="Per-Seat Billing in Next.js">
      <data key="d1">example</data>
      <data key="d2">This example illustrates the implementation of per-seat billing using the Next.js framework.</data>
      <data key="d3">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </node>
    <node id="Flat Rate Billing in Miro">
      <data key="d1">example</data>
      <data key="d2">This demonstration shows how to implement flat rate billing in Miro, facilitating a specific billing model within that platform.</data>
      <data key="d3">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </node>
    <node id="Usage-Based Billing in Miro">
      <data key="d1">example</data>
      <data key="d2">This is an example of applying usage-based billing strategies in Miro, showcasing flexibility in billing options.</data>
      <data key="d3">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </node>
    <node id="Edit Pricing Table">
      <data key="d1">function</data>
      <data key="d2">Edit Pricing Table is a function that enables users to modify an existing pricing table after it has been created.</data>
      <data key="d3">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </node>
    <node id="Actions menu">
      <data key="d1">interface</data>
      <data key="d2">The Actions menu is an interface element that provides access to edit options for pricing tables, such as reordering plans.</data>
      <data key="d3">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </node>
    <node id="default pricing table">
      <data key="d1">configuration</data>
      <data key="d2">The default pricing table configuration is the standard setup that cannot be edited, except for visibility options of specific plans.</data>
      <data key="d3">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </node>
    <node id="Update Pricing Table">
      <data key="d1">function</data>
      <data key="d2">Update Pricing Table is a function that allows users to save changes made to the pricing table, with a preview available in real-time.</data>
      <data key="d3">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </node>
    <node id="Features Tab">
      <data key="d1">interface</data>
      <data key="d2">Features Tab is a section within a product where features are displayed, allowing users to interact with and manage those features.</data>
      <data key="d3">excerpt_id_30cc79a13c79866d5507321347cb20a7</data>
    </node>
    <node id="SalablePricingTable">
      <data key="d1">component</data>
      <data key="d2">SalablePricingTable is a custom web component imported from '@salable/react-web-components', which displays a pricing table based on the session and global parameters provided.:|:SalablePricingTable is a React component imported from the Salable library, used for displaying a pricing table and it requires a session token and other parameters to function.:|:SalablePricingTable is a custom web component that displays pricing details and incorporates session and transaction-related variables.</data>
      <data key="d3">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_76f2bf224d3111fcdb908c47e3e64890:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </node>
    <node id="Trial Period">
      <data key="d1">feature</data>
      <data key="d2">The Trial Period is a feature that can be attached to a plan, defined by a specific duration in days, allowing users to test the plan before committing.</data>
      <data key="d3">excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </node>
    <node id="Usage">
      <data key="d1">function:|:variable:|:feature</data>
      <data key="d2">Usage refers to operations related to usage within the system, allowing for tracking and managing how resources are utilized.:|:Usage is a feature related to the tracking of license usage records, which is accessible through specific API requests.:|:Usage is a variable that can be selected as a License Type for the plan, determining how usage billing is based on specific features.:|:Usage feature includes operations related to tracking and reporting usage of licenses.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_dcbbc112726c43262b223ebfe3ca030b:|:excerpt_id_6b75e0b0ccb8be642042580b0d5bc451:|:excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </node>
    <node id="Assign Values Tab">
      <data key="d1">interface</data>
      <data key="d2">The Assign Values Tab is an interface section where users must input relevant values for features associated with the plan.</data>
      <data key="d3">excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </node>
    <node id="YOUR_SALABLE_API_KEY">
      <data key="d1">variable</data>
      <data key="d2">YOUR_SALABLE_API_KEY is a placeholder representing a unique API key required for accessing the Salable API and performing license checks.:|:YOUR_SALABLE_API_KEY is a placeholder indicating an API key that should be replaced with an actual salable API key for authentication purposes.</data>
      <data key="d3">excerpt_id_7afe2e3cf72d8910689510b5002270c3:|:excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab</data>
    </node>
    <node id="version: v2">
      <data key="d1">configuration</data>
      <data key="d2">version: v2 indicates the version of the API being used for making requests to the Salable API.:|:version: v2 refers to the specific version parameter required in the API request to interact with the Salable API.</data>
      <data key="d3">excerpt_id_7afe2e3cf72d8910689510b5002270c3:|:excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab</data>
    </node>
    <node id="https://api.salable.app/licenses/check">
      <data key="d1">api</data>
      <data key="d2">The API endpoint https://api.salable.app/licenses/check is used for checking the validity of a product license by providing necessary parameters such as product UUID and grantee IDs.</data>
      <data key="d3">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </node>
    <node id="grace">
      <data key="d1">feature</data>
      <data key="d2">The grace parameter allows the extension of the license capability check by a specified number of days in the event of payment failure, offering flexibility to customers.</data>
      <data key="d3">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </node>
    <node id="ECDSA Encryption and Signatures">
      <data key="d1">concept</data>
      <data key="d2">ECDSA Encryption and Signatures is a cryptographic process used to create secure signatures for verifying license checks, ensuring that only authorized entities can validate the information.</data>
      <data key="d3">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </node>
    <node id="public key">
      <data key="d1">variable</data>
      <data key="d2">The public key is used to verify the signatures generated for license checks, ensuring the integrity and authenticity of the data.</data>
      <data key="d3">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </node>
    <node id="signature check">
      <data key="d1">function</data>
      <data key="d2">The signature check is a function that verifies the authenticity of the license using the provided public key and signature.</data>
      <data key="d3">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </node>
    <node id="Authentication">
      <data key="d1">feature</data>
      <data key="d2">Authentication is a feature within the Salable API that secures requests using an API key and optionally, a session token, ensuring authorized access to features.</data>
      <data key="d3">excerpt_id_1447c9ad088ee587d295240cee723646</data>
    </node>
    <node id="HTTP Endpoints">
      <data key="d1">configuration</data>
      <data key="d2">HTTP Endpoints are configurations within the Salable API that allow users to access different features through standardized HTTP requests and responses.</data>
      <data key="d3">excerpt_id_1447c9ad088ee587d295240cee723646</data>
    </node>
    <node id="Quick Start">
      <data key="d1">function</data>
      <data key="d2">Quick Start is a function that outlines initial steps for users to set up the Salable API, including account creation, product setup, and making the first API call.</data>
      <data key="d3">excerpt_id_1447c9ad088ee587d295240cee723646</data>
    </node>
    <node id="Standard HTTP Status Codes">
      <data key="d1">configuration</data>
      <data key="d2">Standard HTTP Status Codes are utilized within the Salable API to represent success and failure responses, adopting widely recognized standards.</data>
      <data key="d3">excerpt_id_1447c9ad088ee587d295240cee723646</data>
    </node>
    <node id="Change Plan Endpoint">
      <data key="d1">interface</data>
      <data key="d2">The Change Plan Endpoint is a specific point of interaction in the Salable API used for modifying a subscription plan.</data>
      <data key="d3">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </node>
    <node id="Upgrade Example">
      <data key="d1">example</data>
      <data key="d2">The Upgrade Example illustrates the process of upgrading a subscription from one plan to a more expensive option with a prorated cost calculation.</data>
      <data key="d3">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </node>
    <node id="Downgrade Example">
      <data key="d1">example</data>
      <data key="d2">The Downgrade Example describes how to downgrade a subscription plan and the corresponding refund process based on prorated costs.</data>
      <data key="d3">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </node>
    <node id="version">
      <data key="d1">configuration</data>
      <data key="d2">The 'version' header configures the API call to use a specific version for the request being made.</data>
      <data key="d3">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </node>
    <node id="your-subscription-uuid">
      <data key="d1">variable</data>
      <data key="d2">your-subscription-uuid is a placeholder for a unique identifier associated with a specific subscription, which is needed when calling the removeSeats function.:|:your-subscription-uuid is a placeholder variable for the unique identifier of a subscription whose seat count is to be modified.</data>
      <data key="d3">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f:|:excerpt_id_de8626e7234f5a3c62010de5ee420028</data>
    </node>
    <node id="subscription management">
      <data key="d1">feature</data>
      <data key="d2">subscription management is a feature of the Salable API that enables developers to handle subscription-related tasks, such as adding or removing seats, through SDKs.</data>
      <data key="d3">excerpt_id_de8626e7234f5a3c62010de5ee420028</data>
    </node>
    <node id="https://api.salable.app/plans/your-plan-uuid/checkoutLink">
      <data key="d1">endpoint</data>
      <data key="d2">The URL endpoint for accessing the checkout link of a specific plan in the Salable API, requiring specific identifiers as parameters.</data>
      <data key="d3">excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab</data>
    </node>
    <node id="update the licenses">
      <data key="d1">function</data>
      <data key="d2">update the licenses is a function that allows updating the assigned licenses for seats after a successful payment in the Salable API.</data>
      <data key="d3">excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab</data>
    </node>
    <node id="automaticTax">
      <data key="d1">function:|:variable</data>
      <data key="d2">automaticTax ensures that tax is calculated automatically based on the customer's location and Stripe settings, facilitating accurate billing.:|:automaticTax is a function that automatically calculates tax during checkout based on the customer's location and the Stripe settings, streamlining the checkout process.</data>
      <data key="d3">excerpt_id_0ab876e01883ecefd90117ac472049ae:|:excerpt_id_b70787affc67ce541e7d959da486303e</data>
    </node>
    <node id="Plan checkout link">
      <data key="d1">api</data>
      <data key="d2">Plan checkout link is an API endpoint that allows users to create a checkout link for plans, enhancing the purchasing process.</data>
      <data key="d3">excerpt_id_b70787affc67ce541e7d959da486303e</data>
    </node>
    <node id="verifyLicenseCheck">
      <data key="d1">function</data>
      <data key="d2">verifyLicenseCheck is an asynchronous function that verifies the validity of a provided signature against a public key and associated capabilities.</data>
      <data key="d3">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </node>
    <node id="importPublicKey">
      <data key="d1">function</data>
      <data key="d2">importPublicKey is a function that imports a public key in PEM format and prepares it for use in cryptographic operations.</data>
      <data key="d3">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </node>
    <node id="stringToArrayBuffer">
      <data key="d1">function</data>
      <data key="d2">stringToArrayBuffer converts a string into an ArrayBuffer, where each character is represented in a binary format.</data>
      <data key="d3">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </node>
    <node id="hexStringToUint8Array">
      <data key="d1">function</data>
      <data key="d2">hexStringToUint8Array converts a hexadecimal string into a Uint8Array, which is useful for binary data manipulation.</data>
      <data key="d3">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </node>
    <node id="publicKey">
      <data key="d1">variable</data>
      <data key="d2">publicKey is a variable that holds the imported public key after it is processed by the importPublicKey function.:|:publicKey is a variable that holds the public key used in the verification process to validate the digital signature.</data>
      <data key="d3">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d:|:excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </node>
    <node id="signature">
      <data key="d1">variable</data>
      <data key="d2">Signature is a string property representing a cryptographic signature used within the LicenseCheck function to ensure data integrity and authenticity.:|:signature is a variable representing the cryptographic signature that needs to be verified by the verifyLicenseCheck function.</data>
      <data key="d3">excerpt_id_aec59c84e38b8bb0a72122b3e79c8052:|:excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </node>
    <node id="ECDSA">
      <data key="d1">feature</data>
      <data key="d2">ECDSA is a digital signature algorithm that is widely used for secure communications and provides authentication of messages.:|:ECDSA is a form of elliptic curve cryptography which is used in the verification processes within the verifyLicenseCheck function.</data>
      <data key="d3">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d:|:excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </node>
    <node id="API Endpoint">
      <data key="d1">interface</data>
      <data key="d2">API Endpoint is the URL structure provided for making requests to the Salable API for managing subscription seats.</data>
      <data key="d3">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f</data>
    </node>
    <node id="cURL Request">
      <data key="d1">example</data>
      <data key="d2">cURL Request is an example of using cURL to interact with the Salable API for the 'removeSeats' function, demonstrating the necessary headers and body format.</data>
      <data key="d3">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f</data>
    </node>
    <node id="globalSuccessUrl">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">globalSuccessUrl is a required variable that stores the URL to which users are redirected after a successful purchase, necessitating an absolute URL.:|:globalSuccessUrl is a configuration option that specifies the URL to redirect to upon successful completion of a transaction.:|:globalSuccessUrl is a required variable indicating the absolute URL for redirect after a successful purchase.</data>
      <data key="d3">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </node>
    <node id="globalCancelUrl">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">globalCancelUrl is a configuration option that specifies the URL to redirect to if the transaction is canceled.:|:globalCancelUrl is a required variable indicating the absolute URL to redirect users if a transaction fails.:|:globalCancelUrl is a variable that stores the URL to which users are redirected if they cancel their action, indicating a critical endpoint in the user journey.</data>
      <data key="d3">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </node>
    <node id="globalGranteeId">
      <data key="d1">variable</data>
      <data key="d2">globalGranteeId is a variable that contains the identifier of the grantee associated with the pricing table, used for specific transactions.:|:globalGranteeId is a required variable representing the unique identifier for the grantee in the system, specified as a string.:|:globalGranteeId is a variable representing the ID of the grantee, used within the application for reference or identification purposes.</data>
      <data key="d3">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </node>
    <node id="HTTP Status Codes">
      <data key="d1">configuration</data>
      <data key="d2">HTTP Status Codes are standard codes used to indicate the success or failure of API requests, providing feedback on the result of the operation.</data>
      <data key="d3">excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="200">
      <data key="d1">status code</data>
      <data key="d2">200 is an HTTP status code indicating that the request was successful and the action has been completed.</data>
      <data key="d3">excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="201">
      <data key="d1">status code</data>
      <data key="d2">201 is an HTTP status code sent for the successful completion of POST requests, indicating that a new item has been created.</data>
      <data key="d3">excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="204">
      <data key="d1">response:|:status code</data>
      <data key="d2">The response code '204' indicates successful cancellation of licenses, with no content returned, signifying a successful operation.:|:204 is an HTTP status code indicating that the request was successful, but there is no content to return.</data>
      <data key="d3">excerpt_id_7f5459c7889a5aa990fe3da8c8f562de:|:excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </node>
    <node id="206">
      <data key="d1">status code</data>
      <data key="d2">206 is an HTTP status code indicating that the request was partially successful.</data>
      <data key="d3">excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="400">
      <data key="d1">status code:|:variable:|:response</data>
      <data key="d2">400 is an error response indicating a 'Bad Request', used in the context of API responses to signal issues with the request made to the server.:|:400 represents a status code indicating a bad request error, highlighting issues with the request sent to the server.:|:The response code '400' indicates a bad request, informing the user that their API request was improperly formed or invalid.:|:400 is an HTTP status code indicating that there was a request validation error and the request couldn't be completed.</data>
      <data key="d3">excerpt_id_ddc9e4fbd355f7d9a819edc36d148407:|:excerpt_id_a9f412b9d897ad9489864c063036ab9a:|:excerpt_id_7f5459c7889a5aa990fe3da8c8f562de:|:excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </node>
    <node id="401">
      <data key="d1">status code</data>
      <data key="d2">401 is an HTTP status code indicating an authentication problem, suggesting issues with the API Key or session token.</data>
      <data key="d3">excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="403">
      <data key="d1">status code</data>
      <data key="d2">403 is an HTTP status code indicating an authorization issue, prompting a check on the API Key's scopes and the organization.</data>
      <data key="d3">excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="404">
      <data key="d1">error:|:response code:|:variable:|:status code</data>
      <data key="d2">404 is an HTTP status code indicating that the requested resource does not exist, preventing request completion.:|:404 is an error code that signifies 'Not Found', indicating that the requested resource could not be found on the server.:|:404 is an HTTP response code indicating that the requested resource was not found.:|:404 represents a status code indicating that a resource was not found, commonly used to signify unavailable plans.:|:404 is an error response that indicates 'Not Found', applied when an API request does not match any available endpoints or resources.</data>
      <data key="d3">excerpt_id_49c1f925b9b823dbc869debcecd54227:|:excerpt_id_ddc9e4fbd355f7d9a819edc36d148407:|:excerpt_id_0b9474a6f5a5fdb347caada72f379c22:|:excerpt_id_a9f412b9d897ad9489864c063036ab9a:|:excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="500">
      <data key="d1">status code</data>
      <data key="d2">500 is an HTTP status code indicating a problem on the server side, suggesting users reach out for assistance.</data>
      <data key="d3">excerpt_id_7f5459c7889a5aa990fe3da8c8f562de</data>
    </node>
    <node id="window.crypto.subtle.verify">
      <data key="d1">function</data>
      <data key="d2">window.crypto.subtle.verify is a cryptographic function that verifies a digital signature using the ECDSA algorithm and a specified hash function.</data>
      <data key="d3">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </node>
    <node id="SHA-256">
      <data key="d1">feature</data>
      <data key="d2">SHA-256 is a cryptographic hash function that produces a 256-bit hash value, commonly used in security applications and protocols.</data>
      <data key="d3">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </node>
    <node id="rawSignature">
      <data key="d1">variable</data>
      <data key="d2">rawSignature is a variable that contains the original signature data that is to be verified against the public key.</data>
      <data key="d3">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </node>
    <node id="TextEncoder">
      <data key="d1">api</data>
      <data key="d2">TextEncoder is an API used to encode strings into byte sequences, facilitating the transmission of data in various formats.</data>
      <data key="d3">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </node>
    <node id="SalablePricingTableDemo">
      <data key="d1">function</data>
      <data key="d2">SalablePricingTableDemo is a function component that demonstrates the usage of the SalablePricingTable component with predefined props.</data>
      <data key="d3">excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </node>
    <node id="api.salable.app">
      <data key="d1">api</data>
      <data key="d2">api.salable.app is a service that provides an interface for interacting with various resources through HTTP requests.</data>
      <data key="d3">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </node>
    <node id="apiKey">
      <data key="d1">configuration:|:variable:|:interface</data>
      <data key="d2">apiKey is a variable that stores the key required for authentication to access the Licenses feature.:|:apiKey is a security configuration used to grant permissions for reading license data in the API.:|:apiKey is a configuration setting used to secure API access by requiring a specific key for currency read operations.:|:apiKey is an authentication method required for accessing the plans read permissions in the API.:|:apiKey is a variable used for securing requests to the API, ensuring that only authorized actions can be performed.:|:apiKey is a variable used for authentication, specifically granting access to the 'features:read' permission within the API calls for product features.:|:apiKey is a security scheme used to authenticate requests by requiring a key called x-api-key in the request header.:|:apiKey is a security configuration required to access the subscription cancellation function with appropriate permissions.:|:apiKey is a security parameter required for authentication to access the usage-related API endpoints.</data>
      <data key="d3">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23:|:excerpt_id_dc525bd2329c111af82010ba09911981:|:excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4:|:excerpt_id_ddc9e4fbd355f7d9a819edc36d148407:|:excerpt_id_90c759c4feb12e8e2b105cd945aeabd3:|:excerpt_id_0b9474a6f5a5fdb347caada72f379c22:|:excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00:|:excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167:|:excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </node>
    <node id="VersionHeader">
      <data key="d1">configuration:|:variable:|:parameter:|:interface</data>
      <data key="d2">VersionHeader is a parameter used in API calls to specify the version of the API that the request will interact with.:|:VersionHeader is a variable used to indicate the version of the API being called, ensuring that the request is compatible with the right functionality.:|:VersionHeader is a required header parameter that specifies the version of the API being used, described as a string.:|:VersionHeader is a parameter variable that represents the version of the API being called.:|:VersionHeader is a parameter used in API requests to specify the version of the request, ensuring the API handles requests appropriately based on given versions.:|:VersionHeader is a parameter used in API requests to specify the version of the API being used, ensuring compatibility.:|:VersionHeader is a reference parameter used in API requests to specify the API version being utilized.:|:VersionHeader is a variable that denotes the version of the API being requested, ensuring compatibility and proper handling of the response.:|:VersionHeader is a parameter reference included in requests to specify the API version.:|:VersionHeader is a parameter reference used in the cancelLicenses function to specify the version header required for the API call.:|:VersionHeader is a parameter that specifies the version of the API being called.:|:VersionHeader is a parameter that specifies the version of the request to the API endpoints.:|:VersionHeader is a variable referring to the version of the API being used in the request.:|:VersionHeader is a required parameter in the API requests that specifies the version of the API being accessed.</data>
      <data key="d3">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23:|:excerpt_id_dc525bd2329c111af82010ba09911981:|:excerpt_id_8f76cec6c3c5c205e09868b54019ae7b:|:excerpt_id_a8a1a1f7699cb50324dc4207ba11c6e6:|:excerpt_id_49c1f925b9b823dbc869debcecd54227:|:excerpt_id_93a1bdd9071867235ec2537127127c00:|:excerpt_id_39737808dc86383e52da4e4e8f531f84:|:excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167:|:excerpt_id_79ba54d7da0c670cf02d0b7a721733af:|:excerpt_id_8afa492aad2baaf4c1b74f1b88500086:|:excerpt_id_760444f325abfe9a14b47ad4de73095c:|:excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a:|:excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab:|:excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </node>
    <node id="UniqueKey">
      <data key="d1">parameter</data>
      <data key="d2">UniqueKey is a required header parameter that provides a unique key for idempotent requests, described as a string.</data>
      <data key="d3">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </node>
    <node id="ProductUuidPathParam">
      <data key="d1">parameter</data>
      <data key="d2">ProductUuidPathParam is a parameter required in the API path to identify the specific product whose features are being retrieved.:|:ProductUuidPathParam is a parameter in the API request that specifies the unique identifier for a product.:|:ProductUuidPathParam is a required path parameter representing the unique identifier for the product.</data>
      <data key="d3">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23:|:excerpt_id_dc525bd2329c111af82010ba09911981:|:excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </node>
    <node id="ProductUuidQueryParam">
      <data key="d1">parameter</data>
      <data key="d2">ProductUuidQueryParam is a required query parameter that also represents the unique identifier for the product.</data>
      <data key="d3">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </node>
    <node id="PlanUuidPathParam">
      <data key="d1">variable:|:parameter</data>
      <data key="d2">PlanUuidPathParam is a required path parameter that represents the unique identifier for the plan.:|:PlanUuidPathParam is a parameter included in the API path that specifies the unique identifier for a plan, crucial for retrieving specific plan details.:|:PlanUuidPathParam is a variable used to reference the unique identifier of a plan within API requests.</data>
      <data key="d3">excerpt_id_dc525bd2329c111af82010ba09911981:|:excerpt_id_8afa492aad2baaf4c1b74f1b88500086:|:excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </node>
    <node id="EventUuidPathParam">
      <data key="d1">parameter</data>
      <data key="d2">EventUuidPathParam is a required path parameter that represents the unique identifier for the event.</data>
      <data key="d3">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </node>
    <node id="SubscriptionUuidPathParam">
      <data key="d1">variable:|:parameter</data>
      <data key="d2">SubscriptionUuidPathParam is a reference parameter in the API that specifies the unique identifier for the subscription being managed.:|:SubscriptionUuidPathParam is a variable that represents the unique identifier for the subscription, necessary for operations related to a specific subscription.:|:SubscriptionUuidPathParam is a required path parameter that represents the unique identifier for the subscription.:|:SubscriptionUuidPathParam is a path parameter used in API requests to specify the unique identifier of a subscription.</data>
      <data key="d3">excerpt_id_dc525bd2329c111af82010ba09911981:|:excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a:|:excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab:|:excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </node>
    <node id="SubscriptionUuidQueryParam">
      <data key="d1">parameter</data>
      <data key="d2">SubscriptionUuidQueryParam is a parameter that allows users to filter license queries based on a specific subscription UUID.:|:SubscriptionUuidQueryParam is a query parameter that represents the unique identifier for the subscription.</data>
      <data key="d3">excerpt_id_dc525bd2329c111af82010ba09911981:|:excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </node>
    <node id="LicenseUuidPathParam">
      <data key="d1">variable:|:parameter</data>
      <data key="d2">LicenseUuidPathParam is a parameter reference that identifies the specific license by its UUID in path parameters.:|:LicenseUuidPathParam is a variable representing the path parameter used in API calls related to licenses.:|:LicenseUuidPathParam is a required path parameter representing the unique identifier for the license.:|:LicenseUuidPathParam refers to a path variable in an API call that provides the unique identifier for a license.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b:|:excerpt_id_dc525bd2329c111af82010ba09911981:|:excerpt_id_49c1f925b9b823dbc869debcecd54227:|:excerpt_id_436e9d6c339c56d143b4d7eb7f449283</data>
    </node>
    <node id="Url">
      <data key="d1">variable</data>
      <data key="d2">Url refers to the endpoint where the cancel operation can be performed, specified as a string.:|:Url is a string that represents the endpoint for accessing lines related to a specific invoice item, with example value /v1/invoices/in_xxxx/lines.</data>
      <data key="d3">excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="PurchaserQueryParam">
      <data key="d1">variable</data>
      <data key="d2">PurchaserQueryParam is a query parameter that identifies the owner of the license involved in an API request.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b</data>
    </node>
    <node id="LicenseStatusQueryParam">
      <data key="d1">variable:|:parameter</data>
      <data key="d2">LicenseStatusQueryParam is a query parameter that specifies the status of licenses for filtering purposes.:|:LicenseStatusQueryParam is a parameter that allows users to filter licenses based on their specific status.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b:|:excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </node>
    <node id="SubscriptionStatusQueryParam">
      <data key="d1">variable</data>
      <data key="d2">SubscriptionStatusQueryParam is a query parameter that defines the status of a subscription in an API query.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b</data>
    </node>
    <node id="SubscriptionEmailQueryParam">
      <data key="d1">variable</data>
      <data key="d2">SubscriptionEmailQueryParam is a query parameter used to specify the email address associated with the subscription purchase.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b</data>
    </node>
    <node id="UsageStatusQueryParam">
      <data key="d1">variable:|:parameter</data>
      <data key="d2">UsageStatusQueryParam is a query parameter for filtering based on the status of the license.:|:UsageStatusQueryParam is a parameter that determines the status of usage records returned in API responses.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b:|:excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="UsageTypeQueryParam">
      <data key="d1">variable:|:parameter</data>
      <data key="d2">UsageTypeQueryParam is a parameter used to specify the type of usage records to retrieve for the API request.:|:UsageTypeQueryParam is a query parameter for filtering usage records based on the type of usage.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b:|:excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="UsagePlanUuidQueryParam">
      <data key="d1">variable:|:parameter</data>
      <data key="d2">UsagePlanUuidQueryParam is a query parameter that includes the UUID of the plan to which a license belongs.:|:UsagePlanUuidQueryParam is a parameter used to specify the unique identifier of the plan associated with the license.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b:|:excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="UsageSubscriptionUuidQueryParam">
      <data key="d1">variable:|:parameter</data>
      <data key="d2">UsageSubscriptionUuidQueryParam is a query parameter that filters usage records according to their license's subscription identified by UUID.:|:UsageSubscriptionUuidQueryParam is a parameter that indicates the unique identifier associated with the subscription for the license.</data>
      <data key="d3">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b:|:excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="globalContactUrl">
      <data key="d1">variable</data>
      <data key="d2">globalContactUrl is a variable representing the URL for the "Coming soon" plan call to action (CTA).</data>
      <data key="d3">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </node>
    <node id="perPlanCancelUrls">
      <data key="d1">variable</data>
      <data key="d2">perPlanCancelUrls is a variable configured to specify cancel URLs for each plan in a specific string format for easy mapping.</data>
      <data key="d3">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </node>
    <node id="perPlanGranteeIds">
      <data key="d1">variable</data>
      <data key="d2">perPlanGranteeIds allows configuration of grantee IDs per plan using a specific string format for association.</data>
      <data key="d3">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </node>
    <node id="perPlanSuccessUrls">
      <data key="d1">variable</data>
      <data key="d2">perPlanSuccessUrls is configured to indicate success URLs for each plan using a string format for streamlined linking.</data>
      <data key="d3">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </node>
    <node id="isCustomPricingTable">
      <data key="d1">variable</data>
      <data key="d2">isCustomPricingTable is a boolean variable used to indicate whether a custom pricing table is provided by its UUID, set to true if applicable.</data>
      <data key="d3">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </node>
    <node id="customerId">
      <data key="d1">variable</data>
      <data key="d2">customerId is a variable that holds the ID of an existing customer within the payment integration, facilitating the pre-filling of checkout information.</data>
      <data key="d3">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </node>
    <node id="UsageSortQueryParam">
      <data key="d1">configuration:|:parameter</data>
      <data key="d2">UsageSortQueryParam is a configuration variable that allows sorting of usage records based on the createdAt field, with options for ascending or descending order.:|:UsageSortQueryParam is a parameter that allows the API request to sort the retrieved usage records based on specific criteria.</data>
      <data key="d3">excerpt_id_aeed752a0854093562fcab1a2782b1b3:|:excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="CursorQueryParam">
      <data key="d1">configuration:|:parameter</data>
      <data key="d2">CursorQueryParam is a configuration that holds a unique identifier for pagination, allowing retrieval of subsequent pages in data requests.:|:CursorQueryParam is a parameter used to manage pagination in API requests, allowing tracking of data across multiple pages.</data>
      <data key="d3">excerpt_id_aeed752a0854093562fcab1a2782b1b3:|:excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="CursorTakeQueryParam">
      <data key="d1">configuration:|:parameter</data>
      <data key="d2">CursorTakeQueryParam specifies the number of records to retrieve in relation to the cursor, with constraints on the range of values allowed.:|:CursorTakeQueryParam is a parameter that limits the number of records returned in response to the API request.</data>
      <data key="d3">excerpt_id_aeed752a0854093562fcab1a2782b1b3:|:excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="GraceQueryParam">
      <data key="d1">configuration</data>
      <data key="d2">GraceQueryParam defines the number of days added to capabilities end dates and enforces a minimum value of 1 for valid responses.</data>
      <data key="d3">excerpt_id_aeed752a0854093562fcab1a2782b1b3</data>
    </node>
    <node id="GranteeIdPathParam">
      <data key="d1">configuration:|:parameter</data>
      <data key="d2">GranteeIdPathParam specifies the unique identifier for the grantee included in the request path, indicating its importance for routing queries.:|:GranteeIdPathParam is a parameter in API calls that defines the path for the grantee ID, allowing identification of licenses for specific grantees.</data>
      <data key="d3">excerpt_id_aeed752a0854093562fcab1a2782b1b3:|:excerpt_id_8f76cec6c3c5c205e09868b54019ae7b</data>
    </node>
    <node id="GranteeIdQueryParam">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">GranteeIdQueryParam is a variable that represents the unique identifier for the grantee, required in the query for API calls.:|:GranteeIdQueryParam is a query parameter that holds the unique identifier for the grantee, used in filtering requests.</data>
      <data key="d3">excerpt_id_aeed752a0854093562fcab1a2782b1b3:|:excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </node>
    <node id="allowPromoCode">
      <data key="d1">configuration</data>
      <data key="d2">allowPromoCode is a configuration that determines whether the promo code field is enabled in Stripe checkout, accepting boolean values 'true' or 'false', but cannot be used simultaneously with promoCode.</data>
      <data key="d3">excerpt_id_0ab876e01883ecefd90117ac472049ae</data>
    </node>
    <node id="Stripe checkout">
      <data key="d1">interface</data>
      <data key="d2">Stripe checkout is the interface where customers complete their transactions, featuring functionalities like promo code input and automatic tax calculations.</data>
      <data key="d3">excerpt_id_0ab876e01883ecefd90117ac472049ae</data>
    </node>
    <node id="GranteeIdsQueryParam">
      <data key="d1">variable</data>
      <data key="d2">GranteeIdsQueryParam is a variable representing comma-separated unique identifiers of multiple grantees, required in the query for API calls.</data>
      <data key="d3">excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </node>
    <node id="SuccessUrlQueryParamRequired">
      <data key="d1">variable</data>
      <data key="d2">SuccessUrlQueryParamRequired specifies the URL to which users are redirected upon successful purchase completion; it is required and must be absolute.</data>
      <data key="d3">excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </node>
    <node id="GlobalSuccessUrlQueryParam">
      <data key="d1">variable</data>
      <data key="d2">GlobalSuccessUrlQueryParam is similar to SuccessUrlQueryParam but applies to all plans, and must also be an absolute URL.</data>
      <data key="d3">excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </node>
    <node id="CancelUrlQueryParamRequired">
      <data key="d1">variable</data>
      <data key="d2">CancelUrlQueryParamRequired is a variable requiring an absolute URL for users to be redirected in case of a transaction failure.</data>
      <data key="d3">excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </node>
    <node id="GlobalCancelUrlQueryParam">
      <data key="d1">variable</data>
      <data key="d2">GlobalCancelUrlQueryParam applies to all plans in case of failure, requiring an absolute URL redirection.</data>
      <data key="d3">excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </node>
    <node id="MemberQueryParamRequired">
      <data key="d1">variable</data>
      <data key="d2">MemberQueryParamRequired is a variable that specifies a required query parameter in an API, identifying the member who will manage the license.:|:MemberQueryParamRequired is a variable that holds the ID of the member responsible for managing the license, and it is required in the query.</data>
      <data key="d3">excerpt_id_546bf9e2829fb44f8bceb9060b941373:|:excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </node>
    <node id="SuccessUrlQueryParam">
      <data key="d1">variable</data>
      <data key="d2">SuccessUrlQueryParam is a variable that defines a query parameter for an absolute URL to redirect users upon successful purchase completion.</data>
      <data key="d3">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </node>
    <node id="CancelUrlQueryParam">
      <data key="d1">variable</data>
      <data key="d2">CancelUrlQueryParam indicates a query parameter for an absolute URL where users are sent if the transaction fails.</data>
      <data key="d3">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </node>
    <node id="MemberQueryParam">
      <data key="d1">variable</data>
      <data key="d2">MemberQueryParam is a variable representing the ID of the member managing the license in the query.</data>
      <data key="d3">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </node>
    <node id="PromoCodeQueryParam">
      <data key="d1">variable</data>
      <data key="d2">PromoCodeQueryParam defines a variable for pre-filling a promo code in a checkout process, specific to Stripe.</data>
      <data key="d3">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </node>
    <node id="AllowPromoCodeQueryParam">
      <data key="d1">variable</data>
      <data key="d2">AllowPromoCodeQueryParam is a variable that enables the promo code field in a checkout process, with restrictions on usage with promoCode.</data>
      <data key="d3">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </node>
    <node id="CustomerEmailQueryParam">
      <data key="d1">variable</data>
      <data key="d2">CustomerEmailQueryParam specifies a variable that pre-fills the customer email in the checkout process.</data>
      <data key="d3">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </node>
    <node id="CustomerIdQueryParam">
      <data key="d1">variable</data>
      <data key="d2">CustomerIdQueryParam identifies a variable for the ID of an existing customer, pre-filling their details at checkout.</data>
      <data key="d3">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </node>
    <node id="CurrencyQueryParam">
      <data key="d1">variable</data>
      <data key="d2">CurrencyQueryParam is a query parameter allowing specification of the currency in which the pricing table data is requested.:|:CurrencyQueryParam is a variable that sets the currency for the transaction, defaulting to the linked Product's currency.:|:CurrencyQueryParam is a variable that uses the short name of a currency like USD, defaulting to the currency associated with the linked Product's Plan.</data>
      <data key="d3">excerpt_id_5afa71a81cc3e66a0712156e8358e372:|:excerpt_id_39737808dc86383e52da4e4e8f531f84:|:excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </node>
    <node id="AutomaticTaxQueryParam">
      <data key="d1">variable</data>
      <data key="d2">AutomaticTaxQueryParam is a variable that indicates whether to automatically calculate tax at checkout based on the customer's location and the settings within Stripe.</data>
      <data key="d3">excerpt_id_5afa71a81cc3e66a0712156e8358e372</data>
    </node>
    <node id="QuantityQueryParam">
      <data key="d1">variable</data>
      <data key="d2">QuantityQueryParam is a variable that specifies the number of seats a customer will pay for during checkout, with restrictions based on the Plan's minimum seat amount.</data>
      <data key="d3">excerpt_id_5afa71a81cc3e66a0712156e8358e372</data>
    </node>
    <node id="ChangeQuantityQueryParam">
      <data key="d1">variable</data>
      <data key="d2">ChangeQuantityQueryParam allows customers to modify the number of seats they intend to purchase while ensuring it meets the Plan's minimum seat amount requirements.</data>
      <data key="d3">excerpt_id_5afa71a81cc3e66a0712156e8358e372</data>
    </node>
    <node id="RequirePaymentMethodQueryParam">
      <data key="d1">variable</data>
      <data key="d2">RequirePaymentMethodQueryParam is a variable that determines whether a payment method is required from users starting a trial with Stripe. The default value is true, making payment method mandatory unless specified otherwise.</data>
      <data key="d3">excerpt_id_5afa71a81cc3e66a0712156e8358e372</data>
    </node>
    <node id="ExpandPlanQueryParam">
      <data key="d1">variable</data>
      <data key="d2">ExpandPlanQueryParam is a variable that allows customers to expand the plan's properties in the request by specifying additional comma-separated values for detailed relations during checkout.</data>
      <data key="d3">excerpt_id_5afa71a81cc3e66a0712156e8358e372</data>
    </node>
    <node id="Currencies">
      <data key="d1">configuration:|:feature</data>
      <data key="d2">Currencies indicate the various types of currency functionalities that can be expanded in product queries and other features.:|:Currencies is an array of objects pertaining to different currencies available, containing properties such as productUuid, currencyUuid, and defaultCurrency.:|:Currencies is defined as an array containing currency information associated with different plans and prices.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34:|:excerpt_id_0e6dd63a0e60c2461612a94879366617:|:excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </node>
    <node id="ExpandProductQueryParams">
      <data key="d1">configuration</data>
      <data key="d2">ExpandProductQueryParams is a configuration parameter used in queries to specify additional properties for expanding product relations.</data>
      <data key="d3">excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </node>
    <node id="ExpandSubscriptionQueryParams">
      <data key="d1">configuration</data>
      <data key="d2">ExpandSubscriptionQueryParams allows users to specify which resource fields to expand in the subscription query.</data>
      <data key="d3">excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </node>
    <node id="ExpandGetAllSubscriptionQueryParams">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">ExpandGetAllSubscriptionQueryParams configures queries to expand specific resource fields when retrieving all subscriptions.:|:ExpandGetAllSubscriptionQueryParams is a query parameter that allows users to expand the data returned when retrieving all subscriptions.</data>
      <data key="d3">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d:|:excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </node>
    <node id="CancelWhenQueryParam">
      <data key="d1">configuration</data>
      <data key="d2">CancelWhenQueryParam is a query parameter that allows users to determine when a subscription should be canceled.</data>
      <data key="d3">excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </node>
    <node id="Subscription Cancellation">
      <data key="d1">function</data>
      <data key="d2">The Subscription Cancellation function determines when a subscription should end, either immediately or at the conclusion of the subscription period.</data>
      <data key="d3">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </node>
    <node id="organisationPaymentIntegrationUuid">
      <data key="d1">variable</data>
      <data key="d2">The organisationPaymentIntegrationUuid variable denotes the unique identifier for the payment integration associated with the organisation.</data>
      <data key="d3">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </node>
    <node id="paymentIntegrationProductId">
      <data key="d1">variable</data>
      <data key="d2">The paymentIntegrationProductId variable refers to the identifier for the product used in payment integration, which may be null.:|:paymentIntegrationProductId provides an identifier for integrating payment systems, indicated as a nullable string.:|:paymentIntegrationProductId is an optional variable that may reference a product related to payment integration, also nullable.</data>
      <data key="d3">excerpt_id_1c13b52ff77353471ab9c278f922f502:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </node>
    <node id="appType">
      <data key="d1">variable</data>
      <data key="d2">appType indicates the type of application associated with the product, shown as a string with an example of CUSTOM.:|:The appType variable specifies the kind of application associated with the product configuration.:|:appType is a variable that specifies the type of application the object relates to.</data>
      <data key="d3">excerpt_id_1c13b52ff77353471ab9c278f922f502:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </node>
    <node id="updatedAt">
      <data key="d1">variable</data>
      <data key="d2">updatedAt is a string variable formatted as date-time, revealing the time the entity was last updated, with an example value of '2023-10-03T09:50:55.253Z'.:|:A timestamp field that indicates when the object was last updated, stored in a date-time format.:|:The updatedAt variable indicates the last modification date and time of the product configuration.:|:updatedAt is a variable indicating the timestamp of when the entity was last updated, typically formatted as date-time.:|:updatedAt is a variable of type string that records the last updated timestamp for the subscription plan, formatted as date-time.:|:updatedAt is a variable of type string formatted as date-time, indicating the last update timestamp for the object.:|:updatedAt is a string captured in date-time format reflecting the last update made to a plan, indicating its currency and relevance.:|:updatedAt is a variable that holds a date-time value, indicating the last update time for the relevant object.:|:updatedAt is a timestamp indicating the last time a LicenseUsageRecord was modified, formatted as a date-time.:|:updatedAt is a variable that stores the last updated date and time of the PlanCapability, formatted in ISO 8601 date-time format.:|:updatedAt is a date-time string variable that indicates the last time the event was updated.:|:updatedAt is a variable that stores the last update timestamp of an object in date-time format.:|:updatedAt is a string variable formatted as date-time, representing the last update time for a resource.:|:updatedAt is a timestamp indicating the last modification time of the pricing table object, formatted as a date-time string.:|:Updated At is a timestamp that documents the last time the License record was modified, formatted in date-time.</data>
      <data key="d3">excerpt_id_b5b087e2945918c40faadd1bcef0b6d2:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4:|:excerpt_id_a0fec7d8127f726de8c00070d4b3778f:|:excerpt_id_591961ae8bc9634e2c292997a16088d5:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_9372e24bc34dbf7191b5152899bc4fb2:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_23065bf6bbd2623f9f9fc906460b3f70:|:excerpt_id_e641edc1cfd6a00298605ef35f2ad243:|:excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="isTest">
      <data key="d1">variable</data>
      <data key="d2">isTest is a boolean variable indicating whether a plan is intended for testing purposes (true) or not (false).:|:isTest is a boolean variable that indicates whether the subscription plan is part of a testing environment.:|:isTest is a boolean variable that indicates whether the object is in a test state.:|:isTest is a boolean variable that specifies whether the event is part of a test scenario or a live scenario.:|:Is Test is a boolean property that determines whether the License is for testing purposes or not.:|:The isTest variable denotes whether the product configuration is intended for testing purposes based on its boolean value.:|:isTest is a boolean variable that indicates whether the subscription is a test instance or not.</data>
      <data key="d3">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </node>
    <node id="name">
      <data key="d1">variable</data>
      <data key="d2">name is a string variable used to designate the title or identifier of a pricing table, contributing to its recognition within the system.:|:name is a string variable that designates the title of a specific plan, for example, Free Plan Name.:|:name is a variable indicating the official designation of an object within the ProductPricingTable.:|:name is a string variable designated for identifying features within an application.:|:name is a variable that represents the title or identifier of entities such as Plan and Capability.:|:Name is a nullable property that can store the name of the License's purchaser.:|:name is a variable of type string that represents the name of the subscription plan.</data>
      <data key="d3">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_a0fec7d8127f726de8c00070d4b3778f:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="description">
      <data key="d1">variable</data>
      <data key="d2">description is a variable of type string that provides a brief overview of the subscription plan's features, and it can be nullable.:|:description is an optional variable that provides details about the object, and can be nullable.:|:description is a string variable that details the features or offerings of a plan, like Free Plan description.:|:description is a variable that provides supplementary information about an entity, allowing for better understanding of its purpose or functionality.:|:description is a string variable providing detailed information about a particular feature.:|:description is a variable defined as a string that is nullable, providing a human-readable description of the invoice or object.</data>
      <data key="d3">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_a0fec7d8127f726de8c00070d4b3778f:|:excerpt_id_553ef68bcb5301348217820a3bb94336:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="example">
      <data key="d1">example:|:feature</data>
      <data key="d2">example represents instances illustrating how certain attributes like status could be defined, like the example value ACTIVE for a status.:|:example is represented by the value -11, illustrating a specific instance of an integer value within the context of the data structure.</data>
      <data key="d3">excerpt_id_a0fec7d8127f726de8c00070d4b3778f:|:excerpt_id_0445f247b05816e0bff80bd0e5c12785</data>
    </node>
    <node id="OrganisationPaymentIntegration">
      <data key="d1">configuration</data>
      <data key="d2">OrganisationPaymentIntegration describes the integration of a payment system for organizations with details such as uuid, organisation, integrationName, accountName, accountData, accountId, updatedAt, and isTest.</data>
      <data key="d3">excerpt_id_292ab6a210a5d658e3c94cd9b3e02c1a</data>
    </node>
    <node id="Currency">
      <data key="d1">object:|:configuration:|:variable:|:feature:|:schema</data>
      <data key="d2">Currency represents the monetary units that are used in the context of transactions and pricing associated with plans.:|:Currency is a schema component that represents different monetary units used in transactions and is part of a broader set of features.:|:Currency is a variable representing the monetary unit used within product configurations, referenced in the API schema.:|:Currency is a reference type used in pricing definitions, indicating the type of currency for transactions.:|:Currency is a schema component that defines the attributes and structure for currency data in the API responses.:|:Currency defines the attributes for various currency types, including uuid, shortName, longName, and symbol to represent different currencies used in transactions.:|:Currency is a string variable that indicates the currency type, with an example value of 'usd'.:|:Currency is an object containing properties that describe the monetary unit, including its UUID, short name, long name, and symbol.:|:Currency is a string variable that denotes the currency used for transactions, with an example value of USD.:|:Currency indicates the monetary unit used for transactions or billing associated with the plan, represented as a string.</data>
      <data key="d3">excerpt_id_6e08170f25211b887436970d3fc7ed73:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4:|:excerpt_id_4ce077a690e06fe23daada90c307e546:|:excerpt_id_90c759c4feb12e8e2b105cd945aeabd3:|:excerpt_id_7661720ce3af8e047797addb307a930b:|:excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f:|:excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330:|:excerpt_id_9a24a50a506ac799b7d4bcfa18511367:|:excerpt_id_292ab6a210a5d658e3c94cd9b3e02c1a:|:excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </node>
    <node id="shortName">
      <data key="d1">variable</data>
      <data key="d2">shortName is a variable that represents a concise identification of a currency, with an example of 'USD'.:|:shortName is a string variable typically used to provide a concise representation of an entity's name, such as GBP for British Pound.</data>
      <data key="d3">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </node>
    <node id="longName">
      <data key="d1">variable</data>
      <data key="d2">longName is a string variable that provides an extended description of an entity's name, like 'Pound Sterling' for GBP.:|:longName is a variable that represents the full identification of a currency, with an example of 'United States Dollar'.</data>
      <data key="d3">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </node>
    <node id="symbol">
      <data key="d1">variable</data>
      <data key="d2">symbol is a string variable representing the currency sign, such as £ for British Pound.:|:symbol is a variable representing the symbol of a currency, with an example of '$'.</data>
      <data key="d3">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </node>
    <node id="ProductPricingTable">
      <data key="d1">configuration:|:schema</data>
      <data key="d2">ProductPricingTable is a schema component that outlines the structure for product pricing data, referenced in API responses.:|:ProductPricingTable is a complex object that includes various properties detailing the pricing configuration for a product, including UUID, name, description, and more.</data>
      <data key="d3">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </node>
    <node id="logoUrl">
      <data key="d1">variable</data>
      <data key="d2">logoUrl is an optional variable that stores the URL of the object's logo, also nullable.</data>
      <data key="d3">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </node>
    <node id="displayName">
      <data key="d1">variable</data>
      <data key="d2">displayName is a string variable used for showing a user-friendly name of a feature.:|:displayName is a variable of type string that represents how the subscription plan is displayed to users.:|:displayName is a string used to present a user-friendly name for a plan, such as Free Plan Display Name.:|:displayName is an optional variable indicating an alternate name for the object, which can be nullable.</data>
      <data key="d3">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="organisation">
      <data key="d1">variable</data>
      <data key="d2">organisation is a variable that represents the organization linked to the subscription.:|:organisation is a variable of type string that denotes the organization associated with the subscription plan.:|:organisation is a variable representing the entity that created or manages the object.:|:organisation represents the entity or company associated with the product, described as a string.:|:organisation is a string variable indicating the associated organization, with an example value of 'test-org'.</data>
      <data key="d3">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b:|:excerpt_id_1c13b52ff77353471ab9c278f922f502:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </node>
    <node id="paid">
      <data key="d1">variable</data>
      <data key="d2">paid is a boolean variable indicating whether the associated service or product requires payment.</data>
      <data key="d3">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </node>
    <node id="features">
      <data key="d1">feature</data>
      <data key="d2">features denote an array of functionalities associated with the product, each having attributes like uuid, name, description, and status.:|:features is an array feature that holds the various attributes and functionalities associated with the subscription plan, detailing schema references.:|:features is an array consisting of objects that define various features, each having properties like planUuid, featureUuid, and value.:|:features represent an array of specific attributes related to the pricing table, detailing individual components and properties.:|:features is an array containing various items that reference the Feature schema, indicating functionalities associated with the product.</data>
      <data key="d3">excerpt_id_b5b087e2945918c40faadd1bcef0b6d2:|:excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_1c13b52ff77353471ab9c278f922f502</data>
    </node>
    <node id="plans">
      <data key="d1">configuration:|:feature</data>
      <data key="d2">plans is an array that contains settings for different pricing plans, structured as objects with defined properties.:|:plans is an array containing items that reference the PricingTablePlan schema, denoting the pricing options available for the product.</data>
      <data key="d3">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </node>
    <node id="PricingTablePlan">
      <data key="d1">configuration</data>
      <data key="d2">PricingTablePlan is an object that contains properties defining a pricing plan, including identifying details such as UUID, name, description, and attributes relating to its status and functionality.</data>
      <data key="d3">excerpt_id_7661720ce3af8e047797addb307a930b</data>
    </node>
    <node id="Event">
      <data key="d1">object:|:function:|:schema</data>
      <data key="d2">Event is a structured object that captures various properties related to actions such as creating or removing seats, changing plans, and subscription management.:|:Event refers to a function that returns specific information about events in a structured format according to the schema defined.:|:Event is a schema that details the structure of an event's information, associated with tracking progress in asynchronous tasks.</data>
      <data key="d3">excerpt_id_7c997969594a4417e475afa3bf6edfa2:|:excerpt_id_39737808dc86383e52da4e4e8f531f84:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </node>
    <node id="type">
      <data key="d1">variable</data>
      <data key="d2">type is a string variable that typically indicates the kind or category of the object.:|:Type is a data property that defines the kind of data expected, with a specific example being 'recurring'.:|:type is a string variable that indicates the category of event being processed, with predefined options like Create seats, Remove seats, etc.:|:type is a variable that indicates the type of subscription, such as 'salable' or 'stripe_existing'.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8:|:excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_66dba50ee12718a86cdc1d136f146b1c:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </node>
    <node id="retries">
      <data key="d1">variable</data>
      <data key="d2">retries is an integer variable that indicates the number of retry attempts made for processing the event.</data>
      <data key="d3">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </node>
    <node id="errorMessage">
      <data key="d1">variable</data>
      <data key="d2">errorMessage is a nullable string variable that provides details about an error that occurred while processing the event.</data>
      <data key="d3">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </node>
    <node id="errorCode">
      <data key="d1">variable</data>
      <data key="d2">errorCode is a nullable string that signifies the error code associated with any processing failure of the event.:|:errorCode is a variable of type string that can indicate various error states and is nullable.</data>
      <data key="d3">excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </node>
    <node id="createdAt">
      <data key="d1">variable</data>
      <data key="d2">createdAt is a date-time string variable that records when the event was created.:|:createdAt is a variable that stores the creation timestamp of an object in date-time format.:|:createdAt is a timestamp indicating when a new LicenseUsageRecord was created, formatted as a date-time.</data>
      <data key="d3">excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_9372e24bc34dbf7191b5152899bc4fb2:|:excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </node>
    <node id="paymentIntegrationSubscriptionId">
      <data key="d1">variable</data>
      <data key="d2">paymentIntegrationSubscriptionId is a variable that links the subscription to a specific payment integration.</data>
      <data key="d3">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </node>
    <node id="expiryDate">
      <data key="d1">variable</data>
      <data key="d2">expiryDate is a variable that indicates the expiration date of the subscription in date-time format.</data>
      <data key="d3">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </node>
    <node id="lineItemIds">
      <data key="d1">variable</data>
      <data key="d2">lineItemIds is an array variable that can contain identifiers for line items associated with the subscription, which can be nullable.</data>
      <data key="d3">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </node>
    <node id="cancelAtPeriodEnd">
      <data key="d1">variable:|:feature</data>
      <data key="d2">Cancel At Period End is a feature that indicates whether a License will terminate at the end of a billing period, applicable to ad hoc Licenses.:|:cancelAtPeriodEnd is a feature that, when true, prevents the license from renewing automatically after the endTime.:|:cancelAtPeriodEnd is a boolean variable indicating whether the subscription should be canceled at the end of the current period.</data>
      <data key="d3">excerpt_id_41813e2a0a63e0ce47cd087b95c18944:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </node>
    <node id="SessionCreateInvoiceRequest">
      <data key="d1">function:|:schema</data>
      <data key="d2">SessionCreateInvoiceRequest is a schema that outlines the structure of data needed to create an invoice within a session.:|:SessionCreateInvoiceRequest is a function that handles the creation of an invoice session, requiring specific parameters for configuration, such as scope and metadata.</data>
      <data key="d3">excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c:|:excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </node>
    <node id="SessionCreatePricingTableRequest">
      <data key="d1">function:|:schema</data>
      <data key="d2">SessionCreatePricingTableRequest is a function designed to create a pricing table session, also necessitating a scope and metadata configuration with options for product or pricing table UUID.:|:SessionCreatePricingTableRequest is a schema that specifies the data structure required to create a pricing table during a session.</data>
      <data key="d3">excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c:|:excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </node>
    <node id="scope">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">scope is a property required in both the pricing table and checkout session that specifies the component usage context, such as web-components:checkout.:|:scope is a configuration parameter that defines which component the created session will be associated with, such as invoices or pricing tables.</data>
      <data key="d3">excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </node>
    <node id="ingTableUuid">
      <data key="d1">variable</data>
      <data key="d2">ingTableUuid is a variable that serves as an identifier for a specific table used in rendering components related to pricing.</data>
      <data key="d3">excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </node>
    <node id="SessionCreateCheckoutRequest">
      <data key="d1">api:|:schema</data>
      <data key="d2">SessionCreateCheckoutRequest is a schema detailing the attributes necessary for initiating a checkout process in a session.:|:SessionCreateCheckoutRequest is an API object that facilitates the creation of a checkout session, requiring specific properties such as scope and metadata.</data>
      <data key="d3">excerpt_id_7c997969594a4417e475afa3bf6edfa2:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </node>
    <node id="metadata">
      <data key="d1">configuration:|:object</data>
      <data key="d2">Metadata is an object that holds additional properties related to the License, which can include various nullable fields.:|:metadata is an object that holds additional properties and attributes relevant to the configuration, allowing for flexibility in data representation.:|:metadata is a configuration object required for both the pricing table and checkout session, holding essential information, including identifiers for the transaction.:|:metadata is an object variable that can contain additional properties, although none are specified here.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_66dba50ee12718a86cdc1d136f146b1c:|:excerpt_id_ed15282d717d6166fcb39ad94076c541:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </node>
    <node id="LicenseCreateRequest">
      <data key="d1">api:|:schema</data>
      <data key="d2">LicenseCreateRequest is an API object that specifies the properties and requirements necessary for creating a license associated with a plan.:|:LicenseCreateRequest is a schema defining the structure of a request to create a single license.:|:LicenseCreateRequest is an API request type that is designed to create multiple licenses, specified as an array of LicenseCreateRequest items.</data>
      <data key="d3">excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_93a1bdd9071867235ec2537127127c00:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </node>
    <node id="LicenseUpdateRequest">
      <data key="d1">api:|:schema</data>
      <data key="d2">LicenseUpdateRequest is an API request type that allows for the updating of a license, with properties including granteeId and endTime.:|:LicenseUpdateRequest is a defined schema used for the request body when updating a license, detailing the necessary parameters.</data>
      <data key="d3">excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </node>
    <node id="UpdateManyLicensesRequest">
      <data key="d1">api</data>
      <data key="d2">UpdateManyLicensesRequest is an API request type that enables the updating of multiple licenses at once, specified as an array of LicenseUpdateRequest items.</data>
      <data key="d3">excerpt_id_a2081f1929b982759b423b9e6f1d90b7</data>
    </node>
    <node id="paymentService">
      <data key="d1">variable</data>
      <data key="d2">Payment Service is a property indicating the means through which the License was paid for.</data>
      <data key="d3">excerpt_id_ed15282d717d6166fcb39ad94076c541</data>
    </node>
    <node id="startTime">
      <data key="d1">variable</data>
      <data key="d2">Start Time is a timestamp marking when the License begins its validity period, formatted in date-time.</data>
      <data key="d3">excerpt_id_ed15282d717d6166fcb39ad94076c541</data>
    </node>
    <node id="LicenseByPurchaser">
      <data key="d1">configuration:|:schema</data>
      <data key="d2">LicenseByPurchaser is a schema that defines the structure of the data returned for licenses associated with a purchaser.:|:LicenseByPurchaser is a configuration object that contains properties related to the licensing of purchasers, including unique identifiers and status.:|:LicenseByPurchaser is a schema component that defines the structure of license data associated with a purchaser.</data>
      <data key="d3">excerpt_id_436e9d6c339c56d143b4d7eb7f449283:|:excerpt_id_8f76cec6c3c5c205e09868b54019ae7b:|:excerpt_id_9516a99c40383674c2274db86035bea6</data>
    </node>
    <node id="LicenseCount">
      <data key="d1">feature:|:schema</data>
      <data key="d2">LicenseCount is a feature that aggregates license information, including counts of total, assigned, and unassigned licenses.:|:LicenseCount is a schema reference that defines the structure of the response containing the total count of licenses.:|:LicenseCount is a schema referring to the count of licenses in the API response.</data>
      <data key="d3">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4:|:excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167:|:excerpt_id_9516a99c40383674c2274db86035bea6</data>
    </node>
    <node id="LicenseCheck">
      <data key="d1">function:|:schema</data>
      <data key="d2">LicenseCheck is a schema defining the structure of the data returned when checking licenses for grantees.:|:LicenseCheck is a function that checks the license information pertaining to capabilities and expiry, defined as a structured object.</data>
      <data key="d3">excerpt_id_436e9d6c339c56d143b4d7eb7f449283:|:excerpt_id_aec59c84e38b8bb0a72122b3e79c8052</data>
    </node>
    <node id="LicenseCurrentUsage">
      <data key="d1">function:|:example:|:schema</data>
      <data key="d2">LicenseCurrentUsage is a schema referenced in the API documentation, likely defining the structure of license usage data.:|:LicenseCurrentUsage example schema outlines the structure of the JSON response returned by the getCurrentLicenseUsage function.:|:LicenseCurrentUsage is a function that tracks the current usage of licenses, including unit count and updated timestamp.</data>
      <data key="d3">excerpt_id_aec59c84e38b8bb0a72122b3e79c8052:|:excerpt_id_7c997969594a4417e475afa3bf6edfa2:|:excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </node>
    <node id="LicenseUsageRecord">
      <data key="d1">api</data>
      <data key="d2">LicenseUsageRecord is an API that handles the data structure for license usage, including attributes such as UUID, unit count, and timestamps for various events.</data>
      <data key="d3">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </node>
    <node id="unitCount">
      <data key="d1">variable</data>
      <data key="d2">unitCount is an integer variable that tracks the number of units associated with a license usage record.</data>
      <data key="d3">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </node>
    <node id="recordedAt">
      <data key="d1">variable</data>
      <data key="d2">recordedAt is a timestamp indicating when a license usage record was created, formatted as a date-time.</data>
      <data key="d3">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </node>
    <node id="resetAt">
      <data key="d1">variable</data>
      <data key="d2">resetAt is a timestamp that indicates when the usage count resets, applicable only to ad hoc licenses without a subscription.</data>
      <data key="d3">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </node>
    <node id="PlanFeature">
      <data key="d1">configuration:|:schema</data>
      <data key="d2">PlanFeature is an object comprising properties relevant to a feature's configuration within a plan, including identifiers, usage limits, and pricing details.:|:PlanFeature is a schema that describes the attributes and functionalities associated with features within a plan.:|:PlanFeature is a schema definition reference utilized within an array for defining features associated with a plan, crucial for understanding its functionalities.</data>
      <data key="d3">excerpt_id_8afa492aad2baaf4c1b74f1b88500086:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_4ce077a690e06fe23daada90c307e546</data>
    </node>
    <node id="EnumValue">
      <data key="d1">configuration</data>
      <data key="d2">EnumValue represents a set of defined values for a property, typically including UUID, name, feature UUID, and update timestamp.:|:EnumValue is an object that references unique identifiers and names for defined categories within a feature, allowing for categorization and organization of data.</data>
      <data key="d3">excerpt_id_4ce077a690e06fe23daada90c307e546:|:excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="PlanCurrency">
      <data key="d1">configuration:|:schema</data>
      <data key="d2">PlanCurrency is an object that outlines the relationship between a plan and its associated currency, detailing pricing and payment integration information.:|:PlanCurrency is a schema definition reference used within an array in a specific configuration context, representing the currency details in a plan structure.:|:PlanCurrency is a schema that details the currencies associated with a specific plan, reflecting its financial aspects.:|:PlanCurrency defines the specifications for the currency used in plans offered in the system.</data>
      <data key="d3">excerpt_id_8afa492aad2baaf4c1b74f1b88500086:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_4ce077a690e06fe23daada90c307e546:|:excerpt_id_ddc9e4fbd355f7d9a819edc36d148407</data>
    </node>
    <node id="paymentIntegrationPlanId">
      <data key="d1">variable</data>
      <data key="d2">paymentIntegrationPlanId is a variable that stores a unique identifier for a payment integration plan, represented as a string.</data>
      <data key="d3">excerpt_id_23065bf6bbd2623f9f9fc906460b3f70</data>
    </node>
    <node id="PlanCapability">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">PlanCapability is a configuration object that defines the properties related to the capabilities of a plan, including identifiers and timestamps.:|:PlanCapability defines various capabilities associated with a specific plan in the licensing structure.</data>
      <data key="d3">excerpt_id_93a1bdd9071867235ec2537127127c00:|:excerpt_id_23065bf6bbd2623f9f9fc906460b3f70</data>
    </node>
    <node id="capabilityUuid">
      <data key="d1">variable</data>
      <data key="d2">capabilityUuid is a string that specifies the UUID for a capability within the capabilities object.:|:capabilityUuid is a variable within the PlanCapability that stores a unique identifier for a capability, also formatted as a UUID.:|:capabilityUuid is a variable type with the format of uuid, used to uniquely identify capabilities.</data>
      <data key="d3">excerpt_id_b5b087e2945918c40faadd1bcef0b6d2:|:excerpt_id_23065bf6bbd2623f9f9fc906460b3f70:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="capability">
      <data key="d1">object:|:variable</data>
      <data key="d2">capability is a variable in the PlanCapability that references the schema for Capability, indicating the associated capabilities of the plan.:|:capability is an object that contains properties including uuid, name, description, status, productUuid, and updatedAt, used to define a specific capability.:|:Refers to the capability schema that is being referenced, indicating the functionality available.</data>
      <data key="d3">excerpt_id_b5b087e2945918c40faadd1bcef0b6d2:|:excerpt_id_591961ae8bc9634e2c292997a16088d5:|:excerpt_id_23065bf6bbd2623f9f9fc906460b3f70</data>
    </node>
    <node id="StripeInvoice">
      <data key="d1">configuration:|:api</data>
      <data key="d2">StripeInvoice is a schema component that defines the structure of an invoice as per Stripe's billing data.:|:StripeInvoice is an object type that encapsulates various properties relevant to an invoice in the Stripe payment processing system.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5:|:excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </node>
    <node id="first">
      <data key="d1">variable</data>
      <data key="d2">A property representing the first element in a paginated response, with a string type.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="last">
      <data key="d1">variable</data>
      <data key="d2">A property representing the last element in a paginated response, also of string type.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="hasMore">
      <data key="d1">variable</data>
      <data key="d2">A boolean property indicating whether there are more items available in a paginated response.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="data">
      <data key="d1">variable</data>
      <data key="d2">An array property that contains the actual invoice items, structured as objects.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="id">
      <data key="d1">variable</data>
      <data key="d2">id is a string variable that uniquely identifies the price object, used for referencing in transactions.:|:A unique identifier for each invoice item, represented as a string.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="object">
      <data key="d1">variable</data>
      <data key="d2">object is a string variable that indicates the type of the pricing object, contributing to the organizational structure of the data.:|:A string property denoting the type of object, which is 'invoice' in this context.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="account_country">
      <data key="d1">variable</data>
      <data key="d2">A property indicating the country of the account associated with the invoice.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="account_name">
      <data key="d1">variable</data>
      <data key="d2">A property representing the name of the account associated with the invoice.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="account_tax_ids">
      <data key="d1">variable</data>
      <data key="d2">A property that may contain tax identifiers related to the account, nullable if not applicable.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="amount_due">
      <data key="d1">variable</data>
      <data key="d2">An integer property that specifies the total amount due for the invoice.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="amount_paid">
      <data key="d1">variable</data>
      <data key="d2">An integer property indicating the total amount that has been paid towards the invoice.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="amount_remaining">
      <data key="d1">variable</data>
      <data key="d2">An integer property that shows the amount still owed for the invoice.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="amount_shipping">
      <data key="d1">variable</data>
      <data key="d2">An integer property representing the shipping cost associated with the invoice.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="application">
      <data key="d1">variable</data>
      <data key="d2">A string property representing the specific application associated with the transaction.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="application_fee_amount">
      <data key="d1">variable</data>
      <data key="d2">A property that denotes the application fee amount that may be charged, nullable if not applicable.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="attempt_count">
      <data key="d1">variable</data>
      <data key="d2">An integer property detailing how many times payment attempts have been made for the invoice.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="attempted">
      <data key="d1">variable</data>
      <data key="d2">A boolean property that indicates whether an attempt has been made to process the invoice.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="auto_advance">
      <data key="d1">variable</data>
      <data key="d2">A boolean property that indicates whether the invoice will automatically advance to the next stage.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="automatic_tax">
      <data key="d1">configuration</data>
      <data key="d2">A configuration object that relates to the handling of automatic tax functionalities with properties for enabled status and current tax status.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="enabled">
      <data key="d1">variable</data>
      <data key="d2">A boolean property within automatic_tax that indicates whether automatic tax features are enabled.</data>
      <data key="d3">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </node>
    <node id="Enabled">
      <data key="d1">variable</data>
      <data key="d2">Enabled is a boolean variable that indicates whether a certain feature or function is active, with an example value of false.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Billing Reason">
      <data key="d1">variable</data>
      <data key="d2">Billing Reason is a string that explains the reason for billing, typically tied to a subscription cycle.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Charge">
      <data key="d1">variable</data>
      <data key="d2">Charge is a string variable representing the billing charge method, which can also be nullable.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Collection Method">
      <data key="d1">variable</data>
      <data key="d2">Collection Method is a string variable that indicates the method of collecting payments, such as charge automatically.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Created">
      <data key="d1">variable</data>
      <data key="d2">Created is an integer variable formatted as int32, representing the timestamp of creation, with an example value of 1694521666.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Custom Fields">
      <data key="d1">variable</data>
      <data key="d2">Custom Fields is a string variable that can hold custom attributes tied to the entity, which can be nullable.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Customer">
      <data key="d1">variable</data>
      <data key="d2">Customer is a string that represents the unique identifier for a customer, with an example value of cus_NlwjXMq7KBOOR2.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Customer Address">
      <data key="d1">object</data>
      <data key="d2">Customer Address is an object variable containing properties for customer location, including city, country, postal code, and others.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Customer Email">
      <data key="d1">variable</data>
      <data key="d2">Customer Email is a string variable that holds the email address of the customer, with an example of customer@company.com.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Customer Name">
      <data key="d1">variable</data>
      <data key="d2">Customer Name is a string variable that represents the name of the customer, with an example value of A NAME.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Customer Phone">
      <data key="d1">variable</data>
      <data key="d2">Customer Phone is a string variable that represents the customer's phone number and can be nullable.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Customer Shipping">
      <data key="d1">variable</data>
      <data key="d2">Customer Shipping is a string variable for any shipping information related to the customer, which can also be nullable.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Customer Tax Exempt">
      <data key="d1">variable</data>
      <data key="d2">Customer Tax Exempt is a string variable indicating the tax exemption status of the customer, with an example value of none.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Customer Tax IDs">
      <data key="d1">variable</data>
      <data key="d2">Customer Tax IDs is an array variable that holds customer tax identifiers, with items that can be nullable.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="Default Payment Method">
      <data key="d1">variable</data>
      <data key="d2">Default Payment Method is a variable that indicates the default method of payment for the customer, though details are not provided.</data>
      <data key="d3">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </node>
    <node id="customer" />
    <node id="customer_tax_ids">
      <data key="d1">variable</data>
      <data key="d2">customer_tax_ids is a variable that is defined as an array consisting of strings, which can be nullable, used to store customer tax identification numbers.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="default_payment_method">
      <data key="d1">variable</data>
      <data key="d2">default_payment_method is a variable defined as a string that is nullable, representing the default payment method for customer transactions.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="default_source">
      <data key="d1">variable</data>
      <data key="d2">default_source is a variable defined as a string that is nullable, indicating the default source for payments or charges.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="default_tax_rates">
      <data key="d1">variable</data>
      <data key="d2">default_tax_rates is a variable defined as an array of strings that can be nullable, used to store the default tax rates applicable to a customer.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="discount">
      <data key="d1">variable</data>
      <data key="d2">discount is a variable defined as a string that is nullable, used to indicate any discount associated with the invoice or transaction.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="discounts">
      <data key="d1">variable</data>
      <data key="d2">discounts is a variable defined as an array of strings that can be nullable, representing multiple discounts applicable to the invoice or customer.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="due_date">
      <data key="d1">variable</data>
      <data key="d2">due_date is a variable defined as a string that is nullable, indicating the due date for payment of the invoice.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="effective_at">
      <data key="d1">variable</data>
      <data key="d2">effective_at is a variable defined as an integer (int32) used to specify the timestamp representing when the invoice becomes effective.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="ending_balance">
      <data key="d1">variable</data>
      <data key="d2">ending_balance is a variable defined as an integer (int32) indicating the remaining balance due on the invoice after any transactions.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="footer">
      <data key="d1">variable</data>
      <data key="d2">footer is a variable defined as a string that is nullable, used to provide additional information or notes at the bottom of the invoice.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="from_invoice">
      <data key="d1">variable</data>
      <data key="d2">from_invoice is a variable defined as a string that is nullable, potentially referencing the original invoice from which this invoice was generated.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="hosted_invoice_url">
      <data key="d1">api</data>
      <data key="d2">hosted_invoice_url is an API that provides a link to a hosted version of the invoice, represented as a string containing a URL.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="invoice_pdf">
      <data key="d1">api</data>
      <data key="d2">invoice_pdf is an API that provides a link to download a PDF version of the invoice, represented as a string containing a URL.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="last_finalization_error">
      <data key="d1">variable</data>
      <data key="d2">last_finalization_error is a variable defined as a string that is nullable, used to capture any error that occurred during the last finalization of the invoice.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="latest_revision">
      <data key="d1">variable</data>
      <data key="d2">latest_revision is a variable defined as a string that is nullable, representing the most recent revision of the invoice object.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="lines">
      <data key="d1">configuration</data>
      <data key="d2">lines is a configuration object containing properties that define the structure of line items included in the invoice.</data>
      <data key="d3">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </node>
    <node id="Object">
      <data key="d1">variable</data>
      <data key="d2">Object is a variable type that represents a string and has an example value of 'list'.</data>
      <data key="d3">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </node>
    <node id="Id">
      <data key="d1">variable</data>
      <data key="d2">Id is a variable that uniquely identifies the plan, represented as a string to link back to a specific set of attributes.:|:Id is a string variable representing the unique identifier for an object, with an example value 'il_1NpVh0QQTaDeHd2tKCrxg01G'.</data>
      <data key="d3">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f:|:excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </node>
    <node id="Amount">
      <data key="d1">variable</data>
      <data key="d2">Amount is a variable indicating the quantity related to the plan, which is represented as an integer value.:|:Amount is an integer variable that represents a numerical value associated with the data, using the format int32 and having an example of '-61'.</data>
      <data key="d3">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f:|:excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </node>
    <node id="Description">
      <data key="d1">variable</data>
      <data key="d2">Description is a string variable that provides additional details about a data item, with the example stating 'Unused time on Warm up calculator 2 after 12 Sep 2023'.</data>
      <data key="d3">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </node>
    <node id="Livemode">
      <data key="d1">variable</data>
      <data key="d2">Livemode is a boolean variable indicating whether the data is in live mode, with an example of 'true'.</data>
      <data key="d3">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </node>
    <node id="Discountable">
      <data key="d1">variable</data>
      <data key="d2">Discountable is a boolean variable indicating whether discounts can be applied, exemplified with 'false'.</data>
      <data key="d3">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </node>
    <node id="Period">
      <data key="d1">object:|:variable</data>
      <data key="d2">Period is an object variable that includes details regarding time-related properties such as 'end', which is represented as an integer.:|:Period is an object that encapsulates a time range within which certain activities or events occur, defined by a start and end attribute.</data>
      <data key="d3">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f:|:excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </node>
    <node id="Properties">
      <data key="d1">configuration</data>
      <data key="d2">Properties defines a set of characteristics or parameters that belong to an object, typically detailing its structure and how it can be utilized.</data>
      <data key="d3">excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </node>
    <node id="Billing Scheme">
      <data key="d1">variable</data>
      <data key="d2">Billing Scheme defines the structure of how charges are applied regarding the plan, such as whether billed per unit or another method.</data>
      <data key="d3">excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </node>
    <node id="livemode">
      <data key="d1">variable</data>
      <data key="d2">livemode is a boolean variable indicating if the system is in live mode, used in configurations to differentiate between testing and production environments.:|:livemode is a boolean variable indicating whether the mode is live or not and can be set to true.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="nickname">
      <data key="d1">variable</data>
      <data key="d2">nickname is a variable used to assign a human-readable name, with an example of 'Pro'.:|:nickname is a string variable used to designate a user-friendly name for the product, enhancing user experience.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="product">
      <data key="d1">variable</data>
      <data key="d2">product is a string variable that represents the unique identifier of the product being configured, used in various transactions.:|:product is a variable that represents a unique identifier for a product, with an example value.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="tiers_mode">
      <data key="d1">variable</data>
      <data key="d2">tiers_mode is a variable that indicates the tiered pricing mode and can be nullable.:|:tiers_mode is a string variable that denotes the tiered pricing strategy, which can be null, allowing for varied pricing models.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="transform_usage">
      <data key="d1">variable</data>
      <data key="d2">transform_usage is a string variable that outlines how usage will be transformed, potentially providing insights into usage patterns.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </node>
    <node id="trial_period_days">
      <data key="d1">variable</data>
      <data key="d2">trial_period_days is a string variable that specifies the duration of the trial period available for the product, indicating potential usage limits.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </node>
    <node id="usage_type">
      <data key="d1">variable</data>
      <data key="d2">usage_type is a string variable indicating the licensing type associated with the product, defining how it can be used.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </node>
    <node id="price">
      <data key="d1">object</data>
      <data key="d2">price is an object that contains properties related to the cost structure of the product, encapsulating essential pricing details.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </node>
    <node id="billing_scheme">
      <data key="d1">variable</data>
      <data key="d2">billing_scheme is a string variable that describes the methodology for charging customers, which can vary significantly.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </node>
    <node id="created">
      <data key="d1">variable</data>
      <data key="d2">created is an integer variable that represents the timestamp when the object was created, providing a historical context.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </node>
    <node id="custom_unit_amount">
      <data key="d1">variable</data>
      <data key="d2">custom_unit_amount is a variable that represents a customizable monetary amount, which can be set as nullable.:|:custom_unit_amount is a string variable that allows for customization in billing amount, providing flexibility for pricing.</data>
      <data key="d3">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97:|:excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="lookup_key">
      <data key="d1">variable</data>
      <data key="d2">lookup_key is a variable that can be used for key lookups and is nullable.</data>
      <data key="d3">excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="recurring">
      <data key="d1">object</data>
      <data key="d2">recurring is an object variable that contains properties related to recurring payments, including aggregate_usage, interval, and interval_count.</data>
      <data key="d3">excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="tax_behavior">
      <data key="d1">variable</data>
      <data key="d2">tax_behavior is a variable that indicates how taxes are handled, with an example value of 'unspecified'.</data>
      <data key="d3">excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="transform_quantity">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">Transform_quantity is a configuration field that specifies the type of transformation to be applied, denoted as a string.:|:transform_quantity is a variable that can apply transformations to quantities and is nullable.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8:|:excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </node>
    <node id="interval">
      <data key="d1">variable</data>
      <data key="d2">interval is a variable of type string that specifies the billing cycle for the subscription plan.:|:interval is a string variable representing the frequency of the pricing cycle, with an example value of 'month'.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="nullable">
      <data key="d1">variable</data>
      <data key="d2">Nullable is a data attribute indicating that a field can be left empty or null.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </node>
    <node id="unit_amount">
      <data key="d1">variable</data>
      <data key="d2">Unit_amount is an integer property that defines the quantitative amount of a particular item, with an example value of 99.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </node>
    <node id="unit_amount_decimal">
      <data key="d1">variable</data>
      <data key="d2">Unit_amount_decimal is a string property that allows representation of the unit amount in decimal format, with an example value of '99'.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </node>
    <node id="proration_details">
      <data key="d1">configuration</data>
      <data key="d2">Proration_details is a configuration object that defines additional information about proration, including credited items.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </node>
    <node id="subscription_item">
      <data key="d1">variable</data>
      <data key="d2">Subscription_item is a variable denoting a specific item under a subscription, represented by an example like 'si_NlwjmwWIcCnR0r'.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </node>
    <node id="tax_amounts">
      <data key="d1">variable</data>
      <data key="d2">Tax_amounts is an array property that outlines the various tax amounts applicable, including nullable items.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </node>
    <node id="tax_rates">
      <data key="d1">variable</data>
      <data key="d2">Tax_rates is an array property that lists the applicable tax rates for a given item, also including nullable items.</data>
      <data key="d3">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </node>
    <node id="Tax Rates">
      <data key="d1">variable</data>
      <data key="d2">Tax Rates is an array that holds strings representing various tax rates applicable to an invoice item.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Unit Amount Excluding Tax">
      <data key="d1">variable</data>
      <data key="d2">Unit Amount Excluding Tax is a string representing the amount of the invoice item excluding tax, with an example value of -61.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Has More">
      <data key="d1">variable</data>
      <data key="d2">Has More is a boolean that indicates whether there are more items available, with an example value of false.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Total Count">
      <data key="d1">variable</data>
      <data key="d2">Total Count is an integer representing the total number of items, formatted as int32, with an example value of 3.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Next Payment Attempt">
      <data key="d1">variable</data>
      <data key="d2">Next Payment Attempt is a string that can indicate when the next payment will be attempted, and can be nullable.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Number">
      <data key="d1">variable</data>
      <data key="d2">Number is a string representing a unique identifier for the invoice item, with an example value of C29E5E45-0014.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="On Behalf Of">
      <data key="d1">variable</data>
      <data key="d2">On Behalf Of is a string indicating the entity on whose behalf the action is being done, and can be nullable.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Paid">
      <data key="d1">variable</data>
      <data key="d2">Paid is a boolean that indicates whether the invoice item has been settled, with an example value of true.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Paid Out Of Band">
      <data key="d1">variable</data>
      <data key="d2">Paid Out Of Band is a boolean indicating whether the payment was processed outside the standard method, with an example value of false.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Payment Intent">
      <data key="d1">variable</data>
      <data key="d2">Payment Intent is a string that represents an optional identifier related to the payment process, and can be nullable.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Payment Settings">
      <data key="d1">configuration</data>
      <data key="d2">Payment Settings is an object containing configurations related to payment processing, allowing parameters like default mandate and payment method options.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Default Mandate">
      <data key="d1">variable</data>
      <data key="d2">Default Mandate is a string that may indicate a default authorization for recurring payments, and can be nullable.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Payment Method Options">
      <data key="d1">configuration</data>
      <data key="d2">Payment Method Options is an object that holds configurations for different payment methods and can be nullable.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="ACSS Debit">
      <data key="d1">variable</data>
      <data key="d2">ACSS Debit is a string that may represent configuration options for ACH payments, and can be nullable.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Bancontact">
      <data key="d1">variable</data>
      <data key="d2">Bancontact is a string that may represent configuration options for the Bancontact payment method, and can be nullable.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Card">
      <data key="d1">configuration</data>
      <data key="d2">Card is an object that holds configurations related to card payments, including the property request three d secure.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </node>
    <node id="Request Three D Secure">
      <data key="d1">variable</data>
      <data key="d2">Request Three D Secure is a property under Card that specifies whether to request a 3D Secure authentication during the payment process.:|:Request Three D Secure is a variable that specifies whether three-dimensional secure payment verification is requested during the transaction.</data>
      <data key="d3">excerpt_id_86f7f994692e668da939abf6bdd64677:|:excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Customer Balance">
      <data key="d1">variable</data>
      <data key="d2">Customer Balance represents the current balance of the customer, which can be nullable and reflects the amount available for transactions.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Konbini">
      <data key="d1">variable</data>
      <data key="d2">Konbini is a variable that refers to a specific type of payment method, often associated with convenience store payments in Japan.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="SEPA Debit">
      <data key="d1">variable</data>
      <data key="d2">SEPA Debit is a variable that allows for the direct debit transactions within the Single Euro Payments Area, facilitating cross-border payments in euros.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="US Bank Account">
      <data key="d1">variable</data>
      <data key="d2">US Bank Account is a variable that represents a banking account located in the United States, which can be used for transaction processing.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Payment Method Types">
      <data key="d1">feature</data>
      <data key="d2">Payment Method Types indicates the various types of payment methods that can be utilized for transactions, formatted as strings and nullable.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Period End">
      <data key="d1">variable</data>
      <data key="d2">Period End is an integer variable representing the end date of a billing period in a Unix timestamp format.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Period Start">
      <data key="d1">variable</data>
      <data key="d2">Period Start is an integer variable representing the beginning date of a billing period in Unix timestamp format.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Post Payment Credit Notes Amount">
      <data key="d1">variable</data>
      <data key="d2">Post Payment Credit Notes Amount denotes the total amount of credit notes issued after a payment, recorded as an integer.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Pre Payment Credit Notes Amount">
      <data key="d1">variable</data>
      <data key="d2">Pre Payment Credit Notes Amount signifies the total amount of credit notes issued before a payment, represented as an integer.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Quote">
      <data key="d1">variable</data>
      <data key="d2">Quote is a variable that contains a string representing a price quote or offer related to a transaction.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Receipt Number">
      <data key="d1">variable</data>
      <data key="d2">Receipt Number is a variable that stores the string associated with the transaction receipt, helping identify the payment uniquely.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Rendering">
      <data key="d1">variable</data>
      <data key="d2">Rendering is a variable that might refer to the representation of payment information in a specified format, indicated as a string.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Rendering Options">
      <data key="d1">variable</data>
      <data key="d2">Rendering Options outlines the various configurations available for formatting the rendering variable of transaction details.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Shipping Cost">
      <data key="d1">variable</data>
      <data key="d2">Shipping Cost is a variable indicating the amount charged for shipping in a transaction, which can be nullable.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Shipping Details">
      <data key="d1">variable</data>
      <data key="d2">Shipping Details refers to a variable that includes information about the shipment, formatted as a string and nullable.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Starting Balance">
      <data key="d1">variable</data>
      <data key="d2">Starting Balance is an integer that represents the initial balance before any transactions take place, commonly recorded with a value of zero.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Statement Descriptor">
      <data key="d1">variable</data>
      <data key="d2">Statement Descriptor is a variable that captures a description that appears on a customer's bank statement to identify a charge.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="Status Transitions">
      <data key="d1">configuration</data>
      <data key="d2">Status Transitions is a structured object that details the changes in status throughout the course of a transaction, providing insight into its lifecycle.</data>
      <data key="d3">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </node>
    <node id="status_transitions">
      <data key="d1">configuration</data>
      <data key="d2">Status transitions define various stages in the payment process, including timestamps for finalized, marked uncollectible, paid, and voided states.</data>
      <data key="d3">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="subscription_details">
      <data key="d1">configuration</data>
      <data key="d2">Subscription details include metadata about the subscription, consisting of properties such as granteeId and member.</data>
      <data key="d3">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="subtotal">
      <data key="d1">variable</data>
      <data key="d2">Subtotal is a variable representing the subtotal amount of a transaction, formatted as an integer.</data>
      <data key="d3">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="subtotal_excluding_tax">
      <data key="d1">variable</data>
      <data key="d2">Subtotal excluding tax represents the subtotal amount without tax included, also an integer format.</data>
      <data key="d3">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="tax">
      <data key="d1">variable</data>
      <data key="d2">Tax is a variable that records the tax amount applicable to a transaction, which can be nullable.</data>
      <data key="d3">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="total">
      <data key="d1">variable</data>
      <data key="d2">Total is a variable that represents the total amount of a transaction, also formatted as an integer.</data>
      <data key="d3">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="total_discount_amounts">
      <data key="d1">feature</data>
      <data key="d2">Total discount amounts is an array of possible discount amounts that can be applied to a transaction and can be nullable.</data>
      <data key="d3">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="total_excluding_tax">
      <data key="d1">variable</data>
      <data key="d2">Total excluding tax represents the overall transaction amount without tax considerations, formatted as an integer.</data>
      <data key="d3">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="total_tax_amounts">
      <data key="d1">variable:|:feature</data>
      <data key="d2">total_tax_amounts is a variable that holds an array of tax amounts, specified to allow for nullable string items, indicating it may not always have values.:|:Total tax amounts is an array that may include different tax amount entries that apply to the transaction and can be nullable.</data>
      <data key="d3">excerpt_id_0445f247b05816e0bff80bd0e5c12785:|:excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </node>
    <node id="transfer_data">
      <data key="d1">variable</data>
      <data key="d2">transfer_data is a variable that holds a string value, allowing for null entries, which suggests it may occasionally contain no data.</data>
      <data key="d3">excerpt_id_0445f247b05816e0bff80bd0e5c12785</data>
    </node>
    <node id="webhooks_delivered_at">
      <data key="d1">variable</data>
      <data key="d2">webhooks_delivered_at is a variable that stores an integer timestamp in int32 format, indicating when webhooks were delivered, with an example provided.</data>
      <data key="d3">excerpt_id_0445f247b05816e0bff80bd0e5c12785</data>
    </node>
    <node id="r_data">
      <data key="d1">configuration</data>
      <data key="d2">r_data is a configuration schema that outlines data types and properties related to subscription plans, including webhooks and plan settings.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </node>
    <node id="SubscriptionUpdatablePlan">
      <data key="d1">api:|:schema</data>
      <data key="d2">SubscriptionUpdatablePlan is an API object schema that includes various properties related to subscription plans like uuid, name, description, and status.:|:SubscriptionUpdatablePlan is a defined schema that details the attributes and behaviors for an updatable subscription.</data>
      <data key="d3">excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </node>
    <node id="trialDays">
      <data key="d1">variable</data>
      <data key="d2">trialDays is an integer representing the number of days a trial period lasts for a plan, which can be nullable.:|:trialDays is an integer variable that specifies the number of days in the trial period for the subscription plan, and it can be nullable.</data>
      <data key="d3">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </node>
    <node id="evaluation">
      <data key="d1">variable</data>
      <data key="d2">evaluation is a boolean indicating if the plan is subject to an evaluation process ahead of a trial.:|:evaluation is a boolean variable that signifies whether the subscription is in an evaluation state.</data>
      <data key="d3">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </node>
    <node id="evalDays">
      <data key="d1">variable</data>
      <data key="d2">evalDays is an integer variable representing the number of evaluation days.:|:evalDays is an integer variable representing the number of days for evaluation, with an example value of 14.:|:evalDays is an integer representing how many days are allotted for evaluation of the plan, typically before transitioning into a trial.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="visibility">
      <data key="d1">variable</data>
      <data key="d2">visibility is a string variable that determines the accessibility scope of a feature.:|:visibility is a variable of type string that describes the visibility settings of the subscription plan.:|:visibility is a string variable that defines the visibility status of the entity, demonstrated with an example value of 'public'.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b:|:excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="licenseType">
      <data key="d1">variable</data>
      <data key="d2">licenseType is a string variable that indicates the type of license, with an example value of 'licensed'.:|:licenseType is a variable of type string that indicates the kind of license associated with the subscription plan.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="perSeatAmount">
      <data key="d1">variable</data>
      <data key="d2">perSeatAmount is an integer variable that defines the cost of the subscription plan per user.:|:perSeatAmount is an integer variable that specifies the amount allowed per seat, with an example value of 1.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="length">
      <data key="d1">variable</data>
      <data key="d2">length is an integer variable that specifies the duration or length of a particular setting, with an example value of 1.:|:length is an integer variable which represents the duration of the subscription plan.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="planType">
      <data key="d1">variable</data>
      <data key="d2">planType is a variable of type string that identifies the type of subscription plan.:|:planType is a string variable that describes the type of plan, illustrated with an example value of 'standard'.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="pricingType">
      <data key="d1">variable</data>
      <data key="d2">pricingType is a variable of type string denoting how the pricing for the subscription plan is structured.:|:pricingType is a string variable that defines the nature of pricing, demonstrated with an example value of 'paid'.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="environment">
      <data key="d1">variable</data>
      <data key="d2">environment is a variable of type string that specifies the operating environment of the subscription plan.:|:environment is a string variable denoting the environment setting, with an example value of 'dev'.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="paddlePlanId">
      <data key="d1">variable</data>
      <data key="d2">paddlePlanId is a string variable that has been deprecated and may be nullable, referencing a specific plan ID.:|:paddlePlanId is a deprecated variable of type string that was previously used to associate the subscription plan with Paddle, and it can be nullable.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="salablePlan">
      <data key="d1">variable</data>
      <data key="d2">salablePlan is a boolean variable that indicates if the plan is salable, with an example value of false.:|:salablePlan is a boolean variable indicating whether the subscription plan is available for sale.</data>
      <data key="d3">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515:|:excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="PricingTable">
      <data key="d1">configuration:|:schema</data>
      <data key="d2">PricingTable is a defined schema that outlines the structure of the data returned by the API when a pricing table is successfully retrieved.:|:PricingTable is a configuration object that outlines properties of a pricing structure, including identifiers, status, themes, and features associated with a product.:|:PricingTable is a schema reference within the API documentation that outlines the structure and data types for pricing information in a checkout process.</data>
      <data key="d3">excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c:|:excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </node>
    <node id="title">
      <data key="d1">variable</data>
      <data key="d2">title is a string variable that may provide an optional label for additional context regarding the pricing table, which can be null.</data>
      <data key="d3">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="text">
      <data key="d1">variable</data>
      <data key="d2">text is a variable that may hold descriptive information about the pricing table, which can also be null.</data>
      <data key="d3">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="theme">
      <data key="d1">variable</data>
      <data key="d2">theme represents a variable giving style attributes to the pricing table, which can influence its visual appearance, such as a light theme.</data>
      <data key="d3">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="featureOrder">
      <data key="d1">variable</data>
      <data key="d2">featureOrder is a variable that provides the order in which features appear in the pricing structure, aiding in arrangement and prioritization.</data>
      <data key="d3">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="customTheme">
      <data key="d1">variable</data>
      <data key="d2">customTheme is a variable that allows for personalized theming options for the pricing table, which may be null.</data>
      <data key="d3">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="featuredPlanUuid">
      <data key="d1">variable</data>
      <data key="d2">featuredPlanUuid is a specific UUID that links to a highlighted plan within a pricing table, which can also be null.</data>
      <data key="d3">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="featureUuid">
      <data key="d1">variable</data>
      <data key="d2">featureUuid is a unique identifier for each feature within the system, ensuring each can be distinctly referenced.</data>
      <data key="d3">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="sortOrder">
      <data key="d1">variable</data>
      <data key="d2">sortOrder is an integer that determines the order in which plans are displayed, allowing for custom sorting.:|:sortOrder is an integer variable that determines the order of features as they are presented, facilitating user experience.</data>
      <data key="d3">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f:|:excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </node>
    <node id="feature">
      <data key="d1">object:|:feature</data>
      <data key="d2">feature is an object type that encapsulates attributes of a specific functionality within a system or application.:|:feature represents an object containing details about a specific feature, including its unique ID, name, description, display name, and variable name.</data>
      <data key="d3">excerpt_id_bec94aa703c289fd51df9950f46b6864:|:excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="Display Name">
      <data key="d1">variable</data>
      <data key="d2">Display Name is a variable representing the user-friendly name of a feature, defined as a string.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </node>
    <node id="Default Value">
      <data key="d1">variable</data>
      <data key="d2">Default Value indicates the initial value assigned to a feature, represented as a string with an example of 'false'.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </node>
    <node id="Product UUID">
      <data key="d1">variable</data>
      <data key="d2">Product UUID is a unique identifier for the product associated with the feature, formatted as UUID.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </node>
    <node id="Updated At">
      <data key="d1">variable</data>
      <data key="d2">Updated At is a timestamp indicating when the feature attributes were last modified, formatted as date-time.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </node>
    <node id="Sort Order">
      <data key="d1">variable</data>
      <data key="d2">Sort Order is an integer determining the sequence in which the feature is displayed or processed.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </node>
    <node id="Feature Enum Options">
      <data key="d1">feature</data>
      <data key="d2">Feature Enum Options provide a set of predefined options for the feature, with each option containing properties like uuid, name, featureUuid, and updatedAt.</data>
      <data key="d3">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </node>
    <node id="Sample Product">
      <data key="d1">example</data>
      <data key="d2">Sample Product is a test product used for demonstrating purposes, with attributes such as name, logo URL, and organization.</data>
      <data key="d3">excerpt_id_1c13b52ff77353471ab9c278f922f502</data>
    </node>
    <node id="Type">
      <data key="d1">variable</data>
      <data key="d2">Type is a string that is used to define the nature of the data, with an example value of 'public'.:|:Type is a variable representing the data type of a property, such as a string, boolean, or integer.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34:|:excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="ValueType">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">ValueType specifies the type of the value expected, which is a string type with an example value of 'boolean'.:|:ValueType defines the type of value that can be stored, indicating the expected data format like boolean or string.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34:|:excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="DefaultValue">
      <data key="d1">configuration:|:variable</data>
      <data key="d2">DefaultValue indicates the initial value assigned, represented as a string with an example of 'false'.:|:DefaultValue specifies the fallback value to be used when no specific value is provided, often seen in data configurations.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34:|:excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="ShowUnlimited">
      <data key="d1">variable:|:feature</data>
      <data key="d2">ShowUnlimited is a boolean that determines if there are unlimited options available, with an example value of false.:|:ShowUnlimited is a feature indicating whether unlimited values are allowed, represented as a boolean.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34:|:excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="ProductUuid">
      <data key="d1">variable</data>
      <data key="d2">ProductUuid is a variable represented as a UUID, used to uniquely identify a product.:|:ProductUuid is a string following UUID format that identifies the product uniquely.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34:|:excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="UpdatedAt">
      <data key="d1">variable</data>
      <data key="d2">UpdatedAt is a variable that holds the last updated timestamp in a specific date-time format.:|:UpdatedAt is a string in date-time format that indicates the last time the data was updated, with an example value of '2023-10-03T09:50:54.288Z'.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34:|:excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="SortOrder">
      <data key="d1">variable</data>
      <data key="d2">SortOrder is a variable that determines the order in which items are displayed or processed, represented as an integer.:|:SortOrder is an integer that defines the ordering of items, using int32 format with an example of 0.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34:|:excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="FeatureEnumOptions">
      <data key="d1">feature</data>
      <data key="d2">FeatureEnumOptions is an array of objects that list available feature options, containing properties such as uuid, name, featureUuid, and updatedAt.</data>
      <data key="d3">excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34</data>
    </node>
    <node id="UUID">
      <data key="d1">variable</data>
      <data key="d2">UUID is a universally unique identifier used to uniquely identify information in systems across applications.:|:UUID is a universally unique identifier used to uniquely identify information in a system.</data>
      <data key="d3">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330:|:excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </node>
    <node id="isSubscribed">
      <data key="d1">variable</data>
      <data key="d2">isSubscribed is a boolean variable indicating whether a user is subscribed, specifics on state provided without an example value.</data>
      <data key="d3">excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </node>
    <node id="String">
      <data key="d1">variable</data>
      <data key="d2">String is a variable type that defines a sequence of characters used in formatting or manipulating data.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="isUnlimited">
      <data key="d1">variable</data>
      <data key="d2">isUnlimited is a boolean variable that indicates whether a limit is placed on a resource or not.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="isUsage">
      <data key="d1">variable</data>
      <data key="d2">isUsage is a boolean variable that signifies whether the resource is subject to usage constraints.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="pricePerUnit">
      <data key="d1">variable</data>
      <data key="d2">pricePerUnit is an integer variable that represents the cost for each unit of a resource.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="minUsage">
      <data key="d1">variable</data>
      <data key="d2">minUsage is an integer variable that specifies the minimum amount of resource that can be utilized.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="maxUsage">
      <data key="d1">variable</data>
      <data key="d2">maxUsage is an integer variable that sets the maximum limit of resource usage.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="properties">
      <data key="d1">variable</data>
      <data key="d2">properties are the attributes associated with an object that define its characteristics.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="variableName">
      <data key="d1">variable</data>
      <data key="d2">variableName is a string variable that represents the name of a feature in code or documentation.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="valueType">
      <data key="d1">variable</data>
      <data key="d2">valueType is a string variable that describes the type of value a feature can take.</data>
      <data key="d3">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </node>
    <node id="Example">
      <data key="d1">example</data>
      <data key="d2">Example provides specific instances or values for various properties, showcasing expected data formats.</data>
      <data key="d3">excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </node>
    <node id="Price">
      <data key="d1">variable</data>
      <data key="d2">Price is represented as an integer and is used to denote the cost of an item, with a specified type and format.</data>
      <data key="d3">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </node>
    <node id="PaymentIntegrationPlanId">
      <data key="d1">variable</data>
      <data key="d2">PaymentIntegrationPlanId is a string that represents an identifier for a specific payment integration plan.</data>
      <data key="d3">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </node>
    <node id="ShortName">
      <data key="d1">variable</data>
      <data key="d2">ShortName is a string representing a concise identifier for a currency, such as GBP.</data>
      <data key="d3">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </node>
    <node id="LongName">
      <data key="d1">variable</data>
      <data key="d2">LongName is a string representing the full name of the currency, such as Pound Sterling.</data>
      <data key="d3">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </node>
    <node id="Symbol">
      <data key="d1">variable</data>
      <data key="d2">Symbol is a string that serves as the graphical representation of the currency, like '£'.</data>
      <data key="d3">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </node>
    <node id="Pound Sterling">
      <data key="d1">example</data>
      <data key="d2">Pound Sterling is an example of a type of currency, represented in the underlying structure as a string.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="£">
      <data key="d1">example</data>
      <data key="d2">The symbol '£' represents the Pound Sterling currency.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="Permission">
      <data key="d1">object</data>
      <data key="d2">Permission is described as an object type with properties including value, type, description, and dependencies.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="PermissionCreateRequest">
      <data key="d1">object</data>
      <data key="d2">PermissionCreateRequest is an object type representing a request to create a permission, requiring a value.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="PermissionUpdateRequest">
      <data key="d1">object</data>
      <data key="d2">PermissionUpdateRequest is an object type that represents a request to update a permission, with properties for value, type, description, and dependencies.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="Role">
      <data key="d1">object</data>
      <data key="d2">Role is defined as an object type with properties such as name, description, and permissions, indicating the responsibilities of a user within a system.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="RoleCreateRequest">
      <data key="d1">object</data>
      <data key="d2">RoleCreateRequest is an object that requires a name and represents a request to create a role.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="RoleUpdateRequest">
      <data key="d1">object</data>
      <data key="d2">RoleUpdateRequest is an object that allows for updating role properties including name, description, and permissions.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="User">
      <data key="d1">object</data>
      <data key="d2">User is an object type representing a system user, including identifiers, names, roles, and permissions.</data>
      <data key="d3">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </node>
    <node id="UserCreateRequest">
      <data key="d1">configuration</data>
      <data key="d2">UserCreateRequest is a configuration object that defines the properties and required fields necessary for creating a user, which includes id, name, role, and permissions.</data>
      <data key="d3">excerpt_id_9068a90fd80f17ef9e8179b4ecc4f666</data>
    </node>
    <node id="UserUpdateRequest">
      <data key="d1">configuration</data>
      <data key="d2">UserUpdateRequest is a configuration object designed for updating user information, containing properties like id, name, role, and permissions.</data>
      <data key="d3">excerpt_id_9068a90fd80f17ef9e8179b4ecc4f666</data>
    </node>
    <node id="AddRemoveByUuid">
      <data key="d1">function</data>
      <data key="d2">AddRemoveByUuid is a function object that defines properties for adding or removing items by their unique identifiers, including add and remove arrays that can be null.</data>
      <data key="d3">excerpt_id_9068a90fd80f17ef9e8179b4ecc4f666</data>
    </node>
    <node id="StripePaymentMethod">
      <data key="d1">configuration:|:schema</data>
      <data key="d2">StripePaymentMethod is a configuration object outlining properties relevant to payment methods within Stripe, including id, billing details, card info, creation timestamp, customer ID, live mode status, and metadata.:|:StripePaymentMethod is a schema that defines the structure of the payment method data returned by the API when retrieving subscription payment information.</data>
      <data key="d3">excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a:|:excerpt_id_9068a90fd80f17ef9e8179b4ecc4f666</data>
    </node>
    <node id="StripeBillingDetails">
      <data key="d1">configuration</data>
      <data key="d2">StripeBillingDetails is a configuration object containing billing details related to Stripe payments, including address, email, full name, and optional phone number.</data>
      <data key="d3">excerpt_id_9068a90fd80f17ef9e8179b4ecc4f666</data>
    </node>
    <node id="StripeAddress">
      <data key="d1">configuration</data>
      <data key="d2">StripeAddress is a configuration object that contains detailed address information necessary for billing in Stripe transactions, including city, country, line1, line2 (nullable), postal code and state (nullable).</data>
      <data key="d3">excerpt_id_9068a90fd80f17ef9e8179b4ecc4f666</data>
    </node>
    <node id="StripeCard">
      <data key="d1">object</data>
      <data key="d2">StripeCard is an object representing the details of a credit card, including attributes such as brand, country, expiration date, and security features.</data>
      <data key="d3">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </node>
    <node id="StripeChecks">
      <data key="d1">object</data>
      <data key="d2">StripeChecks is an object that represents various checks performed on a card, such as address and CVC verification.</data>
      <data key="d3">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </node>
    <node id="StripeNetworks">
      <data key="d1">object</data>
      <data key="d2">StripeNetworks is an object containing information about the networks associated with a credit card, including available options and preferred network.</data>
      <data key="d3">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </node>
    <node id="StripeThreeDSecureUsage">
      <data key="d1">object</data>
      <data key="d2">StripeThreeDSecureUsage is an object that indicates whether 3D Secure authentication is supported for a given card.</data>
      <data key="d3">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </node>
    <node id="CheckoutCreateSubscriptionRequest">
      <data key="d1">object:|:schema</data>
      <data key="d2">CheckoutCreateSubscriptionRequest is a schema that defines the structure of the request body needed to create a subscription in the Stripe API.:|:CheckoutCreateSubscriptionRequest is a request object for creating a subscription that includes properties like plan UUID, email, member, grantee ID, and currency.</data>
      <data key="d3">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be:|:excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </node>
    <node id="CheckoutCreateIntentRequest">
      <data key="d1">object:|:schema</data>
      <data key="d2">CheckoutCreateIntentRequest is a request object used to create a payment intent, mirroring the subscription request properties.:|:CheckoutCreateIntentRequest is a request schema for creating a Stripe Setup Intent, defined within the API.</data>
      <data key="d3">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be:|:excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab</data>
    </node>
    <node id="CheckoutCreateSubscriptionResponse">
      <data key="d1">api:|:schema</data>
      <data key="d2">CheckoutCreateSubscriptionResponse is an API response that includes properties for handling subscription checkout processes, including client secret.:|:CheckoutCreateSubscriptionResponse is an API response schema used in the Checkout service to create subscriptions in Stripe.:|:CheckoutCreateSubscriptionResponse is a schema outlining the structure of the response from the API after successfully creating a subscription, including the client secret.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab:|:excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </node>
    <node id="CheckoutCreateIntentResponse">
      <data key="d1">api:|:schema</data>
      <data key="d2">CheckoutCreateIntentResponse is a response schema from the API that contains data after successfully creating a Stripe Setup Intent.:|:CheckoutCreateIntentResponse is an API response that provides a client secret for initiating a checkout process.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab</data>
    </node>
    <node id="EventResponse">
      <data key="d1">api:|:example:|:schema</data>
      <data key="d2">EventResponse is a schema defined in the API specification that describes the structure of an event response in a standardized format.:|:EventResponse is an API response containing properties related to events including an event UUID.:|:EventResponse is a defined schema that describes the response after a subscription-related event, returning relevant data in a structured format.:|:EventResponse is a schema that defines the structure of the response returned when the decrement operation is successfully accepted.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_760444f325abfe9a14b47ad4de73095c:|:excerpt_id_0b9474a6f5a5fdb347caada72f379c22:|:excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </node>
    <node id="CursorPaginationLicensesResponse">
      <data key="d1">api:|:schema</data>
      <data key="d2">CursorPaginationLicensesResponse is an API response for handling a paginated list of licenses, including first and last UUIDs and data items.:|:CursorPaginationLicensesResponse is a schema representing the response structure for a paginated license retrieval operation.:|:CursorPaginationLicensesResponse is a schema reference that defines the structure for paginated responses related to licenses.</data>
      <data key="d3">excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167:|:excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_2803692fca51400dad72f2a2a41f66b4</data>
    </node>
    <node id="CursorPaginationLicensesUsageRecordsResponse">
      <data key="d1">api:|:schema</data>
      <data key="d2">CursorPaginationLicensesUsageRecordsResponse is a schema that defines the structure of the response when retrieving license usage records with pagination.:|:CursorPaginationLicensesUsageRecordsResponse is an API response for paginated license usage records, detailing first and last UUIDs and data items.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="CursorPaginationSubscriptionsResponse">
      <data key="d1">api:|:schema</data>
      <data key="d2">CursorPaginationSubscriptionsResponse is an API response structured for paginated subscriptions, containing first and last UUIDs and data items.:|:CursorPaginationSubscriptionsResponse is a schema detailing the structure of the response when retrieving paginated subscription data.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </node>
    <node id="Events">
      <data key="d1">function:|:feature</data>
      <data key="d2">Events encompasses operations related to events, providing functionality to handle various occurrences within the system.:|:Events feature pertains to operations related to managing event data and interactions.</data>
      <data key="d3">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </node>
    <node id="/products">
      <data key="d1">api</data>
      <data key="d2">The /products API endpoint allows users to retrieve a list of all available products, indicating its role in product management.</data>
      <data key="d3">excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </node>
    <node id="/products/{productUuid}">
      <data key="d1">api</data>
      <data key="d2">The /products/{productUuid} API endpoint enables retrieval of a specific product by its UUID, with options for expanding relational data.</data>
      <data key="d3">excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </node>
    <node id="getProducts">
      <data key="d1">function</data>
      <data key="d2">getProducts is the operationId used to retrieve the list of all products from the API, central to product interactions.</data>
      <data key="d3">excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </node>
    <node id="getProductByUuid">
      <data key="d1">function</data>
      <data key="d2">getProductByUuid is the operationId for retrieving a specific product by its UUID, essential for detailed product information.</data>
      <data key="d3">excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </node>
    <node id="application/json">
      <data key="d1">configuration</data>
      <data key="d2">The configuration specifies the format for sending and receiving data in JSON, often used in APIs for communication.</data>
      <data key="d3">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </node>
    <node id="Get all plans of a product">
      <data key="d1">function</data>
      <data key="d2">The function retrieves all plans linked to a specified product, allowing users to see what options are available.</data>
      <data key="d3">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </node>
    <node id="Get product pricing table">
      <data key="d1">function</data>
      <data key="d2">The function retrieves the pricing table associated with a specific product, providing users with necessary pricing details.</data>
      <data key="d3">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </node>
    <node id="400 BAD REQUEST">
      <data key="d1">example</data>
      <data key="d2">The example illustrates the response that indicates a bad request, suggesting that the request sent by the user has malformed or invalid data.</data>
      <data key="d3">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </node>
    <node id="404 NOT FOUND">
      <data key="d1">example</data>
      <data key="d2">The example illustrates the response that indicates a requested resource was not found, often returned when the specified product does not exist.</data>
      <data key="d3">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </node>
    <node id="Get Product Features">
      <data key="d1">function</data>
      <data key="d2">Get Product Features is a function designed to retrieve a list of features associated with a specific product by utilizing its unique UUID.</data>
      <data key="d3">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23</data>
    </node>
    <node id="Get Product Currencies">
      <data key="d1">function</data>
      <data key="d2">Get Product Currencies is a function that retrieves the list of currencies associated with a specific product based on its UUID.</data>
      <data key="d3">excerpt_id_90c759c4feb12e8e2b105cd945aeabd3</data>
    </node>
    <node id="currencyUuid">
      <data key="d1">variable</data>
      <data key="d2">currencyUuid is a variable representing the unique identifier of a currency, used in API responses.</data>
      <data key="d3">excerpt_id_90c759c4feb12e8e2b105cd945aeabd3</data>
    </node>
    <node id="defaultCurrency">
      <data key="d1">variable</data>
      <data key="d2">defaultCurrency is a boolean variable that indicates whether a currency is the default currency for a given product.</data>
      <data key="d3">excerpt_id_90c759c4feb12e8e2b105cd945aeabd3</data>
    </node>
    <node id="Get Product Capabilities">
      <data key="d1">function</data>
      <data key="d2">Get Product Capabilities is a function that retrieves the list of capabilities available for a specific product, identified by its UUID.</data>
      <data key="d3">excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </node>
    <node id="400 Bad Request">
      <data key="d1">response</data>
      <data key="d2">400 Bad Request is an error response indicating that the server cannot process the request due to invalid syntax.</data>
      <data key="d3">excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </node>
    <node id="404 Not Found">
      <data key="d1">response</data>
      <data key="d2">404 Not Found is an error response indicating that the requested resource could not be found on the server.</data>
      <data key="d3">excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </node>
    <node id="Get a Plan">
      <data key="d1">api</data>
      <data key="d2">Get a Plan is an API endpoint designed to retrieve information about a specific plan identified by its UUID, allowing for optional relational data expansion through query parameters.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Version Header">
      <data key="d1">variable</data>
      <data key="d2">Version Header is a parameter used in API requests to specify the version of the API to be accessed.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Plan Uuid Path Param">
      <data key="d1">variable</data>
      <data key="d2">Plan Uuid Path Param is a path parameter that represents the unique identifier for a plan, necessary for retrieving specific plan details.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Expand Plan Query Param">
      <data key="d1">variable</data>
      <data key="d2">Expand Plan Query Param is a query parameter that allows users to specify if they want to retrieve additional relational data alongside the main plan data.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Success Url Query Param">
      <data key="d1">variable</data>
      <data key="d2">Success Url Query Param is a query parameter that defines the URL to which the user is redirected on successful operation completion.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Cancel Url Query Param">
      <data key="d1">variable</data>
      <data key="d2">Cancel Url Query Param is a query parameter indicating the URL for the user to be redirected in case of cancellation.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Grantee Id Query Param">
      <data key="d1">variable</data>
      <data key="d2">Grantee Id Query Param is a query parameter to identify the specific grantee associated with the plan being retrieved.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Member Query Param">
      <data key="d1">variable</data>
      <data key="d2">Member Query Param is a parameter that identifies the member related to the plan for additional filtering.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Promo Code Query Param">
      <data key="d1">variable</data>
      <data key="d2">Promo Code Query Param allows users to include promotional codes when requesting the plan.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Allow Promo Code Query Param">
      <data key="d1">variable</data>
      <data key="d2">Allow Promo Code Query Param indicates whether promo codes are permitted in the plan request.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Customer Email Query Param">
      <data key="d1">variable</data>
      <data key="d2">Customer Email Query Param is used to specify the email of the customer when retrieving plan details.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Customer Id Query Param">
      <data key="d1">variable</data>
      <data key="d2">Customer Id Query Param is utilized to indicate which customer the plan details pertain to.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Currency Query Param">
      <data key="d1">variable</data>
      <data key="d2">Currency Query Param defines the currency that should be used in the financial aspects of the plan.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="Automatic Tax Query Param">
      <data key="d1">variable</data>
      <data key="d2">Automatic Tax Query Param is a flag indicating whether automatic tax calculations should be applied to the plan.</data>
      <data key="d3">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </node>
    <node id="getPlanFeatures">
      <data key="d1">function</data>
      <data key="d2">getPlanFeatures is a function that retrieves the list of features for a specific plan, requiring authentication and returning data in JSON format.</data>
      <data key="d3">excerpt_id_8afa492aad2baaf4c1b74f1b88500086</data>
    </node>
    <node id="getPlanCurrencies">
      <data key="d1">function</data>
      <data key="d2">getPlanCurrencies is a function that retrieves the list of currencies for a specific plan, also requiring authentication and returning data in JSON format.</data>
      <data key="d3">excerpt_id_8afa492aad2baaf4c1b74f1b88500086</data>
    </node>
    <node id="getPlanCheckoutLink">
      <data key="d1">function</data>
      <data key="d2">getPlanCheckoutLink is a function that retrieves a checkout link for a specific plan, enabling customers to purchase that plan.</data>
      <data key="d3">excerpt_id_ddc9e4fbd355f7d9a819edc36d148407</data>
    </node>
    <node id="Plan Capabilities">
      <data key="d1">function</data>
      <data key="d2">Get plan capabilities is a function that retrieves the list of capabilities associated with a specific plan.</data>
      <data key="d3">excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </node>
    <node id="Plan Capability">
      <data key="d1">example</data>
      <data key="d2">Plan Capability serves as an example of the data schema that represents the capabilities of a specific plan in the API response.</data>
      <data key="d3">excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </node>
    <node id="Licenses Endpoint">
      <data key="d1">api</data>
      <data key="d2">Licenses Endpoint is an API endpoint that allows the creation of ad hoc licenses for users, detailing operations for creating and updating licenses.</data>
      <data key="d3">excerpt_id_93a1bdd9071867235ec2537127127c00</data>
    </node>
    <node id="CreateManyLicensesRequest">
      <data key="d1">schema</data>
      <data key="d2">CreateManyLicensesRequest is a schema for creating multiple licenses in one request.</data>
      <data key="d3">excerpt_id_93a1bdd9071867235ec2537127127c00</data>
    </node>
    <node id="incrementSubscriptionSeats">
      <data key="d1">function</data>
      <data key="d2">incrementSubscriptionSeats is a function related to increasing the number of seats on a paid subscription for licenses.</data>
      <data key="d3">excerpt_id_93a1bdd9071867235ec2537127127c00</data>
    </node>
    <node id="updateLicenses">
      <data key="d1">function</data>
      <data key="d2">updateLicenses is a function that performs a batch update of licenses, requiring a request body with the update details.</data>
      <data key="d3">excerpt_id_2803692fca51400dad72f2a2a41f66b4</data>
    </node>
    <node id="getLicenses">
      <data key="d1">function</data>
      <data key="d2">getLicenses is a function that retrieves a list of all licenses stored in the system.</data>
      <data key="d3">excerpt_id_2803692fca51400dad72f2a2a41f66b4</data>
    </node>
    <node id="License Status Query Parameter">
      <data key="d1">variable</data>
      <data key="d2">License Status Query Parameter is a variable used to filter licenses based on their status when retrieving data.</data>
      <data key="d3">excerpt_id_2803692fca51400dad72f2a2a41f66b4</data>
    </node>
    <node id="getLicensesCount">
      <data key="d1">function</data>
      <data key="d2">getLicensesCount is a function that retrieves the count of all licenses, including both assigned and unassigned licenses.</data>
      <data key="d3">excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </node>
    <node id="getLicenseByUuid">
      <data key="d1">function</data>
      <data key="d2">getLicenseByUuid is a function that fetches the details of a specific license using its UUID.</data>
      <data key="d3">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4</data>
    </node>
    <node id="updateLicense">
      <data key="d1">function</data>
      <data key="d2">updateLicense is a function that facilitates updating the granteeId of a license, allowing for modifications to the license's terms.</data>
      <data key="d3">excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </node>
    <node id="cancelLicense">
      <data key="d1">function</data>
      <data key="d2">cancelLicense is a function designed to cancel an ad hoc license, changing its status to 'CANCELED' without affecting ongoing subscriptions.</data>
      <data key="d3">excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </node>
    <node id="getLicenseCheck">
      <data key="d1">function</data>
      <data key="d2">getLicenseCheck is a function that retrieves the capabilities that one or more grantees have access to through an API.</data>
      <data key="d3">excerpt_id_436e9d6c339c56d143b4d7eb7f449283</data>
    </node>
    <node id="getLicensesByPurchaser">
      <data key="d1">function</data>
      <data key="d2">getLicensesByPurchaser is a function that retrieves an array of licenses associated with a specific purchaser.</data>
      <data key="d3">excerpt_id_436e9d6c339c56d143b4d7eb7f449283</data>
    </node>
    <node id="getLicensesByGranteeId">
      <data key="d1">function</data>
      <data key="d2">getLicensesByGranteeId is a function that retrieves a list of licenses linked to a specific grantee ID.</data>
      <data key="d3">excerpt_id_8f76cec6c3c5c205e09868b54019ae7b</data>
    </node>
    <node id="cancelLicenses">
      <data key="d1">function</data>
      <data key="d2">cancelLicenses is a function in the API used to cancel multiple ad hoc licenses by accepting an array of license UUIDs.</data>
      <data key="d3">excerpt_id_a8a1a1f7699cb50324dc4207ba11c6e6</data>
    </node>
    <node id="License UUIDs">
      <data key="d1">variable</data>
      <data key="d2">License UUIDs are identifiers for the licenses that are being canceled using the cancelLicenses function.</data>
      <data key="d3">excerpt_id_a8a1a1f7699cb50324dc4207ba11c6e6</data>
    </node>
    <node id="eb6424b2-4cb3-4812-85a4-25acab877109">
      <data key="d1">variable</data>
      <data key="d2">eb6424b2-4cb3-4812-85a4-25acab877109 is a unique identifier, likely representing a specific subscription in the context of the API.</data>
      <data key="d3">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </node>
    <node id="getSubscriptions">
      <data key="d1">function</data>
      <data key="d2">'getSubscriptions' is a function used to retrieve a list of all subscriptions related to the API.</data>
      <data key="d3">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </node>
    <node id="getSubscriptionByUuid">
      <data key="d1">function</data>
      <data key="d2">'getSubscriptionByUuid' is a function that retrieves subscription data based on a unique UUID, allowing for specific subscription queries.</data>
      <data key="d3">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </node>
    <node id="subscriptions">
      <data key="d1">feature</data>
      <data key="d2">Subscriptions refer to the feature of the API that involves managing user subscriptions, including retrieval and cancellation.</data>
      <data key="d3">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </node>
    <node id="PlanUuid">
      <data key="d1">variable</data>
      <data key="d2">PlanUuid is a variable that holds the UUID of the plan to which a subscription will be moved, essential for executing the change.</data>
      <data key="d3">excerpt_id_e71e21c92a42f2bc62641e1f5a2e6ea4</data>
    </node>
    <node id="Proration">
      <data key="d1">variable</data>
      <data key="d2">Proration is a variable that defines the billing behavior when changing plans, allowing for various options in invoice generation during the transition.</data>
      <data key="d3">excerpt_id_e71e21c92a42f2bc62641e1f5a2e6ea4</data>
    </node>
    <node id="Proration Behavior">
      <data key="d1">feature</data>
      <data key="d2">Proration Behavior is a feature that dictates how invoices are handled during a subscription plan change, providing options like 'create_prorations', 'none', and 'always_invoice'.</data>
      <data key="d3">excerpt_id_e71e21c92a42f2bc62641e1f5a2e6ea4</data>
    </node>
    <node id="Request Body">
      <data key="d1">configuration</data>
      <data key="d2">Request Body is the configuration schema required for changing the subscription, detailing the necessary fields and their descriptions, including planUuid and proration.</data>
      <data key="d3">excerpt_id_e71e21c92a42f2bc62641e1f5a2e6ea4</data>
    </node>
    <node id="Responses">
      <data key="d1">configuration</data>
      <data key="d2">Responses refer to the expected outcomes of the API request, indicating successful request acceptance with a status of 202.</data>
      <data key="d3">excerpt_id_e71e21c92a42f2bc62641e1f5a2e6ea4</data>
    </node>
    <node id="Get Subscription Invoices">
      <data key="d1">api</data>
      <data key="d2">Get Subscription Invoices is an API endpoint that retrieves a list of invoices associated with a given subscription.</data>
      <data key="d3">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </node>
    <node id="getSubscriptionInvoices">
      <data key="d1">function</data>
      <data key="d2">getSubscriptionInvoices is the operation ID for the API that obtains subscription invoices, indicating its purpose.</data>
      <data key="d3">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </node>
    <node id="Get Plans That A Subscribed User Can Switch To">
      <data key="d1">api</data>
      <data key="d2">Get Plans That A Subscribed User Can Switch To is an API endpoint that provides a list of available plans for subscription switching.</data>
      <data key="d3">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </node>
    <node id="getSubscriptionUpdatablePlans">
      <data key="d1">function</data>
      <data key="d2">getSubscriptionUpdatablePlans is the operation ID for the API that retrieves the plans a user can switch to, showing available options.</data>
      <data key="d3">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </node>
    <node id="Subscription Update Payment Link">
      <data key="d1">api</data>
      <data key="d2">The Subscription Update Payment Link API retrieves a link for customers to update their payment details for a specific subscription.</data>
      <data key="d3">excerpt_id_dea2ce01563f98c7a4320c03581eb4ed</data>
    </node>
    <node id="Get Subscription Update Payment Link">
      <data key="d1">function</data>
      <data key="d2">Get Subscription Update Payment Link is a function that fetches the payment update link for a given subscription, enabling users to manage their payment information.</data>
      <data key="d3">excerpt_id_dea2ce01563f98c7a4320c03581eb4ed</data>
    </node>
    <node id="Stripe Update Payment Link">
      <data key="d1">feature</data>
      <data key="d2">The Stripe Update Payment Link feature provides a URL that directs users to a management portal where they can update their payment details.</data>
      <data key="d3">excerpt_id_dea2ce01563f98c7a4320c03581eb4ed</data>
    </node>
    <node id="Bad Request">
      <data key="d1">api:|:response</data>
      <data key="d2">Bad Request indicates an invalid request made to the API, resulting in an error response.:|:Bad Request is an API response status indicating that the request could not be understood by the server due to malformed syntax or invalid request parameters.:|:Bad Request is a response status indicating that the request was invalid and the server could not process it.</data>
      <data key="d3">excerpt_id_dea2ce01563f98c7a4320c03581eb4ed:|:excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a:|:excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </node>
    <node id="Not Found">
      <data key="d1">api:|:response</data>
      <data key="d2">Not Found is an API response status that informs the client that the requested resource could not be found on the server.:|:Not Found is a response status indicating that the requested resource could not be found on the server.:|:Not Found signifies that the requested resource could not be located on the server.</data>
      <data key="d3">excerpt_id_dea2ce01563f98c7a4320c03581eb4ed:|:excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a:|:excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </node>
    <node id="Get a Customer Portal Link">
      <data key="d1">function</data>
      <data key="d2">Get a Customer Portal Link is a function that retrieves the customer portal link for a subscription, allowing customers to manage their subscriptions through a dedicated portal.</data>
      <data key="d3">excerpt_id_a9f412b9d897ad9489864c063036ab9a</data>
    </node>
    <node id="Subscription Management Portal">
      <data key="d1">interface</data>
      <data key="d2">The Subscription Management Portal is an online interface that enables customers to manage their subscriptions, including payment options and other related functionalities.</data>
      <data key="d3">excerpt_id_a9f412b9d897ad9489864c063036ab9a</data>
    </node>
    <node id="Stripe Customer Portal Link">
      <data key="d1">api</data>
      <data key="d2">The Stripe Customer Portal Link is the API endpoint that provides the URL for accessing the customer management portal, serving as a gateway for subscription management.</data>
      <data key="d3">excerpt_id_a9f412b9d897ad9489864c063036ab9a</data>
    </node>
    <node id="Get Subscription Cancel Link">
      <data key="d1">api</data>
      <data key="d2">Get Subscription Cancel Link is an API endpoint that retrieves a cancel subscription link for a specific subscription, allowing customers to manage their subscriptions.</data>
      <data key="d3">excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </node>
    <node id="Cancel Subscription Link">
      <data key="d1">feature</data>
      <data key="d2">Cancel Subscription Link is a feature that directs customers to a subscription management portal where they can cancel their subscriptions.</data>
      <data key="d3">excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </node>
    <node id="Get Payment Method">
      <data key="d1">function</data>
      <data key="d2">Get Payment Method is a function that retrieves the payment method used for a subscription, providing relevant details in response to a successful request.</data>
      <data key="d3">excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a</data>
    </node>
    <node id="Reactivate Subscription">
      <data key="d1">function</data>
      <data key="d2">Reactivate Subscription is a function that allows reactivation of a subscription's scheduled cancellation, specifying conditions that must be met for successful reactivation.</data>
      <data key="d3">excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a</data>
    </node>
    <node id="IncrementSubscriptionSeats">
      <data key="d1">function</data>
      <data key="d2">IncrementSubscriptionSeats function is invoked to increment the quantity of seats on a subscription, which creates unassigned licenses.</data>
      <data key="d3">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </node>
    <node id="DecrementSubscriptionSeats">
      <data key="d1">function</data>
      <data key="d2">DecrementSubscriptionSeats function is utilized to decrease the quantity of seats on a subscription, removing only unassigned licenses.</data>
      <data key="d3">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </node>
    <node id="decrementSubscriptionSeats">
      <data key="d1">function</data>
      <data key="d2">decrementSubscriptionSeats is an operation that allows for the decrementing of the quantity of seats on a subscription.</data>
      <data key="d3">excerpt_id_0b9474a6f5a5fdb347caada72f379c22</data>
    </node>
    <node id="License Usage Record">
      <data key="d1">function</data>
      <data key="d2">License Usage Record refers to the functionality that retrieves and manages records of usage associated with metered licenses for grantees.</data>
      <data key="d3">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="Get License Usage">
      <data key="d1">function</data>
      <data key="d2">Get License Usage is a function that retrieves all usage records for a specific grantee's metered licenses, offering a summary and operational details.</data>
      <data key="d3">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="Update License Usage">
      <data key="d1">function</data>
      <data key="d2">Update License Usage is a function used to modify the usage count of a license by incrementing its value, affecting the associated records and reports.</data>
      <data key="d3">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="UsageGranteeIdRequiredQueryParam">
      <data key="d1">parameter</data>
      <data key="d2">UsageGranteeIdRequiredQueryParam is a parameter that identifies the grantee whose usage records are being requested.</data>
      <data key="d3">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </node>
    <node id="countOptions">
      <data key="d1">configuration</data>
      <data key="d2">countOptions is a configuration object that defines how the usage of a license can be incremented, including the required property increment.</data>
      <data key="d3">excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </node>
    <node id="responses">
      <data key="d1">feature</data>
      <data key="d2">responses define the possible outcomes of a request, including HTTP status codes and their corresponding descriptions.</data>
      <data key="d3">excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </node>
    <node id="getCurrentLicenseUsage">
      <data key="d1">function</data>
      <data key="d2">getCurrentLicenseUsage is a function that retrieves the current usage record for a metered license associated with a specific grantee.</data>
      <data key="d3">excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </node>
    <node id="CreateSession">
      <data key="d1">function</data>
      <data key="d2">CreateSession is a function that creates a new session to use with Salable web components, providing a session token for further interaction.</data>
      <data key="d3">excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </node>
    <node id="GetEventByUuid">
      <data key="d1">function</data>
      <data key="d2">GetEventByUuid is a function that retrieves an event by its UUID, providing information about asynchronous tasks.</data>
      <data key="d3">excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </node>
    <node id="getPricingTableByUuid">
      <data key="d1">function</data>
      <data key="d2">getPricingTableByUuid is a function to retrieve a pricing table based on its unique identifier, enabling the display of pricing data.</data>
      <data key="d3">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </node>
    <node id="PricingTableUuidPathParam">
      <data key="d1">variable</data>
      <data key="d2">PricingTableUuidPathParam is a variable that specifies the path parameter required to identify the pricing table by its UUID in API requests.</data>
      <data key="d3">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </node>
    <node id="GranteeIdPricingTableQueryParamRequired">
      <data key="d1">variable</data>
      <data key="d2">GranteeIdPricingTableQueryParamRequired is a query parameter variable that must be provided when retrieving pricing tables.</data>
      <data key="d3">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </node>
    <node id="checkoutCreateSubscription">
      <data key="d1">function</data>
      <data key="d2">checkoutCreateSubscription is a function that creates a Stripe subscription with an initial status of 'incomplete', requiring client secret for further processing in Stripe Elements.</data>
      <data key="d3">excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </node>
    <node id="Stripe Elements">
      <data key="d1">interface</data>
      <data key="d2">Stripe Elements is an interface used for collecting payment information securely and efficiently within web applications during the checkout process.</data>
      <data key="d3">excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </node>
    <node id="checkoutCreateIntent">
      <data key="d1">function</data>
      <data key="d2">checkoutCreateIntent is a function that creates a Stripe Setup Intent and returns the clientSecret needed for Stripe Elements and the Salable Checkout component.</data>
      <data key="d3">excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab</data>
    </node>
    <node id="clientSecret">
      <data key="d1">variable</data>
      <data key="d2">clientSecret is a variable returned by the checkoutCreateIntent function that is required for integration with Stripe Elements and Salable Checkout.</data>
      <data key="d3">excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab</data>
    </node>
    <edge source="Checkout" target="Salable API">
      <data key="d4">Checkout is implemented using the Salable API to facilitate session management and transactions.</data>
      <data key="d5">feature implementation, integration</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </edge>
    <edge source="Checkout" target="Web Components">
      <data key="d4">Checkout is another specific Web Component designed for purchasing subscriptions, demonstrating the functionality of the library.</data>
      <data key="d5">component usage, functionality</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </edge>
    <edge source="Checkout" target="Invoices Documentation">
      <data key="d4">Invoices Documentation gives examples of how to utilize components like Checkout alongside Invoices.</data>
      <data key="d5">guide, feature correlation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </edge>
    <edge source="Checkout" target="/products">
      <data key="d4">Checkout operations may utilize product information retrieved from the /products endpoint during the purchase process.</data>
      <data key="d5">integration, commerce</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </edge>
    <edge source="Checkout" target="checkoutCreateSubscription">
      <data key="d4">The checkoutCreateSubscription function is a part of the broader Checkout feature, which addresses subscription management and payment processing.</data>
      <data key="d5">function-feature relationship</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </edge>
    <edge source="Checkout" target="Stripe Elements">
      <data key="d4">The Checkout feature integrates with Stripe Elements to streamline payment collection during the subscription creation process.</data>
      <data key="d5">integration, payment processing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </edge>
    <edge source="Checkout" target="checkoutCreateIntent">
      <data key="d4">The checkoutCreateIntent function is part of the Checkout feature, facilitating the creation of payment intents within that framework.</data>
      <data key="d5">feature integration, API functionality</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab</data>
    </edge>
    <edge source="Salable API" target="Session Token">
      <data key="d4">Session Token is used in requests to the Salable API for authentication and management of user sessions.:|:The Session Token is generated by making a request to the Salable API, establishing a session for the user.:|:The Session Token is generated through interactions with the Salable API, enabling secure access to functionalities.</data>
      <data key="d5">authentication, session management:|:authentication, security:|:session management, api interaction</data>
      <data key="d6">43.0</data>
      <data key="d7">excerpt_id_1b612f26a43928677dcf8db549d3101b:|:excerpt_id_fbb88f35eb8a656df79436055d95db83:|:excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </edge>
    <edge source="Salable API" target="YOUR_SALABLE_API_TOKEN">
      <data key="d4">YOUR_SALABLE_API_TOKEN is required for making requests to the Salable API, indicating its role in the authentication process.</data>
      <data key="d5">authentication requirement, API key</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </edge>
    <edge source="Salable API" target="Plan UUID">
      <data key="d4">Plan UUID is passed to the Salable API for referencing subscription plans within its operations.</data>
      <data key="d5">subscription management, API parameter</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </edge>
    <edge source="Salable API" target="Cancellation Button">
      <data key="d4">The Cancellation Button utilizes the Salable API to manage sessions, indicating a direct dependency on the API for its functionality.</data>
      <data key="d5">integration, functionality</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_94fb228ccda17239a53922fdeba71ddc</data>
    </edge>
    <edge source="Salable API" target="request template">
      <data key="d4">The request template provides a format to interact with the Salable API, facilitating session creation for features like the Cancellation Button.</data>
      <data key="d5">interaction, session management</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_94fb228ccda17239a53922fdeba71ddc</data>
    </edge>
    <edge source="Salable API" target="Version">
      <data key="d4">The Salable API now requires Version upon instantiation, highlighting its importance in the operation of the API.</data>
      <data key="d5">dependency, instantiation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </edge>
    <edge source="Salable API" target="Creating a Session Token">
      <data key="d4">The Salable API is the service through which the process of Creating a Session Token is carried out, illustrating the dependency of the function on the API.</data>
      <data key="d5">api interaction, functionality</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_761b7e7d2e80ea5581133a171250a211</data>
    </edge>
    <edge source="Salable API" target="POST /sessions">
      <data key="d4">The POST /sessions API endpoint is part of the Salable API used for session management in relation to using Web Components.</data>
      <data key="d5">API functionality, session management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </edge>
    <edge source="Salable API" target="V2 endpoints">
      <data key="d4">V2 endpoints are part of the Salable API, reflecting the latest version of the API with improved features and configurations.</data>
      <data key="d5">API versioning, improvements</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_c08dee207a93dbeac363d048eb1567e4</data>
    </edge>
    <edge source="Salable API" target="Pricing Table">
      <data key="d4">The Pricing Table feature can be integrated and managed through the Salable API, allowing for dynamic pricing configurations.</data>
      <data key="d5">feature integration, api management</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_fbb88f35eb8a656df79436055d95db83</data>
    </edge>
    <edge source="Salable API" target="Salable Web Components library">
      <data key="d4">The Salable Web Components library provides components that can be interacted with the Salable API for enhanced functionality.</data>
      <data key="d5">integration, features</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </edge>
    <edge source="Salable API" target="Salable React Web Components library">
      <data key="d4">The Salable React Web Components library allows integration of the Salable API features in React applications.</data>
      <data key="d5">integration, React-compatible</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </edge>
    <edge source="Salable API" target="component's documentation">
      <data key="d4">The component's documentation provides essential information about using features of the Salable API effectively.</data>
      <data key="d5">guidance, usage instructions</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </edge>
    <edge source="Salable API" target="Fetch API">
      <data key="d4">Fetch API is used to make requests to the Salable API to retrieve data about licenses and subscriptions.</data>
      <data key="d5">data retrieval, web service</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ee6311eda1a74d2cb86e7774e2dda643</data>
    </edge>
    <edge source="Salable API" target="licenseCount">
      <data key="d4">licenseCount is obtained by making a call to the Salable API to get the count of licenses for a specific subscription.</data>
      <data key="d5">data acquisition, API utilization</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ee6311eda1a74d2cb86e7774e2dda643</data>
    </edge>
    <edge source="Salable API" target="v2">
      <data key="d4">Salable API is currently using the version v2 to offer its services and features, indicating ongoing development and improvements.</data>
      <data key="d5">versioning, updates</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1447c9ad088ee587d295240cee723646</data>
    </edge>
    <edge source="Salable API" target="Change Plan Endpoint">
      <data key="d4">The Change Plan Endpoint is a part of the Salable API, facilitating subscription management operations.</data>
      <data key="d5">API functionality, interaction point</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </edge>
    <edge source="Session Token" target="Cancellation Button">
      <data key="d4">The Cancellation Button relies on a Session Token to perform cancellation actions, highlighting its importance in the feature's operation.</data>
      <data key="d5">dependency, functionality</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_94fb228ccda17239a53922fdeba71ddc</data>
    </edge>
    <edge source="Session Token" target="Invoices Web Component">
      <data key="d4">The Invoices Web Component requires a Session Token to function properly, establishing a direct dependency between the variable and the feature.</data>
      <data key="d5">authentication, dependency</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_761b7e7d2e80ea5581133a171250a211</data>
    </edge>
    <edge source="Session Token" target="JavaScript">
      <data key="d4">The JavaScript example provides a method for obtaining a Session Token using the Salable API.</data>
      <data key="d5">example usage, programming</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_fbb88f35eb8a656df79436055d95db83</data>
    </edge>
    <edge source="Session Token" target="cURL">
      <data key="d4">The cURL example shows how to create a Session Token using the Salable API, providing an alternative method for developers.</data>
      <data key="d5">example usage, programming</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_fbb88f35eb8a656df79436055d95db83</data>
    </edge>
    <edge source="Session Token" target="Scope">
      <data key="d4">The Scope determines the type of Session Token that needs to be created to access specific features of the Salable API.</data>
      <data key="d5">configuration, access rights</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </edge>
    <edge source="Session Token" target="Metadata">
      <data key="d4">Metadata is necessary for creating a Session Token based on the specific requirements set by each scope.</data>
      <data key="d5">configuration, token generation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </edge>
    <edge source="Session Token" target="web-components:invoices">
      <data key="d4">The web-components:invoices scope is related to generating a Session Token specific to invoice functionalities.</data>
      <data key="d5">feature, specific access</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </edge>
    <edge source="Salable Checkout Web Component Example" target="salable-checkout">
      <data key="d4">The example HTML demonstrates how to utilize the salable-checkout interface to create a functional checkout process.</data>
      <data key="d5">usage example, practical application</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </edge>
    <edge source="Define Custom Elements" target="salable-checkout">
      <data key="d4">Define Custom Elements is necessary for initializing the salable-checkout interface for use in web applications.</data>
      <data key="d5">initialization, component setup</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_9a944ddc3dfa0bec820becd08962062d</data>
    </edge>
    <edge source="salable-checkout" target="success-url">
      <data key="d4">salable-checkout uses the success-url variable to determine where to redirect after a successful transaction.</data>
      <data key="d5">checkout process, redirection</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5</data>
    </edge>
    <edge source="salable-checkout" target="currency">
      <data key="d4">salable-checkout accepts the currency variable to specify the currency type for the transaction.</data>
      <data key="d5">currency specification, transaction</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5</data>
    </edge>
    <edge source="salable-checkout" target="LE_GRANTEE_ID">
      <data key="d4">salable-checkout utilizes the LE_GRANTEE_ID variable to identify the grantee involved in the checkout process.</data>
      <data key="d5">identity, checkout process</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5</data>
    </edge>
    <edge source="salable-checkout" target="defineCustomElements">
      <data key="d4">defineCustomElements must be called to initialize the salable-checkout component so it can function properly within the Svelte application.</data>
      <data key="d5">initialization, component usage</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5</data>
    </edge>
    <edge source="Salable" target="Granular Approach">
      <data key="d4">Salable recommends a Granular Approach for user authorisation, highlighting its importance in the platform's operation.</data>
      <data key="d5">recommendation, authorisation method</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_99827a02251fd259a13d407966db3096</data>
    </edge>
    <edge source="Salable" target="Capabilities">
      <data key="d4">Capabilities are part of the Salable platform, allowing user-specific access to various functionalities based on their plans and features.</data>
      <data key="d5">functionality management, user access</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_99827a02251fd259a13d407966db3096</data>
    </edge>
    <edge source="Salable" target="Node SDK">
      <data key="d4">The Node SDK acts as an interface to interact with the Salable API, allowing developers to use its functionalities in their applications.</data>
      <data key="d5">integration, development</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00</data>
    </edge>
    <edge source="Salable" target="API_KEY">
      <data key="d4">The API_KEY is essential for authenticating requests to the Salable API, establishing a connection for its use.:|:The Salable interface requires the API_KEY for authentication to access the API services.:|:The API_KEY variable is necessary for authenticating requests made to the Salable API.".:|:API_KEY is necessary for authenticating and interacting with the Salable API.:|:The API_KEY is used to authenticate requests made to the Salable API, allowing access to its functions.:|:API_KEY is necessary for authenticating with the Salable API, allowing access to methods like cancelMany.</data>
      <data key="d5">authentication, service access:|:authentication, security:|:authentication, access:|:authentication, access control:|:authentication, access requirement</data>
      <data key="d6">54.0</data>
      <data key="d7">excerpt_id_a78cd4046bc4c2cd90d128228e28893d:|:excerpt_id_38026b862e04409b6fbda7aa7728c287:|:excerpt_id_a4b8e11006d615b209673feede32f6c5:|:excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00:|:excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d:|:excerpt_id_75226dd1c0681dee658c82abefbedb30</data>
    </edge>
    <edge source="Salable" target="Salable Account">
      <data key="d4">A Salable Account is necessary to access the Salable API services, thus playing a critical role in its operation.</data>
      <data key="d5">account management, service access</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00</data>
    </edge>
    <edge source="Salable" target="Stripe">
      <data key="d4">Stripe serves as a payment provider that can be integrated with Salable to enhance its payment processing capabilities.:|:Salable integrates with Stripe to facilitate payment processing, allowing users to accept payments through the platform.</data>
      <data key="d5">integration, payment processing</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00:|:excerpt_id_986393e22f5effe04fced6469538c6a8</data>
    </edge>
    <edge source="Salable" target="SDK Call">
      <data key="d4">An SDK Call is made to the Salable API to perform functions like building products and plans for user transactions.</data>
      <data key="d5">functionality, service interaction</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00</data>
    </edge>
    <edge source="Salable" target="Grantee System">
      <data key="d4">The Grantee System is developed and managed by Salable, linking the feature directly to the organization providing it.</data>
      <data key="d5">feature development, ownership</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_431115802905d2582e7883b3b0c33bf9</data>
    </edge>
    <edge source="Salable" target="Export CSV">
      <data key="d4">Salable provides the framework for the Export CSV feature to be utilized across different plans with specific values.</data>
      <data key="d5">feature management, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </edge>
    <edge source="Salable" target="Bespoke Plans">
      <data key="d4">Salable supports the creation of Bespoke Plans, allowing tailored features and capabilities for individual customers.</data>
      <data key="d5">customization, plan flexibility</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </edge>
    <edge source="Salable" target="checkoutLink">
      <data key="d4">The Salable API is responsible for generating the checkoutLink that is used during the e-commerce transaction process.</data>
      <data key="d5">api functionality, transaction process</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b0d99f3af716852d9f2a0d8e9d551113</data>
    </edge>
    <edge source="Salable" target="your-salable-api-key">
      <data key="d4">The unique API key is needed to interact with the Salable API for licensing and capability checks.:|:The variable your-salable-api-key is essential for authenticating and initiating requests to the Salable API.:|:The Salable API requires a valid your-salable-api-key for authenticating the checkout link generation process.:|:The your-salable-api-key is needed to authenticate access to the Salable API for performing actions like updating licenses.:|:The your-salable-api-key variable is required for authenticating API requests to the Salable API.:|:The API key is necessary for authenticating requests to the Salable API, emphasizing the need for user-specific credentials.</data>
      <data key="d5">authentication, access:|:authentication:|:authentication, API access:|:authentication, api access</data>
      <data key="d6">56.0</data>
      <data key="d7">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_b0d99f3af716852d9f2a0d8e9d551113:|:excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd:|:excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_f45958815097879415986e68ae21cbba</data>
    </edge>
    <edge source="Salable" target="your-plan-uuid">
      <data key="d4">The Salable API consumes your-plan-uuid to specify which plan's checkout link is being generated, linking them in the transaction process.</data>
      <data key="d5">plan specification, transaction connection</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b0d99f3af716852d9f2a0d8e9d551113</data>
    </edge>
    <edge source="Salable" target="Pricing Table">
      <data key="d4">Salable provides the functionality to create and manage Pricing Tables for product comparison.</data>
      <data key="d5">platform functionality, feature provision</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e6d45aa0665fc0645841e246e19a8aee</data>
    </edge>
    <edge source="Salable" target="Code">
      <data key="d4">Salable generates the necessary code for the different formats of the Pricing Table, enabling users to implement it easily.</data>
      <data key="d5">code generation, implementation support</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e6d45aa0665fc0645841e246e19a8aee</data>
    </edge>
    <edge source="Salable" target="Licenses">
      <data key="d4">Salable provides the functionality to view and manage licenses, which is a core feature of the software.</data>
      <data key="d5">license management, software functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_15ef1834aa3a1da2af8e9952509255a2</data>
    </edge>
    <edge source="Salable" target="API Overview">
      <data key="d4">The Salable API Overview provides essential information about Salable, detailing its capabilities and integration benefits.</data>
      <data key="d5">integration, flexibility</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c</data>
    </edge>
    <edge source="Salable" target="API Documentation">
      <data key="d4">Salable requires users to refer to the API Documentation for comprehensive guidance on API usage, authentication, and setup.</data>
      <data key="d5">guidance, setup</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c</data>
    </edge>
    <edge source="Salable" target="API Key">
      <data key="d4">Salable requires an API Key for access, linking its functionality directly to the authentication method provided by the API Key.:|:The Salable API requires an API Key for authentication to access its functions, including getFeatures.:|:Salable requires an API Key for secure functioning and access to its development tools.:|:API Key is necessary to authenticate requests made to the Salable API, including accessing the Get One Plan function.:|:The API Key is necessary for authenticating requests made to the Salable API, establishing secure communication.</data>
      <data key="d5">authentication, API requirement:|:authentication, security:|:authentication, access control:|:authentication, secure access</data>
      <data key="d6">46.0</data>
      <data key="d7">excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0:|:excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b:|:excerpt_id_9e7d62a87ad119e8af876e0901542e69:|:excerpt_id_5f94c3a04c280fb20bcd425bb5880a08:|:excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </edge>
    <edge source="Salable" target="Payment Integration">
      <data key="d4">Salable's configuration includes Payment Integration as a necessary step to handle transactions.</data>
      <data key="d5">transaction processing, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </edge>
    <edge source="Salable" target="Product">
      <data key="d4">Salable facilitates the creation of a Product which is essential for user offerings.</data>
      <data key="d5">product management, user offering</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </edge>
    <edge source="Salable" target="Get Started Free">
      <data key="d4">Salable features the Get Started Free option as a primary means for users to access account creation.</data>
      <data key="d5">user access, account creation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a3e10272ea78f4d7722234027bb8e4bc</data>
    </edge>
    <edge source="Salable" target="GitHub">
      <data key="d4">Users can sign up for Salable accounts using GitHub as an authentication interface to simplify the registration process.</data>
      <data key="d5">user authentication, sign-up process</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a3e10272ea78f4d7722234027bb8e4bc</data>
    </edge>
    <edge source="Salable" target="Google">
      <data key="d4">Users can also use Google to create their Salable accounts, further easing the onboarding experience.</data>
      <data key="d5">user authentication, sign-up process</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a3e10272ea78f4d7722234027bb8e4bc</data>
    </edge>
    <edge source="Salable" target="Verification Code">
      <data key="d4">The Verification Code is essential for users creating an account on Salable to confirm their email address and secure their access.</data>
      <data key="d5">account security, email verification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a3e10272ea78f4d7722234027bb8e4bc</data>
    </edge>
    <edge source="Salable" target="Payment Integrations">
      <data key="d4">Salable enables the user to configure Payment Integrations for managing payment solutions.</data>
      <data key="d5">integration, configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb</data>
    </edge>
    <edge source="Salable" target="Test Mode">
      <data key="d4">Test Mode is a configuration offered by Salable that enables users to create products without affecting the Live Mode environment.</data>
      <data key="d5">testing, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_03a1e0b7542d58580d2e6e791794e576</data>
    </edge>
    <edge source="Salable" target="Live Mode">
      <data key="d4">Live Mode signifies the operational aspect of Salable where products operate in real transactions, separate from Test Mode.</data>
      <data key="d5">production, operational environment</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_03a1e0b7542d58580d2e6e791794e576</data>
    </edge>
    <edge source="Salable" target="Get Capabilities">
      <data key="d4">Salable API includes the Get Capabilities function to leverage its features for retrieving information on plans.:|:The Salable API allows access to the Get Capabilities function to retrieve product capabilities.</data>
      <data key="d5">API functionality, capability retrieval:|:API access, function usage</data>
      <data key="d6">17.0</data>
      <data key="d7">excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3:|:excerpt_id_af600649bc560ccce1729a149fdba460</data>
    </edge>
    <edge source="Salable" target="Get All Products">
      <data key="d4">Get All Products function utilizes the Salable API to retrieve a list of products.</data>
      <data key="d5">API usage, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d</data>
    </edge>
    <edge source="Salable" target="Code Sample">
      <data key="d4">The code sample illustrates how to instantiate and use the Salable API to retrieve product plans.:|:The Code Sample provides a demonstration of how to interact with the Salable API, showing practical application of its functions.:|:The Code Sample demonstrates how to interact with the Salable API to retrieve pricing information.:|:The Code Sample illustrates the usage of the Salable API to perform a function related to subscription management.:|:Code Sample demonstrates the use of the Salable API to perform a specific function related to subscriptions, highlighting practical usage.:|:Code Sample utilizes the Salable API to show practical implementation of updating subscriptions features.:|:The Code Sample provides a practical example of how to implement the Salable API in TypeScript.</data>
      <data key="d5">implementation, usage:|:usage example, API interaction:|:implementation, usage example:|:usage example, API utilization:|:usage example, functionality:|:practical implementation, code demonstration</data>
      <data key="d6">59.0</data>
      <data key="d7">excerpt_id_fabc937abc8c4367253839f749f33317:|:excerpt_id_413bf83a1f6433b1357024badf84fc52:|:excerpt_id_d979fc2428d484e09ae3b62b942d5968:|:excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d:|:excerpt_id_9e7d62a87ad119e8af876e0901542e69:|:excerpt_id_d9c1267809cd58cbd21415af67a458ab:|:excerpt_id_4084123f56be759c3a4de2c2abd2e01d</data>
    </edge>
    <edge source="Salable" target="Get Currencies for a Product">
      <data key="d4">Get Currencies for a Product is a function that operates within the Salable API, utilizing its capabilities to retrieve currency data.</data>
      <data key="d5">functionality, API usage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_413bf83a1f6433b1357024badf84fc52</data>
    </edge>
    <edge source="Salable" target="Get One">
      <data key="d4">Get One is a function that utilizes the Salable API to retrieve product details, thereby showcasing API functionality.</data>
      <data key="d5">API functionality, data retrieval</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476</data>
    </edge>
    <edge source="Salable" target="Salable(node-sdk)">
      <data key="d4">The Salable API requires the Salable(node-sdk) interface for proper implementation and usage of its functionality.</data>
      <data key="d5">API implementation, interface dependency</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_4084123f56be759c3a4de2c2abd2e01d</data>
    </edge>
    <edge source="Salable" target="Get Features">
      <data key="d4">Get Features is a function provided by the Salable API for retrieving product features.</data>
      <data key="d5">API functionality, data retrieval</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_43aad08feabcefa292e03d2681262e0b</data>
    </edge>
    <edge source="Salable" target="Product Feature Object">
      <data key="d4">The Salable API returns a Product Feature Object as part of the response when using the Get Features function.</data>
      <data key="d5">API response, data structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_43aad08feabcefa292e03d2681262e0b</data>
    </edge>
    <edge source="Salable" target="licenses.getForPurchaser">
      <data key="d4">licenses.getForPurchaser is a function that exists within the Salable API, demonstrating a direct functional relationship.</data>
      <data key="d5">functionality, API relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </edge>
    <edge source="Salable" target="Get All Licenses">
      <data key="d4">Get All Licenses is a function that utilizes the Salable API to return license information, indicating a direct operational relationship.</data>
      <data key="d5">api usage, license management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </edge>
    <edge source="Salable" target="{{API_KEY}}">
      <data key="d4">{{API_KEY}} is required to authenticate requests to the Salable API, establishing a dependency relationship.</data>
      <data key="d5">authentication, dependency</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </edge>
    <edge source="Salable" target="Create Many Licenses">
      <data key="d4">Create Many Licenses is a function that is part of the Salable API, showcasing its capabilities for license generation.</data>
      <data key="d5">functionality, API usage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </edge>
    <edge source="Salable" target="Get One License">
      <data key="d4">Get One License is a function that utilizes the Salable API to retrieve license information based on the UUID.</data>
      <data key="d5">functionality, usage</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_74b2b33402d8e1fd884f911b29d71f78</data>
    </edge>
    <edge source="Salable" target="Get Licenses for a Grantee ID">
      <data key="d4">Get Licenses for a Grantee ID function utilizes the Salable API to retrieve licenses for a specified grantee ID.</data>
      <data key="d5">API interaction, function use</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_3e7d435b3bee1520f4473a125ea800e1</data>
    </edge>
    <edge source="Salable" target="Check License">
      <data key="d4">Salable is an API that provides the Check License function to interact with the licensing system.</data>
      <data key="d5">API functionality, licensing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </edge>
    <edge source="Salable" target="Update Many Licenses">
      <data key="d4">"The Salable API facilitates the Update Many Licenses function, allowing bulk updates of licenses."&lt;</data>
      <data key="d5">API interaction, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5</data>
    </edge>
    <edge source="Salable" target="Cancel License">
      <data key="d4">The Cancel License function is a method included in the Salable API, showcasing its capabilities.".</data>
      <data key="d5">API functionality, method implementation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </edge>
    <edge source="Salable" target="Create License">
      <data key="d4">Create License is a function that operates within the Salable API to manage licenses.</data>
      <data key="d5">functionality, integration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </edge>
    <edge source="Salable" target="cancelMany">
      <data key="d4">Salable API provides the cancelMany function to allow users to cancel multiple licenses efficiently.</data>
      <data key="d5">functionality, API methods</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a78cd4046bc4c2cd90d128228e28893d</data>
    </edge>
    <edge source="Salable" target="Get Licenses Count">
      <data key="d4">Get Licenses Count is a function that is part of the Salable API, enabling users to access license count data.</data>
      <data key="d5">functionality, API usage</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b48f747b61cda7dfebb331b0fdd6525d</data>
    </edge>
    <edge source="Salable" target="Get One Plan">
      <data key="d4">Get One Plan is a function that utilizes the Salable API to retrieve plan details.</data>
      <data key="d5">functionality, API interaction</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b</data>
    </edge>
    <edge source="Salable" target="Get Checkout Link">
      <data key="d4">Get Checkout Link utilizes the Salable interface to create the checkout link using the API, linking the endpoint to the interface.".</data>
      <data key="d5">API usage, integration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ec8853c4684794f440831d669649c3b8</data>
    </edge>
    <edge source="Salable" target="getFeatures">
      <data key="d4">Salable API provides the getFeatures function to interact with plan features, showing a direct functional relationship.</data>
      <data key="d5">API functionality, feature retrieval</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0</data>
    </edge>
    <edge source="Salable" target="Get All Usage Records for a Grantee">
      <data key="d4">Get All Usage Records for a Grantee function uses the Salable API to obtain usage records for a specific grantee.</data>
      <data key="d5">API usage, function execution</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e8114e81957601460a88df02adf09794</data>
    </edge>
    <edge source="Salable" target="UpdateLicenseUsage">
      <data key="d4">The Salable API provides the UpdateLicenseUsage function to handle incrementing license usage counts for grantees.</data>
      <data key="d5">functionality, license management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </edge>
    <edge source="Salable" target="Get Current Usage Record for Grantee on Plan">
      <data key="d4">The function 'Get Current Usage Record for Grantee on Plan' utilizes the Salable API to fetch and return usage records.</data>
      <data key="d5">API interaction, function utilization</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </edge>
    <edge source="Salable" target="Usage Record Object">
      <data key="d4">The Salable API documentation provides details on the Usage Record Object structure used in API responses.</data>
      <data key="d5">documentation reference, data structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </edge>
    <edge source="Salable" target="import statement">
      <data key="d4">The import statement is necessary to access the Salable API functionalities in the code sample.</data>
      <data key="d5">code dependency, API access</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </edge>
    <edge source="Salable" target="Get a Subscription Update Payment Link">
      <data key="d4">The function Get a Subscription Update Payment Link is part of the Salable API, utilizing it to perform its operation.</data>
      <data key="d5">function API integration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_310437ff88c214d922e257631db6a72d</data>
    </edge>
    <edge source="Salable" target="addSeats">
      <data key="d4">"addSeats is a function that operates within the Salable API to modify subscription details."}</data>
      <data key="d5">function-call, integration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_fde1d0189eaa75074956787efcc59cec</data>
    </edge>
    <edge source="Salable" target="getInvoices">
      <data key="d4">The getInvoices function is provided by the Salable API to fetch subscription invoices.</data>
      <data key="d5">API functionality, invoice retrieval</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_0605f5987dc662b127cbcde1ca896ece</data>
    </edge>
    <edge source="Salable" target="Get a Subscription Payment Method">
      <data key="d4">The Get a Subscription Payment Method function utilizes the Salable API to retrieve subscription payment methods.</data>
      <data key="d5">integration, functionality</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_a4b8e11006d615b209673feede32f6c5</data>
    </edge>
    <edge source="Salable" target="Get Cancel Subscription Link">
      <data key="d4">The Get Cancel Subscription Link API utilizes the Salable interface to handle subscription cancellation requests.</data>
      <data key="d5">API usage, interface integration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_75226dd1c0681dee658c82abefbedb30</data>
    </edge>
    <edge source="Salable" target="Get One Subscription">
      <data key="d4">Get One Subscription is a function provided by the Salable API that facilitates the retrieval of subscription details.</data>
      <data key="d5">API functionality, retrieval</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </edge>
    <edge source="Salable" target="Remove Subscription Seats">
      <data key="d4">The Salable API provides the functionality to execute the Remove Subscription Seats function, enabling subscription management operations.</data>
      <data key="d5">API functionality, operation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </edge>
    <edge source="Salable" target="Cancel a Subscription">
      <data key="d4">Salable provides the function Cancel a Subscription as part of its API features for managing subscriptions.</data>
      <data key="d5">API functionality, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce</data>
    </edge>
    <edge source="Salable" target="Update Subscription">
      <data key="d4">Update Subscription is a function provided by the Salable API for updating subscription properties.</data>
      <data key="d5">functionality, subscription management</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_d979fc2428d484e09ae3b62b942d5968</data>
    </edge>
    <edge source="Salable" target="Change a Subscription's Plan">
      <data key="d4">The Salable API provides the function to change a subscription's plan as one of its functionalities.</data>
      <data key="d5">API functionality, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a</data>
    </edge>
    <edge source="Salable" target="Reactivate a Subscription">
      <data key="d4">Reactivate a Subscription is a function provided by the Salable API, indicating that it is part of the functionalities that Salable offers.</data>
      <data key="d5">api functionality, relationship with method</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_7f708cd18160447dd54fdd10c6e9203e</data>
    </edge>
    <edge source="Salable" target="Get One Pricing Table">
      <data key="d4">Get One Pricing Table is a function that utilizes the Salable API to retrieve pricing table data.</data>
      <data key="d5">function usage, API interaction</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d96e80b895dea6915b51ebb69acff797</data>
    </edge>
    <edge source="Salable" target="Create Session">
      <data key="d4">The Create Session function is a key feature of the Salable API, allowing the creation of sessions for web components.</data>
      <data key="d5">API functionality, session management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7</data>
    </edge>
    <edge source="Salable" target="License Object">
      <data key="d4">The Salable API references the License Object for additional documentation on related API requests, establishing a connection between them.</data>
      <data key="d5">documentation reference, related features</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7</data>
    </edge>
    <edge source="Salable" target="updateMany">
      <data key="d4">The updateMany function is a method provided by the Salable API, showcasing its functionality to manipulate licenses.</data>
      <data key="d5">API function, license management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_df8090e7aed9180a3275364203d78648</data>
    </edge>
    <edge source="Salable" target="capabilities">
      <data key="d4">Salable API provides access to the capabilities that a user account can check and manage.</data>
      <data key="d5">API functionality, user management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </edge>
    <edge source="Salable" target="your-grantees-id">
      <data key="d4">The grantee's ID is part of the parameters for the Salable API in checking licenses and capabilities.</data>
      <data key="d5">parameter usage, API functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </edge>
    <edge source="Salable" target="getCheckoutLink">
      <data key="d4">The function getCheckoutLink is part of the Salable API, showcasing its ability to facilitate checkout processes.</data>
      <data key="d5">function integration, payment API</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_d9e1d76334e0264800ec30320373ba71</data>
    </edge>
    <edge source="Salable" target="licenses">
      <data key="d4">The Salable API includes features for managing licenses, such as cancelling them using UUIDs.</data>
      <data key="d5">feature utilization, management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f45958815097879415986e68ae21cbba</data>
    </edge>
    <edge source="Salable" target="Node.js">
      <data key="d4">Node.js is a context in which the Salable API can be utilized for operation, enabling license management through code.</data>
      <data key="d5">programming, integration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_f45958815097879415986e68ae21cbba</data>
    </edge>
    <edge source="Salable" target="cURL">
      <data key="d4">cURL allows communicative interactions with the Salable API for cancelling licenses through command-line requests.</data>
      <data key="d5">API interaction, command-line usage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f45958815097879415986e68ae21cbba</data>
    </edge>
    <edge source="Salable" target="Version v2">
      <data key="d4">Version v2 denotes the specific version of the Salable API that is referenced for cancelling licenses.</data>
      <data key="d5">versioning, operational context</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_f45958815097879415986e68ae21cbba</data>
    </edge>
    <edge source="Salable" target="Add Seats">
      <data key="d4">Salable API provides the Add Seats function to manage subscription capacities, linking the API directly with seat management.</data>
      <data key="d5">API functionality, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </edge>
    <edge source="Salable" target="Remove Seats">
      <data key="d4">Salable API provides the Remove Seats function to manage subscription capacities, similarly linking the API with seat management.</data>
      <data key="d5">API functionality, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </edge>
    <edge source="Salable" target="ad hoc license">
      <data key="d4">Salable API enables the creation of ad hoc licenses, which allows special access to a paid plan for specific customers.</data>
      <data key="d5">license management, special access</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </edge>
    <edge source="Salable" target="YOUR-SALABLE-API-KEY">
      <data key="d4">YOUR-SALABLE-API-KEY is used within the Salable API for authentication during license management operations.</data>
      <data key="d5">authentication, security</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </edge>
    <edge source="Salable" target="PLAN_UUID">
      <data key="d4">PLAN_UUID is required by the Salable API to identify the specific plan related to the ad hoc license being created.</data>
      <data key="d5">license creation, identifier</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </edge>
    <edge source="Salable" target="GRANTEE_ID">
      <data key="d4">GRANTEE_ID is utilized in the Salable API requests to specify the user receiving the license.</data>
      <data key="d5">license assignment, user identification</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </edge>
    <edge source="Salable" target="https://api.salable.app/licenses">
      <data key="d4">This endpoint is called within the Salable API to create licenses including ad hoc licenses for specific users.</data>
      <data key="d5">API endpoint, license management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_cb965cbdb5538866a79f985d89308954</data>
    </edge>
    <edge source="Salable" target="subscriptions.cancel">
      <data key="d4">The function subscriptions.cancel is a method provided by the Salable API to handle subscription cancellations.</data>
      <data key="d5">API functionality, subscription management</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </edge>
    <edge source="Salable" target="'your-salable-api-key'">
      <data key="d4">The API key is necessary for authenticating requests made to the Salable API, thus connecting the variable to the API functionality.</data>
      <data key="d5">authentication, connection</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </edge>
    <edge source="Salable" target="changeSubscriptionPlan">
      <data key="d4">The changeSubscriptionPlan function is a part of the Salable API, used to interact with subscription plans.</data>
      <data key="d5">API functionality, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2</data>
    </edge>
    <edge source="Salable" target="Flat Rate Billing in Next.js">
      <data key="d4">Salable provides the configuration necessary to implement flat rate billing strategies in the Next.js framework.</data>
      <data key="d5">billing configuration, implementation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </edge>
    <edge source="Salable" target="Usage-Based Billing in Next.js">
      <data key="d4">Salable enables the implementation of usage-based billing strategies in Next.js applications.</data>
      <data key="d5">billing configuration, implementation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </edge>
    <edge source="Salable" target="Per-Seat Billing in Next.js">
      <data key="d4">Salable supports the configuration required to implement per-seat billing in Next.js applications.</data>
      <data key="d5">billing configuration, implementation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </edge>
    <edge source="Salable" target="Flat Rate Billing in Miro">
      <data key="d4">Salable allows the implementation of flat rate billing strategies in Miro through appropriate configuration.</data>
      <data key="d5">billing configuration, implementation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </edge>
    <edge source="Salable" target="Usage-Based Billing in Miro">
      <data key="d4">Salable provides configuration options to implement usage-based billing in Miro.</data>
      <data key="d5">billing configuration, implementation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4</data>
    </edge>
    <edge source="Salable" target="removeSeats">
      <data key="d4">The Salable API includes the removeSeats function as a method for managing subscriptions.</data>
      <data key="d5">API functionality, management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f</data>
    </edge>
    <edge source="Pro Plan" target="Export CSV">
      <data key="d4">The Export CSV feature is tied specifically to the Pro Plan, indicating that only Pro users can access this functionality.:|:The Export CSV feature is enabled for the Pro Plan, allowing users of this plan to utilize this feature.</data>
      <data key="d5">subscription model, feature access:|:feature activation, plan benefits</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_99827a02251fd259a13d407966db3096:|:excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </edge>
    <edge source="Pro Plan" target="Data Analytics">
      <data key="d4">Data Analytics functionality is specifically associated with the Pro Plan, offering enhanced capabilities to users on that plan.</data>
      <data key="d5">feature association, plan capabilities</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </edge>
    <edge source="Export CSV" target="Basic Plan">
      <data key="d4">The Export CSV feature may be disabled for the Basic Plan, which limits functionality compared to other plans.</data>
      <data key="d5">plan limitations, feature availability</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </edge>
    <edge source="Export CSV" target="Premium Plan">
      <data key="d4">The Export CSV feature is also available on the Premium Plan, enhancing the functionality offered.</data>
      <data key="d5">feature enhancement, premium access</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </edge>
    <edge source="Granular Approach" target="Capabilities">
      <data key="d4">The Granular Approach advocates for managing access to Capabilities, simplifying user authorisation processes on Salable.</data>
      <data key="d5">authorisation method, functionality management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_99827a02251fd259a13d407966db3096</data>
    </edge>
    <edge source="Capabilities" target="Products">
      <data key="d4">Products can be configured to manage various Capabilities, which are integral to their functionality.</data>
      <data key="d5">configuration management, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b672ed1c3e3680e80873b4a4ba2d3012</data>
    </edge>
    <edge source="Capabilities" target="Trash Can Icon">
      <data key="d4">The Trash Can Icon provides a means to deprecate Capabilities, linking user interface actions to feature management.</data>
      <data key="d5">user interface, feature management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b672ed1c3e3680e80873b4a4ba2d3012</data>
    </edge>
    <edge source="Capabilities" target="Product">
      <data key="d4">Products can have various Capabilities added to enhance what they offer to users.</data>
      <data key="d5">feature enhancement, value</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0</data>
    </edge>
    <edge source="Capabilities" target="LicenseByPurchaser">
      <data key="d4">LicenseByPurchaser includes capabilities that are crucial for defining the features offered to a purchaser.</data>
      <data key="d5">feature set, configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9516a99c40383674c2274db86035bea6</data>
    </edge>
    <edge source="API_KEY" target="Get Currencies for a Product">
      <data key="d4">The API_KEY variable is required for calling the Get Currencies for a Product function, allowing proper authentication.</data>
      <data key="d5">authentication, API requirement</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_413bf83a1f6433b1357024badf84fc52</data>
    </edge>
    <edge source="API_KEY" target="salable.plans.getCurrencies">
      <data key="d4">The API_KEY is necessary for authenticating the call to salable.plans.getCurrencies, indicating a configuration relationship.</data>
      <data key="d5">authentication, configuration requirement</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d</data>
    </edge>
    <edge source="API_KEY" target="salable">
      <data key="d4">The variable salable is initialized using the API_KEY to authenticate access to the Salable API.</data>
      <data key="d5">authentication mechanism</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_310437ff88c214d922e257631db6a72d</data>
    </edge>
    <edge source="Stripe" target="Salable Account">
      <data key="d4">A Salable Account is needed to connect with payment providers like Stripe for payment integration.</data>
      <data key="d5">integration, prerequisites</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c</data>
    </edge>
    <edge source="Salable Account" target="Salable Organization">
      <data key="d4">The Salable Organization is managed under the Salable Account, enabling the control and organization of users and features.</data>
      <data key="d5">organization, management</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00</data>
    </edge>
    <edge source="Salable Account" target="API Key">
      <data key="d4">Creating a Salable Account provides the user with an API Key necessary for authentication in the Salable system.</data>
      <data key="d5">authentication, access</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e92c83ab9e90ff89816fc1841452b9ce</data>
    </edge>
    <edge source="License" target="Grantee">
      <data key="d4">A License defines the capabilities and features that a Grantee can access, establishing a direct association between them.:|:A License is assigned to a Grantee, defining what functionalities they can access within the application.</data>
      <data key="d5">access control, association:|:assignment, access control</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_431115802905d2582e7883b3b0c33bf9:|:excerpt_id_8949faee968ed6bf19c979f4b005a699</data>
    </edge>
    <edge source="License" target="Plan">
      <data key="d4">A License describes the access granted to a Grantee based on their associated Plan.</data>
      <data key="d5">access control, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_8949faee968ed6bf19c979f4b005a699</data>
    </edge>
    <edge source="License" target="Salable Dashboard">
      <data key="d4">The Salable Dashboard is used to manage the License, including updates to parameters like Grantee ID and suspension of the License.</data>
      <data key="d5">user interface, license management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </edge>
    <edge source="License" target="Grantee ID">
      <data key="d4">The Grantee ID is a parameter associated with the License that can be updated in the Salable Dashboard.</data>
      <data key="d5">license parameter, update</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </edge>
    <edge source="License" target="Update License">
      <data key="d4">The Update License function is directly involved in modifying attributes of the License within the Salable Dashboard.</data>
      <data key="d5">functionality, license modification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </edge>
    <edge source="License" target="Suspend License">
      <data key="d4">The Suspend License function specifically targets the License to suspend it, making it inactive and necessitating a new creation for changes.</data>
      <data key="d5">functionality, license suspension</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </edge>
    <edge source="License" target="uuid">
      <data key="d4">License configuration utilizes a UUID to uniquely identify and manage it.</data>
      <data key="d5">identification, configuration structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ed15282d717d6166fcb39ad94076c541</data>
    </edge>
    <edge source="License" target="status">
      <data key="d4">License has a status property that represents its current operational state.</data>
      <data key="d5">operation state, management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ed15282d717d6166fcb39ad94076c541</data>
    </edge>
    <edge source="License" target="granteeId">
      <data key="d4">License configuration references a Grantee ID which identifies the recipient of the License.</data>
      <data key="d5">identification, ownership</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_ed15282d717d6166fcb39ad94076c541</data>
    </edge>
    <edge source="License" target="capabilities">
      <data key="d4">License contains capabilities that list the functionalities allowed under it.</data>
      <data key="d5">functionalities, access</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ed15282d717d6166fcb39ad94076c541</data>
    </edge>
    <edge source="License" target="metadata">
      <data key="d4">Metadata provides additional relevant information that complements the License configuration.</data>
      <data key="d5">supplementary information, details</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_ed15282d717d6166fcb39ad94076c541</data>
    </edge>
    <edge source="License" target="Licenses Endpoint">
      <data key="d4">The Licenses Endpoint allows users to create and manage licenses, indicating a functional connection between the two.</data>
      <data key="d5">functionality, management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_93a1bdd9071867235ec2537127127c00</data>
    </edge>
    <edge source="License" target="getLicenseByUuid">
      <data key="d4">getLicenseByUuid fetches the details that are structured according to the License schema.</data>
      <data key="d5">data retrieval, schema correspondence</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4</data>
    </edge>
    <edge source="License" target="cancelLicense">
      <data key="d4">The cancelLicense function changes the state of a License to 'CANCELED', directly impacting the License object.</data>
      <data key="d5">function-object interaction</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </edge>
    <edge source="License" target="getLicensesByGranteeId">
      <data key="d4">The function getLicensesByGranteeId retrieves data structured as a License schema, indicating a direct link in functionality.</data>
      <data key="d5">data retrieval, function-output</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_8f76cec6c3c5c205e09868b54019ae7b</data>
    </edge>
    <edge source="License" target="LicenseByPurchaser">
      <data key="d4">LicenseByPurchaser schema outlines the structure of license data that falls under the License schema.</data>
      <data key="d5">schema relationship, data structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8f76cec6c3c5c205e09868b54019ae7b</data>
    </edge>
    <edge source="License" target="cancelLicenses">
      <data key="d4">"The function cancelLicenses is designed to operate on licenses, specifically to cancel them.")</data>
      <data key="d5">API functionality, operation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a8a1a1f7699cb50324dc4207ba11c6e6</data>
    </edge>
    <edge source="Grantee" target="User ID">
      <data key="d4">A Grantee can be defined using a User ID, establishing a mechanism for identifying the license holder.</data>
      <data key="d5">identifier, user relationship</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_431115802905d2582e7883b3b0c33bf9</data>
    </edge>
    <edge source="Grantee" target="Board ID">
      <data key="d4">A Grantee can also be defined using a Board ID, allowing licenses to be assigned to specific boards.</data>
      <data key="d5">identifier, board relationship</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_431115802905d2582e7883b3b0c33bf9</data>
    </edge>
    <edge source="Cancellation Button" target="Web Components">
      <data key="d4">The Cancellation Button is also a type of Web Component included in the library for subscription management.</data>
      <data key="d5">component usage, functionality</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </edge>
    <edge source="Cancellation Button" target="Invoices Documentation">
      <data key="d4">Invoices Documentation includes guidelines on how to implement features like the Cancellation Button.</data>
      <data key="d5">guide, feature correlation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </edge>
    <edge source="Tabs" target="TabItem">
      <data key="d4">Tabs contain multiple TabItems, each allowing users to switch between different content views, enhancing user experience.:|:Tabs contains multiple TabItems, making it possible to display various sections of content within a single interface.:|:Tabs contains multiple TabItems, allowing the user to navigate between different content areas in the interface.:|:Tabs houses multiple TabItem components, enabling the user to switch between different content views.:|:Tabs and TabItem components work together to provide a user-friendly interface for displaying multiple related content sections.:|:Tabs is a feature that contains multiple TabItems, each representing different content or functionality.:|:Tabs serves as a container for multiple TabItems, allowing users to navigate between them seamlessly.:|:Tabs organizes content into TabItem components, allowing users to switch between different sections seamlessly.:|:TabItem is a part of the Tabs interface, representing a selectable item within the overall tab structure.:|:Tabs are composed of multiple TabItems, which together allow users to navigate between different sections of information related to the Cancellation Button.</data>
      <data key="d5">component relationship:|:user interface, organization:|:component usage, UI navigation:|:feature-composition:|:UI component structure:|:UI components, interaction:|:UI component hierarchy:|:UI components, navigation:|:UI organization, user navigation:|:navigation, UI structure</data>
      <data key="d6">85.0</data>
      <data key="d7">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2:|:excerpt_id_94fb228ccda17239a53922fdeba71ddc:|:excerpt_id_58ff1c48dee01d0183a336f780b53149:|:excerpt_id_d9e1d76334e0264800ec30320373ba71:|:excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd:|:excerpt_id_df8090e7aed9180a3275364203d78648:|:excerpt_id_5ebe47a66fffe70faec5fc051e3e9666:|:excerpt_id_cb965cbdb5538866a79f985d89308954:|:excerpt_id_ee6311eda1a74d2cb86e7774e2dda643:|:excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </edge>
    <edge source="Tabs" target="Example Code">
      <data key="d4">Tabs organize the Example Code into specific sections, enhancing the user's experience in navigating through the documentation.</data>
      <data key="d5">user interface, organization</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_761b7e7d2e80ea5581133a171250a211</data>
    </edge>
    <edge source="TabItem" target="SalableInvoices">
      <data key="d4">The TabItem interface enables the display of the SalableInvoices component within a tabbed navigation system, allowing users to easily switch between different views.</data>
      <data key="d5">UI integration, navigation</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_da0a09d7dfdef3227e5234d284bf95ca</data>
    </edge>
    <edge source="cURL" target="changeSubscriptionPlan">
      <data key="d4">The cURL example demonstrates how to use the API to change a subscription plan, illustrating practical usage.</data>
      <data key="d5">API example, practical application</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2</data>
    </edge>
    <edge source="getAll" target="granteeId">
      <data key="d4">getAll utilizes granteeId as a filtering parameter, demonstrating a direct dependency on this variable for retrieving licenses.</data>
      <data key="d5">data retrieval, filtering</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </edge>
    <edge source="getAll" target="getOne">
      <data key="d4">Both 'getOne' and 'getAll' are API methods that facilitate information retrieval for subscriptions, contributing to overall management efficiency.</data>
      <data key="d5">API functionality, information retrieval</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </edge>
    <edge source="getAll" target="getInvoices">
      <data key="d4">Both 'getInvoices' and 'getAll' API methods enhance subscription management by providing important financial documentation.</data>
      <data key="d5">financial management, API functionality</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </edge>
    <edge source="getOne" target="granteeId">
      <data key="d4">getOne function requires granteeId for its operation, linking the function to this variable as a crucial parameter.</data>
      <data key="d5">operation necessity, linkage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </edge>
    <edge source="getOne" target="getSwitchablePlans">
      <data key="d4">The 'getSwitchablePlans' method complements 'getOne' by providing options for users to change their subscription plans after retrieval.</data>
      <data key="d5">options management, user experience</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </edge>
    <edge source="getOne" target="Licenses">
      <data key="d4">getOne is directly used to retrieve a single License, demonstrating a strong link between the two entities.</data>
      <data key="d5">functionality relationship</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="getOne" target="Products">
      <data key="d4">getOne can retrieve product details, indicating that retrieving Products is an essential SDK function.</data>
      <data key="d5">product retrieval</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="granteeId" target="update">
      <data key="d4">update involves modifying licenses based on changes to granteeId, showing its influence on license updates.</data>
      <data key="d5">license modification, variables</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </edge>
    <edge source="granteeId" target="cancelMany">
      <data key="d4">cancelMany requires the use of granteeId to identify which licenses should be canceled, linking the function to this variable.</data>
      <data key="d5">cancellation process, linkage</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </edge>
    <edge source="granteeId" target="license">
      <data key="d4">The granteeId variable is part of the license configuration, indicating the assigned user or entity for that license.:|:The granteeId is related to licensing as it identifies the entity that is granted a license.</data>
      <data key="d5">licensing, identification:|:variable association, configuration</data>
      <data key="d6">23.0</data>
      <data key="d7">excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_df8090e7aed9180a3275364203d78648</data>
    </edge>
    <edge source="granteeId" target="Pricing Table">
      <data key="d4">granteeId is necessitated for tailoring the Pricing Table to a specific user, highlighting its importance in the API call.</data>
      <data key="d5">user specification, feature necessity</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_fabc937abc8c4367253839f749f33317</data>
    </edge>
    <edge source="granteeId" target="createManyAdHocLicenseParams">
      <data key="d4">granteeId is mentioned as an optional field in createManyAdHocLicenseParams for specifying the license recipient.</data>
      <data key="d5">optional parameter, license assignment</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </edge>
    <edge source="granteeId" target="Get Licenses for a Grantee ID">
      <data key="d4">granteeId is a crucial parameter of the Get Licenses for a Grantee ID function, determining which licenses to retrieve.</data>
      <data key="d5">parameter usage, function input</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_3e7d435b3bee1520f4473a125ea800e1</data>
    </edge>
    <edge source="granteeId" target="updateManyLicensesParams">
      <data key="d4">"granteeId is a key property of updateManyLicensesParams, which is necessary for updating licenses."&lt;</data>
      <data key="d5">property requirement, data structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5</data>
    </edge>
    <edge source="granteeId" target="updateLicenseParams">
      <data key="d4">The granteeId is a mandatory property within the updateLicenseParams that serves as an input for the Update License function.</data>
      <data key="d5">parameter specification, function input</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </edge>
    <edge source="granteeId" target="UpdateLicenseUsageOptions">
      <data key="d4">granteeId is one of the required parameters within UpdateLicenseUsageOptions for identifying the license holder.</data>
      <data key="d5">parameter dependency, configuration requirement</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </edge>
    <edge source="granteeId" target="CurrentUsageOptions">
      <data key="d4">granteeId is a mandatory field within the CurrentUsageOptions that is required by the function.</data>
      <data key="d5">parameter requirement, function configuration</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </edge>
    <edge source="granteeId" target="salable.plans.getCheckoutLink">
      <data key="d4">salable.plans.getCheckoutLink requires granteeId to identify the user making the purchase, essential for processing the transaction.</data>
      <data key="d5">user identification, transaction processing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </edge>
    <edge source="granteeId" target="GetPlanCheckoutOptions">
      <data key="d4">granteeId is included in the GetPlanCheckoutOptions to ensure proper association with the Plan.</data>
      <data key="d5">configuration, identification</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </edge>
    <edge source="granteeId" target="planUuid">
      <data key="d4">Both planUuid and granteeId are required to identify specific aspects of a license's usage and filtering options.</data>
      <data key="d5">license identification, query requirements</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_aeed752a0854093562fcab1a2782b1b3</data>
    </edge>
    <edge source="granteeId" target="LicenseUpdateRequest">
      <data key="d4">granteeId is a variable within LicenseUpdateRequest that identifies who the license update pertains to, creating a link between the request and the recipient entity.</data>
      <data key="d5">identifier, license parameters</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a2081f1929b982759b423b9e6f1d90b7</data>
    </edge>
    <edge source="create" target="status">
      <data key="d4">create allows an optional status parameter to be provided, indicating how this attribute can influence the creation of licenses.</data>
      <data key="d5">optional parameter, license creation</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </edge>
    <edge source="create" target="endTime">
      <data key="d4">create permits an optional endTime parameter, demonstrating its capability to initiate licenses with specific time constraints.</data>
      <data key="d5">time management, license creation</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_6570345c98baaf7dba384cd0d59011cb</data>
    </edge>
    <edge source="update" target="Licenses">
      <data key="d4">update is a method for modifying existing licenses, making it a crucial part of Licenses management.</data>
      <data key="d5">functional management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="cancelMany" target="Cancel Many Licenses">
      <data key="d4">Cancel Many Licenses is a specific function that implements the cancelMany method to execute the cancellation of licenses.</data>
      <data key="d5">method implementation, function usage</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a78cd4046bc4c2cd90d128228e28893d</data>
    </edge>
    <edge source="cancelMany" target="licenseUuids">
      <data key="d4">licenseUuids are required inputs for the cancelMany function to specify which licenses to cancel.</data>
      <data key="d5">parameters, function input</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a78cd4046bc4c2cd90d128228e28893d</data>
    </edge>
    <edge source="status" target="licenses.getForPurchaser">
      <data key="d4">status is an optional variable that affects the filtering of licenses fetched by the function.</data>
      <data key="d5">optional parameter, functionality</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </edge>
    <edge source="status" target="createManyAdHocLicenseParams">
      <data key="d4">status is an optional field within createManyAdHocLicenseParams, detailing the current state of the license being created.</data>
      <data key="d5">optional parameter, license state</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </edge>
    <edge source="status" target="Product">
      <data key="d4">The status variable within the Product configuration indicates whether the product is currently ACTIVE or DEPRECATED, influencing its usability.</data>
      <data key="d5">product status, availability</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </edge>
    <edge source="status" target="Plan">
      <data key="d4">The status of a Plan provides insights into its current state, reflecting its operational condition or administrative decisions.</data>
      <data key="d5">operational status, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a0fec7d8127f726de8c00070d4b3778f</data>
    </edge>
    <edge source="status" target="Capability">
      <data key="d4">The status of Capability reflects its operational condition, allowing users to ascertain whether it is still applicable or not.</data>
      <data key="d5">operational status, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a0fec7d8127f726de8c00070d4b3778f</data>
    </edge>
    <edge source="status" target="ProductPricingTable">
      <data key="d4">The status variable in ProductPricingTable shows the current state of the product, indicating if it is ACTIVE or DEPRECATED.</data>
      <data key="d5">product state, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </edge>
    <edge source="status" target="Event">
      <data key="d4">The status variable reflects the current processing state of the Event, which is crucial for monitoring its lifecycle.</data>
      <data key="d5">event monitoring, lifecycle management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="status" target="Subscription">
      <data key="d4">status defines the current active state of the subscription, impacting its management.</data>
      <data key="d5">status management, state indication</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="status" target="LicenseCreateRequest">
      <data key="d4">The status variable in LicenseCreateRequest defines what state the newly created license will have, either ACTIVE or TRIALING.</data>
      <data key="d5">state management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </edge>
    <edge source="status" target="status_transitions">
      <data key="d4">The status variable interacts with status transitions to reflect changes in payment state.</data>
      <data key="d5">payment state, transitional data</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </edge>
    <edge source="status" target="SubscriptionUpdatablePlan">
      <data key="d4">The status provides a real-time indication of the SubscriptionUpdatablePlan's state, which is important for user-facing applications.</data>
      <data key="d5">state management, API operation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </edge>
    <edge source="status" target="Sample Product">
      <data key="d4">Sample Product's status indicates whether it is currently ACTIVE or DEPRECATED, reflecting its operational state.</data>
      <data key="d5">product status, operational management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1c13b52ff77353471ab9c278f922f502</data>
    </edge>
    <edge source="status" target="plans">
      <data key="d4">The status of each plan influences its visibility and operation within the overall plans configuration."+</data>
      <data key="d5">operation, visibility</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </edge>
    <edge source="status" target="capability">
      <data key="d4">capability includes a status property indicating its current state (ACTIVE or DEPRECATED).</data>
      <data key="d5">state, management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b5b087e2945918c40faadd1bcef0b6d2</data>
    </edge>
    <edge source="endTime" target="createManyAdHocLicenseParams">
      <data key="d4">endTime provides the ability to set a custom expiration in the createManyAdHocLicenseParams configuration.</data>
      <data key="d5">optional parameter, license expiration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </edge>
    <edge source="endTime" target="updateLicenseParams">
      <data key="d4">The endTime is an optional property in the updateLicenseParams that can modify the license duration in the Update License function.</data>
      <data key="d5">optional feature, parameter specification</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </edge>
    <edge source="endTime" target="License Object">
      <data key="d4">endTime is a variable used within the context of the License Object API, implying its relevance in license customization.</data>
      <data key="d5">variable usage, license configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_157af2fc7f3224cea8bd3bb2e3388abb</data>
    </edge>
    <edge source="endTime" target="LicenseCreateRequest">
      <data key="d4">The endTime variable in LicenseCreateRequest allows customization of the license's expiration date, impacting its management.</data>
      <data key="d5">customization, license lifecycle</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </edge>
    <edge source="endTime" target="LicenseUpdateRequest">
      <data key="d4">endTime is a crucial variable in LicenseUpdateRequest for defining the expiration of a license, linking it directly to the request structure.</data>
      <data key="d5">expiration, license parameters</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a2081f1929b982759b423b9e6f1d90b7</data>
    </edge>
    <edge source="getInvoices" target="subscriptionUuid">
      <data key="d4">subscriptionUuid is a required input for the getInvoices function to identify which subscription's invoices are being fetched.</data>
      <data key="d5">parameter requirement, function input</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_0605f5987dc662b127cbcde1ca896ece</data>
    </edge>
    <edge source="getInvoices" target="options">
      <data key="d4">options can be passed to the getInvoices function to customize the request for fetching invoices.</data>
      <data key="d5">function configuration, customization</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_0605f5987dc662b127cbcde1ca896ece</data>
    </edge>
    <edge source="getUpdatePaymentLink" target="getPaymentMethod">
      <data key="d4">Both methods facilitate the management of subscription payments, ensuring users can access and modify their payment information effectively.</data>
      <data key="d5">payment management, API functionality</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </edge>
    <edge source="addSeats" target="removeSeats">
      <data key="d4">The 'addSeats' and 'removeSeats' functions are complementary, both affecting the subscription's user capacity dynamically.</data>
      <data key="d5">subscription management, capacity control</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_22cd5495433421f9da8476c7c8928c7a</data>
    </edge>
    <edge source="addSeats" target="Increment Subscription Seats">
      <data key="d4">The Increment Subscription Seats feature utilizes the addSeats function to perform its task of adding seats to subscriptions.</data>
      <data key="d5">feature-utilization, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_fde1d0189eaa75074956787efcc59cec</data>
    </edge>
    <edge source="addSeats" target="subscriptionUuid">
      <data key="d4">The addSeats function requires subscriptionUuid to specify which subscription needs to have seats added.</data>
      <data key="d5">parameter-relation, functional dependency</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_fde1d0189eaa75074956787efcc59cec</data>
    </edge>
    <edge source="addSeats" target="Options">
      <data key="d4">Options are configurations passed to addSeats function that influence how seats are added, including the handling of proration.</data>
      <data key="d5">configuration, operational context</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_fde1d0189eaa75074956787efcc59cec</data>
    </edge>
    <edge source="removeSeats" target="Licenses">
      <data key="d4">removeSeats can be used to adjust licenses related to subscriptions, indicating a relationship with management of floating licenses.</data>
      <data key="d5">functional adjustment</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="removeSeats" target="subscription management">
      <data key="d4">The removeSeats function is a key aspect of the subscription management feature of Salable, allowing adjustments to subscription seat counts.</data>
      <data key="d5">functionality correlation, API usage</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_de8626e7234f5a3c62010de5ee420028</data>
    </edge>
    <edge source="removeSeats" target="your-subscription-uuid">
      <data key="d4">The your-subscription-uuid variable is essential for identifying which subscription's seats are to be modified through the removeSeats function.:|:your-subscription-uuid acts as an identifier required for the removeSeats function to specify which subscription is being modified.</data>
      <data key="d5">parameter necessity, function dependency:|:identification, modification</data>
      <data key="d6">17.0</data>
      <data key="d7">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f:|:excerpt_id_de8626e7234f5a3c62010de5ee420028</data>
    </edge>
    <edge source="removeSeats" target="decrement">
      <data key="d4">The decrement variable is passed to the removeSeats function to specify how many seats to remove.</data>
      <data key="d5">function parameter, operation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f</data>
    </edge>
    <edge source="Licenses" target="getCount">
      <data key="d4">getCount is a function specifically designed to retrieve counts related to Licenses, indicating its direct application.</data>
      <data key="d5">functionality relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="Licenses" target="SalableResponseError">
      <data key="d4">SalableResponseError handles errors that arise specifically while processing Licenses, indicating a strong interdependency.</data>
      <data key="d5">error handling</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="Licenses" target="SalableValidationError">
      <data key="d4">SalableValidationError addresses issues related to validating licenses, which connects it closely to the Licenses feature.</data>
      <data key="d5">validation error</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="Licenses" target="SalableUnknownError">
      <data key="d4">SalableUnknownError captures unforeseen errors when interacting with Licenses, demonstrating a safety net around this feature.</data>
      <data key="d5">error management</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="Licenses" target="Create New License">
      <data key="d4">The Licenses interface provides access to the Create New License function, enabling license management.</data>
      <data key="d5">interface function, license management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </edge>
    <edge source="Licenses" target="Product Page">
      <data key="d4">The Product Page displays licenses specifically associated with a single product, facilitating targeted management.</data>
      <data key="d5">specificity, user interface</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_15ef1834aa3a1da2af8e9952509255a2</data>
    </edge>
    <edge source="Licenses" target="Left-Hand Menu">
      <data key="d4">The Left-Hand Menu allows users to manage and filter all issued licenses, providing a broader view compared to the Product Page.</data>
      <data key="d5">overview, comprehensive management</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_15ef1834aa3a1da2af8e9952509255a2</data>
    </edge>
    <edge source="Licenses" target="CursorPaginationLicensesResponse">
      <data key="d4">CursorPaginationLicensesResponse offers structured data that supports the Licenses feature, indicating a direct operational link.</data>
      <data key="d5">pagination, data management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac</data>
    </edge>
    <edge source="Licenses" target="getLicensesCount">
      <data key="d4">getLicensesCount is a function associated with the Licenses feature, responsible for retrieving counts of licenses.</data>
      <data key="d5">functionality, feature</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </edge>
    <edge source="Licenses" target="apiKey">
      <data key="d4">The Licenses feature requires an apiKey for authentication and access to its functionalities.</data>
      <data key="d5">authentication, access</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </edge>
    <edge source="Licenses" target="getLicenseByUuid">
      <data key="d4">Licenses tag categorizes the getLicenseByUuid operation within the API documentation for easier navigation and understanding.</data>
      <data key="d5">API documentation, feature categorization</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4</data>
    </edge>
    <edge source="Licenses" target="updateLicense">
      <data key="d4">updateLicense is categorized under the Licenses feature, linking it to license management operations.</data>
      <data key="d5">feature-function association</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </edge>
    <edge source="Licenses" target="cancelLicense">
      <data key="d4">cancelLicense also falls under the Licenses feature, showing its relevance to the overall license management process.</data>
      <data key="d5">feature-function association</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </edge>
    <edge source="Licenses" target="getLicenseCheck">
      <data key="d4">getLicenseCheck function is part of the Licenses feature that allows checking of the access capabilities for grantees.</data>
      <data key="d5">API feature, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_436e9d6c339c56d143b4d7eb7f449283</data>
    </edge>
    <edge source="Licenses" target="getLicensesByPurchaser">
      <data key="d4">getLicensesByPurchaser function is a part of the Licenses feature, managing data retrieval for purchaser licenses.</data>
      <data key="d5">API feature, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_436e9d6c339c56d143b4d7eb7f449283</data>
    </edge>
    <edge source="success-url" target="SalableCheckout">
      <data key="d4">SalableCheckout uses the success-url variable to redirect users upon successful checkout completion.</data>
      <data key="d5">checkout flow, redirection</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </edge>
    <edge source="currency" target="Pricing Table">
      <data key="d4">currency determines the monetary format in which prices are displayed on the Pricing Table, influencing user experience.</data>
      <data key="d5">formatting, user experience</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_fabc937abc8c4367253839f749f33317</data>
    </edge>
    <edge source="currency" target="options">
      <data key="d4">currency is an optional part of the options configuration that can influence the pricing table retrieval based on currency preference.</data>
      <data key="d5">optional parameter, configuration</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_d96e80b895dea6915b51ebb69acff797</data>
    </edge>
    <edge source="currency" target="Salable Pricing Table Web Component">
      <data key="d4">currency determines the financial framework of the Salable Pricing Table Web Component, influencing how prices are shown.</data>
      <data key="d5">display, transaction relevance</data>
      <data key="d6">12.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="currency" target="GetPlanCheckoutOptions">
      <data key="d4">currency is a required parameter within GetPlanCheckoutOptions that determines the monetary format for the checkout process.</data>
      <data key="d5">configuration, transaction processing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </edge>
    <edge source="currency" target="SalablePricingTable">
      <data key="d4">The SalablePricingTable component requires currency to display pricing in the correct monetary format.:|:SalablePricingTable is designed to work with the specified currency to format transaction amounts correctly.</data>
      <data key="d5">monetary value, dependency:|:transaction format, currency handling</data>
      <data key="d6">32.0</data>
      <data key="d7">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_76f2bf224d3111fcdb908c47e3e64890</data>
    </edge>
    <edge source="currency" target="owner">
      <data key="d4">currency is related to the owner as it indicates the transaction type for purchases made under that owner's ID.</data>
      <data key="d5">transaction type, ownership</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_ef01641492d489ead5f4ed24b22dc924</data>
    </edge>
    <edge source="defineCustomElements" target="SalableCheckout">
      <data key="d4">defineCustomElements is called to ensure that the SalableCheckout component is correctly initialized for use.</data>
      <data key="d5">initialization, setup</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </edge>
    <edge source="defineCustomElements" target="SalableCancellationButton">
      <data key="d4">The defineCustomElements function is necessary to register the SalableCancellationButton component for use in the application.</data>
      <data key="d5">initialization, functionality</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </edge>
    <edge source="defineCustomElements" target="SalableInvoices">
      <data key="d4">The SalableInvoices component requires the defineCustomElements function to be called before it can be used, ensuring that all custom elements are properly initialized.:|:SalableInvoices requires the defineCustomElements function to be invoked prior to rendering to ensure proper element definitions.</data>
      <data key="d5">initialization, dependency:|:initialization, component rendering</data>
      <data key="d6">26.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_da0a09d7dfdef3227e5234d284bf95ca</data>
    </edge>
    <edge source="Bespoke Plans" target="Proprietary Plans">
      <data key="d4">Proprietary Plans are standard offerings, while Bespoke Plans allow for customization and unique feature sets.</data>
      <data key="d5">standard vs. custom offerings, plan differentiation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_889335c292df0ac0fb3417eda2e436b9</data>
    </edge>
    <edge source="Bespoke Plans" target="License Type Section">
      <data key="d4">The License Type Section allows configuration options that specifically apply to Bespoke Plans, differing from Standard Plans.</data>
      <data key="d5">plan categorization, customization</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </edge>
    <edge source="API Docs" target="Sessions">
      <data key="d4">API Docs outline the procedures for creating and managing Sessions within web components, providing essential guidance for developers.</data>
      <data key="d5">documentation, functionality</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_843312fa18be8527f5843f17a4d64ad3</data>
    </edge>
    <edge source="Sessions" target="Salable Cancellation Button">
      <data key="d4">The Salable Cancellation Button utilizes Sessions to manage user interactions effectively, ensuring proper functionality and session management.</data>
      <data key="d5">component functionality, session management</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_843312fa18be8527f5843f17a4d64ad3</data>
    </edge>
    <edge source="Salable Cancellation Button" target="session-token">
      <data key="d4">The Salable Cancellation Button requires a session-token to function, linking user actions to their authenticated sessions.</data>
      <data key="d5">authentication, user interaction</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_843312fa18be8527f5843f17a4d64ad3</data>
    </edge>
    <edge source="Salable Cancellation Button" target="uuid">
      <data key="d4">The uuid serves as a unique identifier necessary for the Salable Cancellation Button to process cancellation requests correctly.</data>
      <data key="d5">identifier, component functionality</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_843312fa18be8527f5843f17a4d64ad3</data>
    </edge>
    <edge source="Salable Cancellation Button" target="HTML/JavaScript">
      <data key="d4">HTML/JavaScript example demonstrates the implementation of the Salable Cancellation Button in a practical web page setting.</data>
      <data key="d5">implementation, example usage</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_843312fa18be8527f5843f17a4d64ad3</data>
    </edge>
    <edge source="HTML/JavaScript" target="Salable Pricing Table Web Component">
      <data key="d4">HTML/JavaScript provides a practical example of implementing the Salable Pricing Table Web Component, demonstrating its use in web development.</data>
      <data key="d5">implementation, usage example</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="session-token" target="SalableCancellationButton">
      <data key="d4">The SalableCancellationButton requires a session-token variable to carry out cancellation actions properly.</data>
      <data key="d5">requirement, functionality</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </edge>
    <edge source="session-token" target="salable-invoices">
      <data key="d4">salable-invoices uses the session-token variable for authentication when retrieving data from the API.</data>
      <data key="d5">authentication, data retrieval</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_414b247030d869939909cae61904cbaf</data>
    </edge>
    <edge source="session-token" target="sessionToken">
      <data key="d4">sessionToken serves as a variable that connects with the session-token attribute essential for API requests.</data>
      <data key="d5">authentication link, variable-attribute</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542</data>
    </edge>
    <edge source="session-token" target="createSession">
      <data key="d4">session-token is a variable required by the createSession API to ensure authenticated session creation.</data>
      <data key="d5">authentication, API requirement</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="session-token" target="SalablePricingTable">
      <data key="d4">SalablePricingTable requires session-token as an input variable to manage user sessions effectively.</data>
      <data key="d5">input, user management</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_76f2bf224d3111fcdb908c47e3e64890</data>
    </edge>
    <edge source="uuid" target="SalableCancellationButton">
      <data key="d4">SalableCancellationButton requires uuid to function, indicating a direct relationship based on required inputs.:|:The SalableCancellationButton uses the uuid variable as a unique identifier for subscription or licensing purposes.</data>
      <data key="d5">API operation, dependency:|:requirement, functionality</data>
      <data key="d6">36.0</data>
      <data key="d7">excerpt_id_4a856870c319acb269c556884ddef7f2:|:excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </edge>
    <edge source="uuid" target="updateManyLicensesParams">
      <data key="d4">"uuid is another key property of updateManyLicensesParams, ensuring the correct license is selected for updating."&lt;</data>
      <data key="d5">property requirement, data structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5</data>
    </edge>
    <edge source="uuid" target="license">
      <data key="d4">The uuid variable serves as a unique identifier for the license, critical for identifying which license to update.</data>
      <data key="d5">identifier association, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_df8090e7aed9180a3275364203d78648</data>
    </edge>
    <edge source="uuid" target="createSession">
      <data key="d4">uuid is essential for the createSession API to create a distinct session associated with the Salable Pricing Table.</data>
      <data key="d5">identification, session creation</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="uuid" target="SalablePricingTable">
      <data key="d4">The SalablePricingTable uses uuid to uniquely identify the pricing table, ensuring correct data is displayed for the session.:|:SalablePricingTable uses uuid to identify a specific instance, linking its functionality to a unique pricing table.:|:The SalablePricingTable component uses the uuid to identify which pricing table to display.</data>
      <data key="d5">identifier, dependency:|:instance identification, functionality:|:unique identification, data management</data>
      <data key="d6">46.0</data>
      <data key="d7">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_76f2bf224d3111fcdb908c47e3e64890:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </edge>
    <edge source="uuid" target="Product">
      <data key="d4">The Product configuration requires a uuid to uniquely identify each product, making the uuid a fundamental element of the Product entity.</data>
      <data key="d5">identification, uniqueness</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </edge>
    <edge source="uuid" target="Plan">
      <data key="d4">Plan includes a uuid as a property, ensuring each Plan can be uniquely identified and differentiated from others.</data>
      <data key="d5">identifier, uniqueness</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a0fec7d8127f726de8c00070d4b3778f</data>
    </edge>
    <edge source="uuid" target="Capability">
      <data key="d4">Capability also includes a uuid for unique identification, similar to Plan, ensuring individual recognition.</data>
      <data key="d5">identifier, uniqueness</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a0fec7d8127f726de8c00070d4b3778f</data>
    </edge>
    <edge source="uuid" target="ProductPricingTable">
      <data key="d4">The ProductPricingTable uses uuid as a unique identifier for each instance of the product listed.</data>
      <data key="d5">identification, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </edge>
    <edge source="uuid" target="Event">
      <data key="d4">The uuid is a unique identifier that is essential for tracking the Event within the system.</data>
      <data key="d5">identification, tracking</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="uuid" target="Subscription">
      <data key="d4">uuid is utilized within the Subscription configuration to uniquely identify subscription instances.</data>
      <data key="d5">identification, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="uuid" target="LicenseUsageRecord">
      <data key="d4">The LicenseUsageRecord contains the uuid variable as a unique identifier for the record.</data>
      <data key="d5">hierarchical structure, identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </edge>
    <edge source="uuid" target="StripeInvoice">
      <data key="d4">StripeInvoice contains properties like id, amount_due, and others that uniquely identify its instances with a UUID.".</data>
      <data key="d5">identification, API structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </edge>
    <edge source="uuid" target="SubscriptionUpdatablePlan">
      <data key="d4">The SubscriptionUpdatablePlan API uses uuid to uniquely identify each subscription plan within its schema.</data>
      <data key="d5">identification, API structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </edge>
    <edge source="uuid" target="PricingTable">
      <data key="d4">uuid uniquely identifies instances of PricingTable, ensuring no duplicates exist, reinforcing referential integrity.</data>
      <data key="d5">identifier integrity</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </edge>
    <edge source="changePlan" target="Subscriptions">
      <data key="d4">changePlan allows modifications of subscription plans which are directly tied to the licensing structure.</data>
      <data key="d5">plan management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_92801c82ba27735682f0b681e6920d1e</data>
    </edge>
    <edge source="SalableResponseError" target="Salable Error Codes">
      <data key="d4">SalableResponseError includes a specific error code from the Salable error codes, which is vital for identifying the type of issue encountered.</data>
      <data key="d5">error identification, error handling</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_570e9764415e5e3f2711ee0725da220d</data>
    </edge>
    <edge source="SalableResponseError" target="Data">
      <data key="d4">SalableResponseError provides data related to the error, making it significant to understand the nature of the error encountered.</data>
      <data key="d5">data relevance, error context</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_570e9764415e5e3f2711ee0725da220d</data>
    </edge>
    <edge source="SalableValidationError" target="Salable Error Codes">
      <data key="d4">SalableValidationError also includes a specific error code, linking it to the categories defined in the Salable error codes table.</data>
      <data key="d5">error identification, validation issue</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_570e9764415e5e3f2711ee0725da220d</data>
    </edge>
    <edge source="SalableValidationError" target="Data">
      <data key="d4">SalableValidationError includes an array of validation errors, aligning with the data field in the error structure.</data>
      <data key="d5">data relevance, validation context</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_570e9764415e5e3f2711ee0725da220d</data>
    </edge>
    <edge source="SalableUnknownError" target="Salable Error Codes">
      <data key="d4">SalableUnknownError involves error codes that are classified under Salable error codes, aiding in error management.</data>
      <data key="d5">error identification, unknown issue</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_570e9764415e5e3f2711ee0725da220d</data>
    </edge>
    <edge source="SalableUnknownError" target="Data">
      <data key="d4">SalableUnknownError features error messages in the data property, important for users to understand the error."+</data>
      <data key="d5">error context, user understanding</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_570e9764415e5e3f2711ee0725da220d</data>
    </edge>
    <edge source="Subscriptions" target="CursorPaginationSubscriptionsResponse">
      <data key="d4">CursorPaginationSubscriptionsResponse facilitates the management of subscriptions, directly supporting the Subscriptions feature.</data>
      <data key="d5">pagination, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac</data>
    </edge>
    <edge source="Subscriptions" target="Cancel a Subscription">
      <data key="d4">Cancel a Subscription function falls under the broader category of Subscriptions feature, handling subscription management operations.</data>
      <data key="d5">feature inclusion, operational context</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00</data>
    </edge>
    <edge source="Subscriptions" target="decrementSubscriptionSeats">
      <data key="d4">decrementSubscriptionSeats is a function that operates within the context of managing subscriptions, specifically to modify seat quantities.</data>
      <data key="d5">functionality, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_0b9474a6f5a5fdb347caada72f379c22</data>
    </edge>
    <edge source="Products" target="Features tab">
      <data key="d4">Products can be configured through the Features tab, where users manage the features of their selected product.</data>
      <data key="d5">configuration, management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_680976a6fc3bada749f88e7d3b2ab7ed</data>
    </edge>
    <edge source="Products" target="Capabilities Tab">
      <data key="d4">The Products section leads to the Capabilities Tab where functionalities for the product can be configured.</data>
      <data key="d5">navigation, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_26398496b4725d2ebb6afc8f67da70c0</data>
    </edge>
    <edge source="Products" target="Delete a Product">
      <data key="d4">Products feature includes the Delete a Product function, illustrating their direct operational relationship in managing product listings.</data>
      <data key="d5">product management, operational relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a8239cb71650f45a73ca9ee6f9267131</data>
    </edge>
    <edge source="Products" target="Plans">
      <data key="d4">Products are created and managed under specific Plans which define the pricing terms for payment offerings.:|:Products can be configured into different Plans, which determine the available features and settings.</data>
      <data key="d5">configuration, product management:|:product management, pricing</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_5fe5d153a20530106ecd1eab48fbc041:|:excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c</data>
    </edge>
    <edge source="Products" target="Pricing Table">
      <data key="d4">Products are linked to the Pricing Table as they provide the items that the table outlines pricing and features for.</data>
      <data key="d5">configuration, sales process</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </edge>
    <edge source="Plans" target="Payment Integration">
      <data key="d4">Payment Integration relies on the definition of Plans to determine billing structure and options available to users.</data>
      <data key="d5">billing, feature dependency</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e92c83ab9e90ff89816fc1841452b9ce</data>
    </edge>
    <edge source="Plans" target="Features">
      <data key="d4">Plans consist of multiple Features, each of which can be managed and adjusted individually.:|:Plans are created based on the defined Features that users want to offer in their products.</data>
      <data key="d5">product configuration, feature definition:|:feature management, configuration</data>
      <data key="d6">15.0</data>
      <data key="d7">excerpt_id_5fe5d153a20530106ecd1eab48fbc041:|:excerpt_id_e92c83ab9e90ff89816fc1841452b9ce</data>
    </edge>
    <edge source="Plans" target="Product">
      <data key="d4">Products are linked to Plans that regulate how customers can access and pay for them.</data>
      <data key="d5">pricing structure, access</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0</data>
    </edge>
    <edge source="Plans" target="Pricing Tables">
      <data key="d4">Plans can be presented and shared through Pricing Tables, facilitating customer access to plan details.</data>
      <data key="d5">presentation, customer access</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a9b4a17e631a0468ea971fdd9105b1d3</data>
    </edge>
    <edge source="Plans" target="Edit Icon">
      <data key="d4">The Edit Icon is used to modify the configuration of the selected Plans and their associated Features.</data>
      <data key="d5">user interface, configuration management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5fe5d153a20530106ecd1eab48fbc041</data>
    </edge>
    <edge source="Plans" target="getPlanCheckoutLink">
      <data key="d4">getPlanCheckoutLink is directly related to Plans, as it retrieves a checkout link for a specific plan, which is part of the Plans feature.</data>
      <data key="d5">functionality, feature connection</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ddc9e4fbd355f7d9a819edc36d148407</data>
    </edge>
    <edge source="UR_SESSION_TOKEN" target="SalableCheckout">
      <data key="d4">The SalableCheckout component requires the UR_SESSION_TOKEN variable to authenticate the session during checkout.</data>
      <data key="d5">authentication, session management</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </edge>
    <edge source="owner" target="subscription">
      <data key="d4">The owner is tied to the subscription as it designates which entity will hold the subscription rights.</data>
      <data key="d5">ownership, subscription management</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507</data>
    </edge>
    <edge source="owner" target="member">
      <data key="d4">The member identifier is deprecated and replaced by owner, indicating a transition in variable usage.:|:The owner variable is recommended for use over the deprecated member variable, creating a relationship where they specify roles in subscription management.</data>
      <data key="d5">role assignment, variable dependency:|:transition, deprecation</data>
      <data key="d6">24.0</data>
      <data key="d7">excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507:|:excerpt_id_ef01641492d489ead5f4ed24b22dc924</data>
    </edge>
    <edge source="owner" target="UpdateSubscriptionInput">
      <data key="d4">owner is an optional variable within the UpdateSubscriptionInput configuration that specifies the ID of the subscription owner.</data>
      <data key="d5">optional parameter, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_d979fc2428d484e09ae3b62b942d5968</data>
    </edge>
    <edge source="owner" target="Salable Pricing Table Web Component">
      <data key="d4">owner is integral to the Salable Pricing Table Web Component as it defines who controls the instance of the component.</data>
      <data key="d5">ownership, control</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="owner" target="GetPlanCheckoutOptions">
      <data key="d4">owner is specified in GetPlanCheckoutOptions as the entity who will hold the subscription, possibly defaulting to the member.</data>
      <data key="d5">configuration, ownership</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </edge>
    <edge source="owner" target="SalablePricingTable">
      <data key="d4">SalablePricingTable includes owner to attribute ownership for the pricing table resources.:|:The SalablePricingTable component is associated with an owner, determining the access and control over the pricing table.</data>
      <data key="d5">ownership, configuration:|:owner identification, resource management</data>
      <data key="d6">22.0</data>
      <data key="d7">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_76f2bf224d3111fcdb908c47e3e64890</data>
    </edge>
    <edge source="SalableCheckout" target="SalableCheckoutDemo">
      <data key="d4">SalableCheckoutDemo demonstrates the use of the SalableCheckout component and passes the necessary variables to it.</data>
      <data key="d5">component usage, demonstration</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </edge>
    <edge source="SalableCheckout" target="dynamic">
      <data key="d4">The dynamic function is used to import SalableCheckout dynamically, optimizing loading performance when rendering the component.</data>
      <data key="d5">dynamic import, optimization</data>
      <data key="d6">12.0</data>
      <data key="d7">excerpt_id_704b4768f1fa2d061a279b1a131ab19d</data>
    </edge>
    <edge source="Plan Name" target="Functionality">
      <data key="d4">The Plan Name is used to check the validity of associated functionalities within the application context.</data>
      <data key="d5">validation, licensing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </edge>
    <edge source="Plan Name" target="Add Plan">
      <data key="d4">Adding a plan requires the input of the Plan Name variable to identify the plan in the dashboard.</data>
      <data key="d5">data input, functionality</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </edge>
    <edge source="Functionality" target="Bespoke Plan">
      <data key="d4">Specific functionalities can be tied to a Bespoke Plan allowing for unique customer experiences.</data>
      <data key="d5">customization, user experience</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </edge>
    <edge source="Functionality" target="Proprietary Functionality">
      <data key="d4">Functionality can be proprietary, indicating it is exclusive to a specific plan and not available elsewhere.</data>
      <data key="d5">exclusivity, feature differentiation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </edge>
    <edge source="Salable Way" target="Bespoke Plan">
      <data key="d4">The Salable Way provides guidelines on how to approach creating bespoke plans and their functionalities.</data>
      <data key="d5">best practices, guidance</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1fa7615b97ee3943e1dedb880f5e701c</data>
    </edge>
    <edge source="SalableCancellationButton" target="Svelte">
      <data key="d4">The SalableCancellationButton is demonstrated in the Svelte framework, showing its compatibility with this front-end technology.</data>
      <data key="d5">compatibility, usage</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </edge>
    <edge source="SalableCancellationButton" target="React">
      <data key="d4">The SalableCancellationButton is showcased in React code, illustrating its integration with React components.</data>
      <data key="d5">compatibility, usage</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </edge>
    <edge source="SalableCancellationButton" target="Next.js Pages Router">
      <data key="d4">The SalableCancellationButton is used within Next.js Pages Router structure, demonstrating its adaptability to various frameworks.</data>
      <data key="d5">compatibility, usage</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </edge>
    <edge source="SalableCancellationButton" target="Next.js App Router">
      <data key="d4">The SalableCancellationButton is utilized in Next.js App Router, indicating its functionality within this context.</data>
      <data key="d5">compatibility, usage</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_192d34c930ce13b033dea301e1b00bfe</data>
    </edge>
    <edge source="SalableCancellationButton" target="ableCancellationButtonDemo">
      <data key="d4">ableCancellationButtonDemo function returns the SalableCancellationButton, indicating they are directly related as the function's output.</data>
      <data key="d5">function output, API usage</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_4a856870c319acb269c556884ddef7f2</data>
    </edge>
    <edge source="SalableCancellationButton" target="sessionToken">
      <data key="d4">SalableCancellationButton requires sessionToken for its operation, establishing a direct dependency between them.</data>
      <data key="d5">API operation, dependency</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_4a856870c319acb269c556884ddef7f2</data>
    </edge>
    <edge source="EXAMPLE_OWNER" target="EXAMPLE_GRANTEE_ID">
      <data key="d4">EXAMPLE_OWNER and EXAMPLE_GRANTEE_ID are related as they both define roles in a permission setting context.".</data>
      <data key="d5">roles, permission system</data>
      <data key="d6">12.0</data>
      <data key="d7">excerpt_id_fbdb809c0bb44640a84ab10e32221e37</data>
    </edge>
    <edge source="EXAMPLE_OWNER" target="successUrl">
      <data key="d4">EXAMPLE_OWNER may require successUrl for directing the result of operations associated with that owner.".</data>
      <data key="d5">operation result, redirection</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_fbdb809c0bb44640a84ab10e32221e37</data>
    </edge>
    <edge source="successUrl" target="GBP">
      <data key="d4">successUrl is relevant in transactions involving GBP as it may indicate a financial transaction completion.".</data>
      <data key="d5">financial transaction, completion</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_fbdb809c0bb44640a84ab10e32221e37</data>
    </edge>
    <edge source="successUrl" target="payment">
      <data key="d4">The successUrl is linked to payment as it is the destination for users following a successful payment completion.</data>
      <data key="d5">payment process, user direction</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507</data>
    </edge>
    <edge source="successUrl" target="checkoutLink">
      <data key="d4">The checkoutLink utilizes successUrl to redirect users after a successful transaction, indicating a connection to the checkout process outcomes.</data>
      <data key="d5">redirection, transaction outcome</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b0d99f3af716852d9f2a0d8e9d551113</data>
    </edge>
    <edge source="successUrl" target="GetPlanCheckoutOptions">
      <data key="d4">The successUrl is included in GetPlanCheckoutOptions to provide a redirect after successful checkout, enhancing user navigation.:|:successUrl is part of the GetPlanCheckoutOptions and specifies the action post-purchase success.</data>
      <data key="d5">user experience, options:|:configuration, flow management</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_ec8853c4684794f440831d669649c3b8:|:excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </edge>
    <edge source="successUrl" target="getCheckoutLink">
      <data key="d4">The successUrl parameter is utilized by the getCheckoutLink function to define the redirect location after a successful payment.</data>
      <data key="d5">transaction success, redirect</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d9e1d76334e0264800ec30320373ba71</data>
    </edge>
    <edge source="successUrl" target="salable.plans.getCheckoutLink">
      <data key="d4">salable.plans.getCheckoutLink uses the successUrl variable to redirect users upon successful purchase completion.</data>
      <data key="d5">redirect, function parameters</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </edge>
    <edge source="member" target="createManyAdHocLicenseParams">
      <data key="d4">member is another required field in createManyAdHocLicenseParams that designates the license manager.</data>
      <data key="d5">required parameter, license management</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </edge>
    <edge source="member" target="salable.plans.getCheckoutLink">
      <data key="d4">salable.plans.getCheckoutLink incorporates member variable to handle team-based user access when generating a checkout link.</data>
      <data key="d5">access control, user management</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </edge>
    <edge source="member" target="GetPlanCheckoutOptions">
      <data key="d4">member is a required parameter within GetPlanCheckoutOptions, indicating who is purchasing the license.</data>
      <data key="d5">configuration, transaction flow</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </edge>
    <edge source="member" target="LicenseCreateRequest">
      <data key="d4">member is a variable used in LicenseCreateRequest to specify the member associated with the license being created.:|:LicenseCreateRequest requires the member variable to identify who will manage the created license directly.</data>
      <data key="d5">requirement, license management:|:association, license parameters</data>
      <data key="d6">15.0</data>
      <data key="d7">excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </edge>
    <edge source="planUuid" target="subscription">
      <data key="d4">The planUuid is related to subscription in that it uniquely identifies the plan associated with a subscription.</data>
      <data key="d5">plan identification, subscription</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507</data>
    </edge>
    <edge source="planUuid" target="createManyAdHocLicenseParams">
      <data key="d4">planUuid is a required field within createManyAdHocLicenseParams necessary for license creation.</data>
      <data key="d5">required parameter, license creation</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </edge>
    <edge source="planUuid" target="Plan view">
      <data key="d4">The planUuid is derived from the Plan view in the Salable dashboard, linking them directly.</data>
      <data key="d5">source, reference</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </edge>
    <edge source="planUuid" target="Get Capabilities">
      <data key="d4">Get Capabilities requires planUuid as a parameter to identify the specific plan for which capabilities are to be returned.</data>
      <data key="d5">parameter requirement, function execution</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_af600649bc560ccce1729a149fdba460</data>
    </edge>
    <edge source="planUuid" target="Get Currencies">
      <data key="d4">The variable planUuid is required as a parameter for the Get Currencies function, linking the two intimately.</data>
      <data key="d5">parameter requirement, function dependency</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d</data>
    </edge>
    <edge source="planUuid" target="Get One Plan">
      <data key="d4">planUuid is a required variable necessary for the execution of the Get One Plan function.</data>
      <data key="d5">required parameter, function execution</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b</data>
    </edge>
    <edge source="planUuid" target="checkoutLink">
      <data key="d4">The checkoutLink is generated specifically using the planUuid as a key input, directly connecting these two variables.</data>
      <data key="d5">dependency, input-output</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ec8853c4684794f440831d669649c3b8</data>
    </edge>
    <edge source="planUuid" target="getFeatures">
      <data key="d4">The getFeatures function requires the planUuid parameter to identify which plan's features to retrieve.</data>
      <data key="d5">parameter necessity, data retrieval</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0</data>
    </edge>
    <edge source="planUuid" target="UpdateLicenseUsageOptions">
      <data key="d4">planUuid also serves as a necessary parameter in UpdateLicenseUsageOptions for specifying the related plan of the license.</data>
      <data key="d5">parameter dependency, configuration requirement</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </edge>
    <edge source="planUuid" target="CurrentUsageOptions">
      <data key="d4">planUuid is another mandatory field within CurrentUsageOptions necessary for the function to operate.</data>
      <data key="d5">parameter requirement, function configuration</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </edge>
    <edge source="planUuid" target="options">
      <data key="d4">The options variable must include planUuid to specify the new plan for the subscription change.</data>
      <data key="d5">requirement, dependent variables</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a</data>
    </edge>
    <edge source="planUuid" target="changeSubscriptionPlan">
      <data key="d4">planUuid is required in the changeSubscriptionPlan function to identify the new subscription plan.</data>
      <data key="d5">API usage, configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2</data>
    </edge>
    <edge source="planUuid" target="Change Plan Endpoint">
      <data key="d4">The planUuid variable is used by the Change Plan Endpoint to specify which plan a subscription should be changed to.</data>
      <data key="d5">identifier, API functionality</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </edge>
    <edge source="planUuid" target="Subscription">
      <data key="d4">planUuid links the Subscription to a specific plan, crucial for determining subscription details.</data>
      <data key="d5">plan association, configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="planUuid" target="LicenseCreateRequest">
      <data key="d4">planUuid is a required variable in LicenseCreateRequest, which ensures that each license created is associated with a specific plan.:|:LicenseCreateRequest necessitates the planUuid variable to associate the license with a specific plan required for its function.</data>
      <data key="d5">identifier, license management:|:requirement, API linkage</data>
      <data key="d6">17.0</data>
      <data key="d7">excerpt_id_a2081f1929b982759b423b9e6f1d90b7:|:excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </edge>
    <edge source="planUuid" target="LicenseUsageRecord">
      <data key="d4">planUuid is associated with LicenseUsageRecord to link the record to a specific license plan.</data>
      <data key="d5">associative identification, plan tracking</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </edge>
    <edge source="planUuid" target="plans">
      <data key="d4">The plans configuration is directly linked to each plan through the unique identifier planUuid, ensuring accurate association."+</data>
      <data key="d5">association, identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </edge>
    <edge source="planUuid" target="name">
      <data key="d4">Each plan is identifiable through planUuid, which ensures the corresponding name is associated with the UUID."+</data>
      <data key="d5">identifier, naming</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </edge>
    <edge source="planUuid" target="capabilities">
      <data key="d4">capabilities includes planUuid as part of its structure, linking capabilities to specific plans.</data>
      <data key="d5">inclusion, data structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </edge>
    <edge source="sessionToken" target="checkout">
      <data key="d4">The sessionToken is necessary for identifying users during the checkout process, linking it to the transaction.</data>
      <data key="d5">user identification, transaction</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507</data>
    </edge>
    <edge source="sessionToken" target="SalableInvoices">
      <data key="d4">SalableInvoices API requires sessionToken to authenticate user sessions and authorize the request.:|:The SalableInvoices component needs the sessionToken variable for secure rendering and access to invoice data.</data>
      <data key="d5">authentication, API requirement:|:authentication, component requirements</data>
      <data key="d6">29.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542</data>
    </edge>
    <edge source="sessionToken" target="SalablePricingTable">
      <data key="d4">The SalablePricingTable requires a sessionToken to authenticate and authorize the user session during transactions.:|:The SalablePricingTable component relies on the sessionToken to authenticate the user for displaying the pricing table.</data>
      <data key="d5">authentication, session management:|:authentication, dependency</data>
      <data key="d6">32.0</data>
      <data key="d7">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </edge>
    <edge source="sessionToken" target="api.salable.app">
      <data key="d4">api.salable.app uses sessionToken for user authentication via a token provided in the Authorization header.</data>
      <data key="d5">authentication, security</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="sessionToken" target="globalGranteeId">
      <data key="d4">The sessionToken is essential for the session, which must be associated with a valid globalGranteeId for API operations.</data>
      <data key="d5">dependency, API usage</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_ef01641492d489ead5f4ed24b22dc924</data>
    </edge>
    <edge source="sessionToken" target="CreateSession">
      <data key="d4">The CreateSession function generates a sessionToken that is utilized for interacting with web components in future requests.</data>
      <data key="d5">session management, token generation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </edge>
    <edge source="email" target="checkout">
      <data key="d4">The email variable is directly related to the checkout function, as it is utilized to enhance the user's checkout experience by skipping certain steps.</data>
      <data key="d5">user experience, process efficiency</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_a281d51fe193582e940b069350512acc</data>
    </edge>
    <edge source="email" target="undefined">
      <data key="d4">The undefined configuration indicates the optional nature of the email variable in the checkout process, conveying that it may or may not be required.</data>
      <data key="d5">optional configuration, variable nature</data>
      <data key="d6">12.0</data>
      <data key="d7">excerpt_id_a281d51fe193582e940b069350512acc</data>
    </edge>
    <edge source="license" target="Create License">
      <data key="d4">The variable license is the result of executing the Create License function indicating its intended use.</data>
      <data key="d5">result, operation</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </edge>
    <edge source="license" target="your-license-uuid">
      <data key="d4">The your-license-uuid serves as a specific reference to a license in the update operation examples.</data>
      <data key="d5">example usage, configuration reference</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_df8090e7aed9180a3275364203d78648</data>
    </edge>
    <edge source="subscription" target="quantity">
      <data key="d4">Quantity is a parameter that may directly be associated with a particular subscription, indicating how many items are tied to it.</data>
      <data key="d5">count relation, subscription context</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </edge>
    <edge source="subscription" target="subscription_item">
      <data key="d4">Subscription_item represents an individual component within a subscription, highlighting the hierarchical relationship between them.</data>
      <data key="d5">itemization, subscription context</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </edge>
    <edge source="subscription" target="subscription_details">
      <data key="d4">The subscription identifier is closely related to the subscription details which provide additional information about the subscription.</data>
      <data key="d5">identification, related data</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </edge>
    <edge source="Feature" target="Plan">
      <data key="d4">Features are part of a Plan and they toggle specific functionalities available to Grantees.</data>
      <data key="d5">functional association, grouping</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_8949faee968ed6bf19c979f4b005a699</data>
    </edge>
    <edge source="Feature" target="Add New Feature">
      <data key="d4">The Add New Feature function is used to define new features that are specific benefits offered by a product.</data>
      <data key="d5">feature definition, product benefits</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_680976a6fc3bada749f88e7d3b2ab7ed</data>
    </edge>
    <edge source="Feature" target="OrganisationPaymentIntegration">
      <data key="d4">Feature likely supports the functionality of OrganisationPaymentIntegration by providing necessary attributes for payment processing.</data>
      <data key="d5">functional support, integration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_292ab6a210a5d658e3c94cd9b3e02c1a</data>
    </edge>
    <edge source="Feature" target="Currency">
      <data key="d4">Feature may utilize Currency definitions to handle currency types effectively in its attributes and operations.</data>
      <data key="d5">currency handling, attribute utilization</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_292ab6a210a5d658e3c94cd9b3e02c1a</data>
    </edge>
    <edge source="Feature" target="PlanFeature">
      <data key="d4">"PlanFeature includes a reference to Feature, signifying that each plan feature is associated with a specific functionality.")</data>
      <data key="d5">configuration linkage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_4ce077a690e06fe23daada90c307e546</data>
    </edge>
    <edge source="Feature" target="EnumValue">
      <data key="d4">"EnumValue contains a reference to a Feature, indicating the categorization of feature values within the configuration.")</data>
      <data key="d5">categorization</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_4ce077a690e06fe23daada90c307e546</data>
    </edge>
    <edge source="Feature" target="Get Product Features">
      <data key="d4">The Get Product Features function returns data structured according to the Feature schema.</data>
      <data key="d5">data structure, output format</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23</data>
    </edge>
    <edge source="Feature" target="ProductPricingTable">
      <data key="d4">ProductPricingTable schema references the Feature schema, indicating a connection in the data representation of product details.</data>
      <data key="d5">data modeling, schema relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23</data>
    </edge>
    <edge source="Capability" target="Plan">
      <data key="d4">Capabilities are included in Plans, providing fixed functionalities to Grantees within their license duration.</data>
      <data key="d5">functional association, grouping</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8949faee968ed6bf19c979f4b005a699</data>
    </edge>
    <edge source="Capability" target="description">
      <data key="d4">The description of a Capability provides detailed information on its features and functionalities, aiding user understanding.</data>
      <data key="d5">feature overview, clarity</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_a0fec7d8127f726de8c00070d4b3778f</data>
    </edge>
    <edge source="Capability" target="Get Product Capabilities">
      <data key="d4">Get Product Capabilities returns an array of Capability objects which describe the functionalities of the specified product.</data>
      <data key="d5">function output, data retrieval</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </edge>
    <edge source="Plan" target="Plan Capability Object">
      <data key="d4">Plan serves as a feature that is described through the capabilities outlined in the Plan Capability Object.</data>
      <data key="d5">feature description, API integration</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_af600649bc560ccce1729a149fdba460</data>
    </edge>
    <edge source="Plan" target="description">
      <data key="d4">The description of a Plan elaborates on its features, allowing stakeholders to understand its intended purpose and application.</data>
      <data key="d5">feature overview, clarity</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_a0fec7d8127f726de8c00070d4b3778f</data>
    </edge>
    <edge source="Plan" target="LicenseByPurchaser">
      <data key="d4">LicenseByPurchaser is associated with a Plan, which helps define the licensing tier the purchaser is on.</data>
      <data key="d5">plan association, tier definition</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9516a99c40383674c2274db86035bea6</data>
    </edge>
    <edge source="Plan" target="Id">
      <data key="d4">The Plan is identified uniquely by the Id, establishing a direct correlation between the two entities.</data>
      <data key="d5">identification, linkage</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </edge>
    <edge source="Plan" target="Amount">
      <data key="d4">The Amount variable quantifies the financial aspect of the Plan, indicating how much is associated with this plan.</data>
      <data key="d5">financial detail, operational aspect</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </edge>
    <edge source="Plan" target="Currency">
      <data key="d4">Plan's pricing details are linked to the Currency variable, indicating how transactions are processed in a specific monetary unit.</data>
      <data key="d5">financial context, operational aspect</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </edge>
    <edge source="Plan" target="Billing Scheme">
      <data key="d4">Billing Scheme defines how the plan's financial charges are structured, linking pricing to operational methods.</data>
      <data key="d5">charge structure, operational aspect</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </edge>
    <edge source="Plan" target="Period">
      <data key="d4">The Period is related to the Plan as it sets the timeframe during which the Plan is active or applied.</data>
      <data key="d5">timeframe, operational relevance</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_6e08170f25211b887436970d3fc7ed73</data>
    </edge>
    <edge source="Plan" target="Product">
      <data key="d4">Product is linked to Plan as it defines the various plans available for each product, conveying options to users.</data>
      <data key="d5">relationship between entities, options available</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </edge>
    <edge source="Plan" target="Get a Plan">
      <data key="d4">The Get a Plan API endpoint retrieves details about a Plan, illustrating a direct interaction between the API and the data entity.</data>
      <data key="d5">data retrieval, API interaction</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Plan" target="getPlanFeatures">
      <data key="d4">getPlanFeatures is a function that operates on the Plan configuration to retrieve its features.</data>
      <data key="d5">functionality, operation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8afa492aad2baaf4c1b74f1b88500086</data>
    </edge>
    <edge source="Plan" target="getPlanCurrencies">
      <data key="d4">getPlanCurrencies is a function that operates on the Plan configuration to retrieve its currencies.</data>
      <data key="d5">functionality, operation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8afa492aad2baaf4c1b74f1b88500086</data>
    </edge>
    <edge source="Subscription" target="Payment Integration">
      <data key="d4">Payment Integration allows for the collection of payments related to the Subscription model.</data>
      <data key="d5">payment processing, financial transaction</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_8949faee968ed6bf19c979f4b005a699</data>
    </edge>
    <edge source="Subscription" target="productUuid">
      <data key="d4">productUuid is a crucial property within the Subscription configuration that associates it with a specific product.</data>
      <data key="d5">product association, subscription management</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="Subscription" target="organisation">
      <data key="d4">organisation ties the Subscription configuration to a specific organizational entity.</data>
      <data key="d5">organizational connection, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="Subscription" target="paymentIntegrationSubscriptionId">
      <data key="d4">paymentIntegrationSubscriptionId connects the Subscription to the corresponding payment system integration.</data>
      <data key="d5">payment link, subscription management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="Subscription" target="quantity">
      <data key="d4">quantity is a property of Subscription that defines how many units are included in the subscription.</data>
      <data key="d5">quantity specification, subscription detail</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="Subscription" target="expiryDate">
      <data key="d4">expiryDate indicates when the Subscription will expire, crucial for management actions.</data>
      <data key="d5">expiry management, timing</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="Subscription" target="createdAt">
      <data key="d4">createdAt tracks when the Subscription was created, providing temporal context.</data>
      <data key="d5">creation tracking, temporal context</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="Subscription" target="updatedAt">
      <data key="d4">updatedAt records the latest update, essential for maintaining current information.</data>
      <data key="d5">update tracking, information management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="Subscription" target="cancelAtPeriodEnd">
      <data key="d4">cancelAtPeriodEnd signifies whether the subscription will end at the conclusion of the current period, impacting future management.</data>
      <data key="d5">cancelation management, future action</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_41813e2a0a63e0ce47cd087b95c18944</data>
    </edge>
    <edge source="Subscription" target="LicenseByPurchaser">
      <data key="d4">LicenseByPurchaser can link to a Subscription, indicating the current status of a user's subscription for the product.</data>
      <data key="d5">subscription status, user management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9516a99c40383674c2274db86035bea6</data>
    </edge>
    <edge source="Subscription" target="getSubscriptionByUuid">
      <data key="d4">The schema 'Subscription' defines the structure of the data returned by 'getSubscriptionByUuid', linking the function to its data model.</data>
      <data key="d5">data modeling, schema definition</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </edge>
    <edge source="Subscription" target="IncrementSubscriptionSeats">
      <data key="d4">The Subscription API provides the mechanism through which the IncrementSubscriptionSeats function operates, making it possible to adjust seat quantities.</data>
      <data key="d5">API function relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </edge>
    <edge source="Subscription" target="DecrementSubscriptionSeats">
      <data key="d4">The Subscription API is also utilized for the DecrementSubscriptionSeats function, allowing for seat reduction as needed.</data>
      <data key="d5">API function relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </edge>
    <edge source="Subscription" target="VersionHeader">
      <data key="d4">VersionHeader is referenced within the Subscription API documentation to ensure correct versioning for API calls.</data>
      <data key="d5">API versioning</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </edge>
    <edge source="Subscription" target="SubscriptionUuidPathParam">
      <data key="d4">SubscriptionUuidPathParam is a crucial parameter for identifying the subscription in API requests and is essential for the functions to operate correctly.</data>
      <data key="d5">API identification</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </edge>
    <edge source="Payment Integration" target="Salable Dashboard">
      <data key="d4">Users access the Salable Dashboard to configure the Payment Integration feature for their products.</data>
      <data key="d5">configuration, user interface</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e92c83ab9e90ff89816fc1841452b9ce</data>
    </edge>
    <edge source="Payment Integration" target="Product">
      <data key="d4">A Product may require a Payment Integration, especially if it is marked as a Paid Product, to handle transactions.</data>
      <data key="d5">payment processing, integration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0</data>
    </edge>
    <edge source="Payment Integration" target="Setup">
      <data key="d4">The Setup function includes completing the Payment Integration as a vital step for operational readiness.</data>
      <data key="d5">establishing operations, essential steps</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </edge>
    <edge source="Payment Integration" target="Live Mode">
      <data key="d4">Payment Integration must be configured in Live Mode to successfully transition products from Test Mode.</data>
      <data key="d5">transaction readiness, requirement</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_03a1e0b7542d58580d2e6e791794e576</data>
    </edge>
    <edge source="Invoices Web Component" target="Example Code">
      <data key="d4">Example Code provides practical examples of how to use the Invoices Web Component, linking the demonstration to the feature.</data>
      <data key="d5">implementation, demonstration</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_761b7e7d2e80ea5581133a171250a211</data>
    </edge>
    <edge source="Subscription UUID" target="Creating a Session Token">
      <data key="d4">The Subscription UUID is used in the process of Creating a Session Token, linking this variable to the function for secure session management.</data>
      <data key="d5">security, session management</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_761b7e7d2e80ea5581133a171250a211</data>
    </edge>
    <edge source="Status" target="Receipt Number">
      <data key="d4">Status gives an indication of whether a transaction is completed, which is reflected on the Receipt Number used for tracking payments.</data>
      <data key="d5">transaction tracking, completion status</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </edge>
    <edge source="Status" target="Feature Description">
      <data key="d4">Status is included in the Feature Description to reflect the current state or lifecycle of the feature.</data>
      <data key="d5">lifecycle management, feature state</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Data" target="Id">
      <data key="d4">Data contains multiple Id variables, linking the collection of data items to their unique identifiers.</data>
      <data key="d5">data structure, relationships</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </edge>
    <edge source="Data" target="Amount">
      <data key="d4">Data includes an Amount variable for each item, establishing a relationship between each data entry and its corresponding numeric value.</data>
      <data key="d5">data structure, relationships</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </edge>
    <edge source="Data" target="Currency">
      <data key="d4">Data is associated with a Currency variable that specifies what type of currency is used for the amounts listed.</data>
      <data key="d5">data structure, relationships</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </edge>
    <edge source="Data" target="Description">
      <data key="d4">Data includes a Description variable that provides context for each item, connecting details to each entry.</data>
      <data key="d5">data structure, relationships</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </edge>
    <edge source="Data" target="Livemode">
      <data key="d4">Data has a Livemode variable that indicates the current operational status of the data, linked by context.</data>
      <data key="d5">data structure, relationships</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </edge>
    <edge source="Data" target="Discountable">
      <data key="d4">Data indicates whether each item is Discountable, establishing a relationship with pricing strategies.</data>
      <data key="d5">pricing structure, relationships</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </edge>
    <edge source="Data" target="Metadata">
      <data key="d4">Data is associated with Metadata as an object that may include additional information about each data entry.</data>
      <data key="d5">data structure, relationships</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </edge>
    <edge source="Data" target="Period">
      <data key="d4">Data can include a Period object that specifies time-related properties relevant to the entries.</data>
      <data key="d5">data structure, relationships</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f</data>
    </edge>
    <edge source="subscription-uuid" target="salable-invoices">
      <data key="d4">salable-invoices uses the subscription-uuid variable to identify the user's subscription and manage access to the relevant invoices.</data>
      <data key="d5">subscription management, data retrieval</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_414b247030d869939909cae61904cbaf</data>
    </edge>
    <edge source="subscription-uuid" target="subscriptionUuid">
      <data key="d4">subscriptionUuid variable links to the subscription-uuid configuration attribute, providing the required subscription ID for invoice retrieval.</data>
      <data key="d5">data identification, variable-attribute</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542</data>
    </edge>
    <edge source="salable-invoices" target="limit">
      <data key="d4">limit is a configuration setting that affects how many invoices the salable-invoices API will return to the user.</data>
      <data key="d5">configuration impact, data constraints</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_414b247030d869939909cae61904cbaf</data>
    </edge>
    <edge source="salable-invoices" target="@salable/web-components/loader">
      <data key="d4">@salable/web-components/loader is responsible for loading the necessary components that enable the functionality of salable-invoices.</data>
      <data key="d5">component loading, functionality</data>
      <data key="d6">20.0</data>
      <data key="d7">excerpt_id_414b247030d869939909cae61904cbaf</data>
    </edge>
    <edge source="limit" target="SalableInvoices">
      <data key="d4">The limit property for the SalableInvoices component controls how many invoices are displayed, directly impacting its functionality and user experience.:|:The limit parameter is used in the SalableInvoices API to control the number of invoice records returned in each API call.</data>
      <data key="d5">pagination, API functionality:|:display control, functionality</data>
      <data key="d6">32.0</data>
      <data key="d7">excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542:|:excerpt_id_da0a09d7dfdef3227e5234d284bf95ca</data>
    </edge>
    <edge source="limit" target="limit">
      <data key="d4">The limit variable corresponds to the limit configuration attribute, determining how many records are to be displayed per page.</data>
      <data key="d5">parameter setting, configuration consistency</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542</data>
    </edge>
    <edge source="API Key" target="Checkout Link">
      <data key="d4">The Checkout Link function requires a valid API Key to authenticate and facilitate transaction processing.</data>
      <data key="d5">transaction processing, authentication</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e92c83ab9e90ff89816fc1841452b9ce</data>
    </edge>
    <edge source="API Key" target="API Documentation">
      <data key="d4">The API Key is explained in the API Documentation as a necessary component for authenticating API requests.</data>
      <data key="d5">authentication, requirements</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c</data>
    </edge>
    <edge source="API Key" target="Copy Icon">
      <data key="d4">Once generated, the API Key can be copied using the Copy Icon, enabling users to easily utilize it in their requests.</data>
      <data key="d5">ease of access, usability</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </edge>
    <edge source="API Key" target="Setup">
      <data key="d4">The Setup function requires an API Key to proceed with the initialization process.</data>
      <data key="d5">initialization, access requirement</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_7f2c8e47d35bb9218308b14f91edc663</data>
    </edge>
    <edge source="API Key" target="Authentication">
      <data key="d4">Authentication relies on the API Key, which is essential for authorizing requests to the Salable API.</data>
      <data key="d5">security, authorization</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1447c9ad088ee587d295240cee723646</data>
    </edge>
    <edge source="Salable Dashboard" target="API Method">
      <data key="d4">The API Method allows programmatic access to suspended licenses, providing an alternative to the Salable Dashboard for specific actions.</data>
      <data key="d5">programmatic access, alternative methods</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_9a33a99f7264e4cca3eb424f6cfded53</data>
    </edge>
    <edge source="Checkout Link" target="Plan Capabilities">
      <data key="d4">The Checkout Link is generated in the process that involves accessing plan capabilities, indicating a transactional relationship with plans.</data>
      <data key="d5">transaction, process relationship</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </edge>
    <edge source="Features" target="Product">
      <data key="d4">Products consist of multiple Features that define their functionality and customer appeal.</data>
      <data key="d5">functionality, offering</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0</data>
    </edge>
    <edge source="Features" target="Value Type">
      <data key="d4">Each Feature has a Value Type that determines the configuration options available for that Feature.</data>
      <data key="d5">configuration options, feature classification</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_5fe5d153a20530106ecd1eab48fbc041</data>
    </edge>
    <edge source="Features" target="Create Feature">
      <data key="d4">Creating a feature involves utilizing the Features interface to input all necessary parameters and settings.</data>
      <data key="d5">feature creation, interface interaction</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </edge>
    <edge source="Features" target="Feature Description">
      <data key="d4">Feature Description provides essential context for each Feature, helping users understand what each feature does when displayed in tooltips.</data>
      <data key="d5">contextual information, usability</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </edge>
    <edge source="Features" target="Visibility">
      <data key="d4">The Visibility setting determines how Features are marketed, affecting their public or private status in promotional materials.</data>
      <data key="d5">marketing strategy, accessibility</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </edge>
    <edge source="Features" target="ExpandProductQueryParams">
      <data key="d4">ExpandProductQueryParams allows the expansion of features related to products, indicating a direct relationship between query parameters and features.</data>
      <data key="d5">query expansion, feature relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </edge>
    <edge source="Features" target="ExpandGetAllSubscriptionQueryParams">
      <data key="d4">ExpandGetAllSubscriptionQueryParams enables users to expand fields related to features when fetching all subscriptions, indicating an operational link.</data>
      <data key="d5">query expansion, feature linkage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </edge>
    <edge source="SalableInvoices" target="YOUR_SESSION_TOKEN">
      <data key="d4">The SalableInvoices component uses YOUR_SESSION_TOKEN as a prop for user authentication, linking the component to user sessions.</data>
      <data key="d5">authentication, component props</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_da0a09d7dfdef3227e5234d284bf95ca</data>
    </edge>
    <edge source="SalableInvoices" target="YOUR_SUBSCRIPTION_UUID">
      <data key="d4">The SalableInvoices component uses YOUR_SUBSCRIPTION_UUID as a prop ensuring the appropriate subscription data is fetched for the user.</data>
      <data key="d5">subscription, component props</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_da0a09d7dfdef3227e5234d284bf95ca</data>
    </edge>
    <edge source="SalableInvoices" target="subscriptionUuid">
      <data key="d4">SalableInvoices API requires subscriptionUuid to fetch the specific invoices associated with that subscription.:|:SalableInvoices uses the subscriptionUuid variable to determine which subscription's invoices to display.</data>
      <data key="d5">data identification, component requirements:|:data retrieval, API requirement</data>
      <data key="d6">29.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da:|:excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542</data>
    </edge>
    <edge source="SalableInvoices" target="Svelte Demo">
      <data key="d4">Svelte Demo is a practical example demonstrating the integration of SalableInvoices in Svelte applications.</data>
      <data key="d5">integration example, practical use</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </edge>
    <edge source="SalableInvoices" target="React/Next.js Demo">
      <data key="d4">React/Next.js Demo provides an illustration of how to render SalableInvoices within React environments.</data>
      <data key="d5">integration example, practical use</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </edge>
    <edge source="SalableInvoices" target="HTML/JavaScript Demo">
      <data key="d4">HTML/JavaScript Demo shows how SalableInvoices can be utilized in standard web development setups.</data>
      <data key="d5">integration example, practical use</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </edge>
    <edge source="Salable Web Component Library" target="Web Components">
      <data key="d4">The Salable Web Component Library consists of various Web Components that assist in SaaS product development and integration.</data>
      <data key="d5">component library, integration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </edge>
    <edge source="Web Components" target="React Wrappers">
      <data key="d4">React Wrappers are specifically designed to work with Web Components, enhancing their usability for React applications.</data>
      <data key="d5">framework integration, compatibility</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </edge>
    <edge source="Web Components" target="Pricing Table">
      <data key="d4">The Pricing Table is a specific instance of Web Components, part of the suite provided in the Salable Web Component Library.</data>
      <data key="d5">component usage, functionality</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </edge>
    <edge source="Web Components" target="Invoices">
      <data key="d4">Invoices component is categorized under Web Components, providing specific features for managing subscription billing.</data>
      <data key="d5">component usage, functionality</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_06e17d56e4842e103630578061ddccad</data>
    </edge>
    <edge source="Pricing Table" target="Tabs Component">
      <data key="d4">The Tabs Component is used in the documentation to display examples related to the Pricing Table, enhancing user understanding.</data>
      <data key="d5">user interface, documentation</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_fbb88f35eb8a656df79436055d95db83</data>
    </edge>
    <edge source="Pricing Table" target="Default Pricing Table">
      <data key="d4">The Default Pricing Table serves as a specific implementation of the broader Pricing Table feature, displaying all plans of certain types.</data>
      <data key="d5">feature specification, implementation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e6d45aa0665fc0645841e246e19a8aee</data>
    </edge>
    <edge source="Pricing Table" target="Preview in Browser">
      <data key="d4">Preview in Browser function is directly used to view the Pricing Table before it is embedded on a webpage or app.</data>
      <data key="d5">user interaction, preview</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </edge>
    <edge source="Pricing Table" target="Copy React Code">
      <data key="d4">Copy React Code function is utilized to copy the code for the Pricing Table implemented in React format.</data>
      <data key="d5">implementation, code copying</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </edge>
    <edge source="Pricing Table" target="Copy Vanilla JS Code">
      <data key="d4">Copy Vanilla JS Code function serves to copy the Vanilla JS version of the Pricing Table for integration into applications.</data>
      <data key="d5">implementation, code copying</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </edge>
    <edge source="Pricing Table" target="Actions">
      <data key="d4">Actions configuration is about user-driven options available for managing and implementing the Pricing Table feature.</data>
      <data key="d5">user interaction, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1c89a3caf8d5091ef21a456f714763dc</data>
    </edge>
    <edge source="Pricing Table" target="productUuid">
      <data key="d4">productUuid is directly used as a required parameter for generating the Pricing Table for a specific product.</data>
      <data key="d5">parameter usage, feature access</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_fabc937abc8c4367253839f749f33317</data>
    </edge>
    <edge source="Pricing Table" target="queryParams">
      <data key="d4">queryParams provides additional customization options to enhance the output of the Pricing Table feature.</data>
      <data key="d5">parameter customization, feature enhancement</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_fabc937abc8c4367253839f749f33317</data>
    </edge>
    <edge source="Pricing Table" target="salable.plans.getCheckoutLink">
      <data key="d4">Pricing Table provides an alternative way to showcase options compared to a direct checkout link generated by salable.plans.getCheckoutLink.</data>
      <data key="d5">user experience, alternative presentation</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </edge>
    <edge source="Pricing Table" target="Invoices Documentation">
      <data key="d4">The Invoices Documentation provides references on how to implement related features like the Pricing Table.</data>
      <data key="d5">guide, feature correlation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da</data>
    </edge>
    <edge source="Pricing Table" target="Create Pricing Table">
      <data key="d4">The Create Pricing Table function is directly related to the Pricing Table feature as it begins the creation process for users.</data>
      <data key="d5">feature creation, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </edge>
    <edge source="Pricing Table" target="Edit Pricing Table">
      <data key="d4">The Edit Pricing Table function is related to the Pricing Table feature as it allows modifications after creation.</data>
      <data key="d5">feature modification, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </edge>
    <edge source="Pricing Table" target="default pricing table">
      <data key="d4">The default pricing table is a specific configuration under the broader Pricing Table feature, dictating editing limitations.</data>
      <data key="d5">configuration clarity, feature limitation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </edge>
    <edge source="Pricing Table" target="Update Pricing Table">
      <data key="d4">The Update Pricing Table function is employed to save changes made to the Pricing Table feature, ensuring modifications are retained.</data>
      <data key="d5">feature update, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </edge>
    <edge source="Pricing Table" target="getPricingTableByUuid">
      <data key="d4">Pricing Table API allows the interaction with the getPricingTableByUuid function to obtain pricing information.</data>
      <data key="d5">API interaction, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </edge>
    <edge source="checkoutLink" target="cancelUrl">
      <data key="d4">The checkoutLink uses cancelUrl to redirect users when the transaction is cancelled, showcasing a related contingency in the process.</data>
      <data key="d5">redirection, user options</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b0d99f3af716852d9f2a0d8e9d551113</data>
    </edge>
    <edge source="checkoutLink" target="your-users-id">
      <data key="d4">your-users-id is included within the checkoutLink to associate the transaction with a specific user.</data>
      <data key="d5">user identification, transaction association</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b0d99f3af716852d9f2a0d8e9d551113</data>
    </edge>
    <edge source="checkoutLink" target="GetPlanCheckoutOptions">
      <data key="d4">GetPlanCheckoutOptions are used as query parameters to customize the checkout link creation process, influencing the output URL.</data>
      <data key="d5">configuration, customization</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_ec8853c4684794f440831d669649c3b8</data>
    </edge>
    <edge source="cancelUrl" target="GetPlanCheckoutOptions">
      <data key="d4">cancelUrl is included in the GetPlanCheckoutOptions to handle potential transaction failures.:|:The cancelUrl is part of the options in GetPlanCheckoutOptions that defines a fallback URL during the checkout process.</data>
      <data key="d5">user experience, options:|:configuration, error management</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_ec8853c4684794f440831d669649c3b8:|:excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </edge>
    <edge source="cancelUrl" target="getCheckoutLink">
      <data key="d4">The cancelUrl parameter is similarly used by getCheckoutLink to specify where users are sent when a transaction is cancelled.</data>
      <data key="d5">transaction management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d9e1d76334e0264800ec30320373ba71</data>
    </edge>
    <edge source="cancelUrl" target="salable.plans.getCheckoutLink">
      <data key="d4">salable.plans.getCheckoutLink uses the cancelUrl variable to manage user decisions during the checkout process.</data>
      <data key="d5">redirect, function parameters</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </edge>
    <edge source="your-salable-api-key" target="Get subscriptions current payment method">
      <data key="d4">The variable your-salable-api-key is required for authentication when executing the function Get subscriptions current payment method.</data>
      <data key="d5">authentication requirement, security</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5ebe47a66fffe70faec5fc051e3e9666</data>
    </edge>
    <edge source="your-salable-api-key" target="Get an 'update payment method' link">
      <data key="d4">The variable your-salable-api-key is used for authentication when executing the function Get an 'update payment method' link.</data>
      <data key="d5">authentication requirement, security</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5ebe47a66fffe70faec5fc051e3e9666</data>
    </edge>
    <edge source="licenses" target="Get Licenses for a Grantee ID">
      <data key="d4">licenses stores the output of the Get Licenses for a Grantee ID function, holding the retrieved data.</data>
      <data key="d5">function output, data storage</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_3e7d435b3bee1520f4473a125ea800e1</data>
    </edge>
    <edge source="licenses" target="License Object">
      <data key="d4">licenses variable represents the data structured as a License Object based on the retrieved license information.</data>
      <data key="d5">data structure, API response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_3e7d435b3bee1520f4473a125ea800e1</data>
    </edge>
    <edge source="licenses" target="your-license-uuid">
      <data key="d4">The variable your-license-uuid serves as an identifier for specific licenses that are managed by the Salable API.</data>
      <data key="d5">identifier, feature linkage</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_f45958815097879415986e68ae21cbba</data>
    </edge>
    <edge source="GET /licenses" target="subscriptionUuid">
      <data key="d4">The GET /licenses endpoint requires the subscriptionUuid as a parameter to fetch the associated licenses for a specific subscription.</data>
      <data key="d5">parameter requirement, data retrieval</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </edge>
    <edge source="Pricing Models" target="Flat Rate Model">
      <data key="d4">Flat Rate Model is one of the various Pricing Models available for structuring customer payment plans.</data>
      <data key="d5">subscription model, pricing strategy</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </edge>
    <edge source="Pricing Models" target="Usage-based Model">
      <data key="d4">Usage-based Model falls under Pricing Models as a method of charging customers based on their product usage.</data>
      <data key="d5">subscription model, pricing strategy</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </edge>
    <edge source="Pricing Models" target="Per-seat Model">
      <data key="d4">Per-seat Model is another variant included within the Pricing Models for selecting customer payment options.</data>
      <data key="d5">subscription model, pricing strategy</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </edge>
    <edge source="Pricing Models" target="Freemium">
      <data key="d4">Freemium is categorized as one of the Pricing Models to engage users by offering free access while encouraging upgrades.</data>
      <data key="d5">subscription model, pricing strategy</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </edge>
    <edge source="Pricing Models" target="Free trials">
      <data key="d4">Free trials are part of the pricing strategies available to users to enhance customer experience before they buy.</data>
      <data key="d5">subscription model, pricing strategy</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_bdaf47c34544829246213081b5843311</data>
    </edge>
    <edge source="Features tab" target="Add New Feature">
      <data key="d4">The Features tab allows users to access the Add New Feature function, which facilitates adding new features to a product.</data>
      <data key="d5">user interface, function access</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_680976a6fc3bada749f88e7d3b2ab7ed</data>
    </edge>
    <edge source="Default Pricing Table" target="Free Plan">
      <data key="d4">The Free Plan can be shown in the Default Pricing Table which enables users to view it among other plans.</data>
      <data key="d5">visibility, selection</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </edge>
    <edge source="Add Currencies" target="Create a Product">
      <data key="d4">Create a Product enables the setup process that includes the functionality of adding currencies to products.</data>
      <data key="d5">setup process, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </edge>
    <edge source="Currencies Tab" target="Add Currency">
      <data key="d4">The Currencies Tab provides access to the Add Currency feature, allowing users to manage currency settings for products.</data>
      <data key="d5">management, user interface</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </edge>
    <edge source="Currencies Tab" target="Products Menu">
      <data key="d4">Products Menu contains the option to access the Currencies Tab for product configuration.</data>
      <data key="d5">navigation, configuration access</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </edge>
    <edge source="Add Currency" target="Set Default">
      <data key="d4">The Add Currency feature allows users to add currencies, which can then be set as default using the Set Default function.</data>
      <data key="d5">currency management, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5</data>
    </edge>
    <edge source="Product" target="Default Currency">
      <data key="d4">Every Product has a Default Currency associated with it, which is used for transactions and pricing.</data>
      <data key="d5">currency management, transaction</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0</data>
    </edge>
    <edge source="Product" target="Create a Plan">
      <data key="d4">The Create a Plan function operates within the context of the Product, facilitating the addition of new plans.</data>
      <data key="d5">functionality, product management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f867ef75edd7d7d3c434b36eb4078f99</data>
    </edge>
    <edge source="Product" target="Sidebar Position">
      <data key="d4">The Sidebar Position variable affects the user interface of the Product, influencing where plans appear in the sidebar.</data>
      <data key="d5">user interface, display order</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_f867ef75edd7d7d3c434b36eb4078f99</data>
    </edge>
    <edge source="Product" target="Subscription Cancellation">
      <data key="d4">The Subscription Cancellation function is directly linked to the Product configuration as it specifies how and when a subscription to a product will conclude.</data>
      <data key="d5">product management, subscription lifecycle</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </edge>
    <edge source="Product" target="organisationPaymentIntegrationUuid">
      <data key="d4">The organisationPaymentIntegrationUuid is essential for linking the Product configuration to its payment integration, establishing financial connections.</data>
      <data key="d5">financial integration, organisational link</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </edge>
    <edge source="Product" target="paymentIntegrationProductId">
      <data key="d4">The paymentIntegrationProductId relates to the Product as it signifies the specific product used in payment processing, which can affect transactions.</data>
      <data key="d5">payment processing, product relationship</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </edge>
    <edge source="Product" target="appType">
      <data key="d4">The appType variable characterises the nature of the application associated with the Product configuration, influencing how it is presented or used.</data>
      <data key="d5">application type, product utility</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </edge>
    <edge source="Product" target="updatedAt">
      <data key="d4">The updatedAt variable indicates the last modification date of the Product configuration, providing a history of updates and changes.</data>
      <data key="d5">versioning, configuration updates</data>
      <data key="d6">4.0</data>
      <data key="d7">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </edge>
    <edge source="Product" target="isTest">
      <data key="d4">The isTest variable indicates whether the Product configuration is for testing or actual use, which is crucial for differentiating environments.</data>
      <data key="d5">testing vs production, configuration purpose</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_e641edc1cfd6a00298605ef35f2ad243</data>
    </edge>
    <edge source="Product" target="LicenseByPurchaser">
      <data key="d4">LicenseByPurchaser includes a reference to Product, indicating that it is tied to specific product licenses.</data>
      <data key="d5">product reference, licensing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9516a99c40383674c2274db86035bea6</data>
    </edge>
    <edge source="Product" target="Product UUID">
      <data key="d4">Product UUID links a feature back to its associated product, providing a unique identifier for relational integrity.</data>
      <data key="d5">data integrity, relational mapping</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Product" target="Get all plans of a product">
      <data key="d4">The function Get all plans of a product retrieves plans that are directly related to the Product entity.</data>
      <data key="d5">functionality, data retrieval</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </edge>
    <edge source="Product" target="Get product pricing table">
      <data key="d4">The function Get product pricing table retrieves the pricing details that are associated with the Product entity.</data>
      <data key="d5">functionality, data retrieval</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </edge>
    <edge source="Products Page" target="Create New Product">
      <data key="d4">Create New Product is a function that allows the user to add new items to the Products Page, thereby updating it with new products.</data>
      <data key="d5">product creation, management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0</data>
    </edge>
    <edge source="Products Page" target="Copy to Live Mode">
      <data key="d4">The Products Page includes a feature that allows users to invoke the Copy to Live Mode function for products tested in Test Mode.</data>
      <data key="d5">product management, transitioning</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_03a1e0b7542d58580d2e6e791794e576</data>
    </edge>
    <edge source="Capabilities Tab" target="Name">
      <data key="d4">In the Capabilities Tab, users input a Name for the capability they are configuring.</data>
      <data key="d5">input, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_26398496b4725d2ebb6afc8f67da70c0</data>
    </edge>
    <edge source="Capabilities Tab" target="Free Plan">
      <data key="d4">The Capabilities Tab facilitates the setup of capabilities that will include the Free Plan's capabilities.</data>
      <data key="d5">capabilities, setup</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </edge>
    <edge source="Name" target="Add">
      <data key="d4">The action to Add a capability follows the input of a Name, completing the configuration process.</data>
      <data key="d5">action sequence, configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_26398496b4725d2ebb6afc8f67da70c0</data>
    </edge>
    <edge source="Name" target="Secure Password">
      <data key="d4">Both Name and Secure Password are variables required during the account creation stage when joining an organisation.</data>
      <data key="d5">account creation, user inputs</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </edge>
    <edge source="Name" target="Create Pricing Table">
      <data key="d4">The Create Pricing Table function requires the Name variable to identify the pricing table during setup.</data>
      <data key="d5">setup requirement, identification</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce</data>
    </edge>
    <edge source="Delete a Product" target="Menu icon">
      <data key="d4">The Menu icon provides access to the Delete a Product function, serving as a gateway for users to delete products.</data>
      <data key="d5">user interface, access point</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a8239cb71650f45a73ca9ee6f9267131</data>
    </edge>
    <edge source="Grantee ID" target="Create New License">
      <data key="d4">The Create New License function requires the Grantee ID to validate the license being issued.</data>
      <data key="d5">license validation, necessary parameter</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </edge>
    <edge source="Grantee ID" target="Evaluation License">
      <data key="d4">The Grantee ID is crucial for ensuring that the Evaluation License can be correctly validated for usage.</data>
      <data key="d5">validation, identification</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_edf36a481b1048696352d880c847800e</data>
    </edge>
    <edge source="Update License" target="Code Sample">
      <data key="d4">The Code Sample illustrates how the Update License function of the Salable API is implemented in TypeScript, providing a practical usage example.</data>
      <data key="d5">implementation, coding example</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </edge>
    <edge source="Update License" target="licenseUuid">
      <data key="d4">The Update License function requires the licenseUuid as a necessary parameter to identify which license to update.</data>
      <data key="d5">parameter requirement, function necessity</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </edge>
    <edge source="Update License" target="updateLicenseParams">
      <data key="d4">The Update License function utilizes the updateLicenseParams to receive the necessary configuration for updating license details.</data>
      <data key="d5">configuration necessity, function interaction</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </edge>
    <edge source="Update License" target="license object">
      <data key="d4">The Update License function interacts with the license object, allowing changes to the license's attributes through the API.</data>
      <data key="d5">feature interaction, attribute modification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb</data>
    </edge>
    <edge source="Create New License" target="Licensee Email">
      <data key="d4">Issuing a license through the Create New License function necessitates the input of the Licensee Email to notify the customer.</data>
      <data key="d5">customer notification, process requirement</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </edge>
    <edge source="Create New License" target="Product &amp; Plan">
      <data key="d4">Selecting the Product &amp; Plan is a prerequisite in the Create New License function for issuing appropriate licenses.</data>
      <data key="d5">license selection, necessary option</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </edge>
    <edge source="Create New License" target="Let Expire/Renew Forever">
      <data key="d4">The Create New License function includes the option to select whether the license will renew forever or let expire as part of the issuance process.</data>
      <data key="d5">license options, function flexibility</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d6f8663943e239a00e14d46ce038881f</data>
    </edge>
    <edge source="Licensee Email" target="Evaluation License">
      <data key="d4">Licensee Email is required to issue the Evaluation License to the correct customer.</data>
      <data key="d5">user identification, license issuance</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_edf36a481b1048696352d880c847800e</data>
    </edge>
    <edge source="Product &amp; Plan" target="Evaluation License">
      <data key="d4">Product &amp; Plan defines what specific offerings are included under the Evaluation License for the customer.</data>
      <data key="d5">configuration, service level</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_edf36a481b1048696352d880c847800e</data>
    </edge>
    <edge source="Evaluation License" target="Create License Sidebar">
      <data key="d4">The Create License Sidebar facilitates the issuance of an Evaluation License by allowing users to input necessary details.</data>
      <data key="d5">interface function, user support</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_edf36a481b1048696352d880c847800e</data>
    </edge>
    <edge source="Evaluation License" target="Expiration Date Parameter">
      <data key="d4">Expiration Date Parameter determines how long the Evaluation License remains valid, impacting its usage.</data>
      <data key="d5">time-sensitive, licensing terms</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_edf36a481b1048696352d880c847800e</data>
    </edge>
    <edge source="Pricing Tables" target="Create Pricing Table">
      <data key="d4">Pricing Tables utilize the Create Pricing Table function to initiate the creation process of a new pricing configuration.</data>
      <data key="d5">configuration process, function usage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce</data>
    </edge>
    <edge source="Edit Icon" target="Free Plan">
      <data key="d4">The Edit Icon allows for modifications to be made to the Free Plan after creation.</data>
      <data key="d5">modification, interface</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </edge>
    <edge source="Value Type" target="Parameter">
      <data key="d4">Value Type is a required Parameter that dictates the acceptable input format for the feature being created, influencing how values are managed.</data>
      <data key="d5">input specification, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </edge>
    <edge source="Value Type" target="Feature Description">
      <data key="d4">Value Type is a characteristic within the Feature Description that defines the type of data the feature can hold.</data>
      <data key="d5">data definition, feature characteristics</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Settings" target="API Keys Tab">
      <data key="d4">Settings contains the API Keys Tab, which is where users manage their API keys within the Salable application.</data>
      <data key="d5">management interface, user organization</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </edge>
    <edge source="Settings" target="Team Tab">
      <data key="d4">Settings contains the Team Tab, which is used to manage team member access and permissions within Salable.</data>
      <data key="d5">configuration, organisational management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_957a53aebe179fef047e927dd691f8e1</data>
    </edge>
    <edge source="Settings" target="Manage Your Team Page">
      <data key="d4">Settings provides access to the Manage Your Team Page, which explains how to manage team member permissions.</data>
      <data key="d5">feature guidance, permissions management</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_957a53aebe179fef047e927dd691f8e1</data>
    </edge>
    <edge source="Settings" target="Teams Tab">
      <data key="d4">The Teams Tab is part of the Settings interface, providing management capabilities for team members.</data>
      <data key="d5">configuration hierarchy, user interface</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </edge>
    <edge source="Settings" target="Payment Integrations">
      <data key="d4">Users access the Payment Integrations through the Settings menu in Salable.:|:Settings provides the interface for accessing and managing the Payment Integrations feature in Salable.</data>
      <data key="d5">navigation, configuration:|:configuration management, user interface</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb:|:excerpt_id_986393e22f5effe04fced6469538c6a8</data>
    </edge>
    <edge source="API Keys Tab" target="Create New API Key">
      <data key="d4">The API Keys Tab provides a function to create new API keys, centralizing the management of these keys.</data>
      <data key="d5">functionality, management</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </edge>
    <edge source="Create New API Key" target="API Key Name">
      <data key="d4">When creating a new API key, the user must input an API Key Name, defining a unique identifier for the key.</data>
      <data key="d5">identifier creation, user interaction</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </edge>
    <edge source="Create New API Key" target="Scopes">
      <data key="d4">When generating a new API key, users can select desired scopes, directly impacting what the key can do.</data>
      <data key="d5">permissions, capability definition</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </edge>
    <edge source="Create New API Key" target="Expiry Date">
      <data key="d4">Users have the option to set an Expiry Date when creating an API key, influencing the key's validity duration.</data>
      <data key="d5">validity setting, security</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_5f94c3a04c280fb20bcd425bb5880a08</data>
    </edge>
    <edge source="Join an Organisation" target="Invite Your Team to Salable">
      <data key="d4">The Invite Your Team to Salable API enables the function Join an Organisation by sending invitations that initiate the membership process.</data>
      <data key="d5">API function relationship</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </edge>
    <edge source="Join an Organisation" target="Accept Invitation">
      <data key="d4">The function Join an Organisation culminates in users executing the Accept Invitation feature to finalize their membership in an organisation.</data>
      <data key="d5">membership process, user action</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </edge>
    <edge source="Accept Invitation" target="Invitation Email">
      <data key="d4">The Accept Invitation feature is triggered by the Invitation Email sent to users, guiding them to join the organisation.</data>
      <data key="d5">email communication, membership confirmation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a</data>
    </edge>
    <edge source="Support Team" target="Support Portal">
      <data key="d4">The Support Team uses the Support Portal to manage and respond to users' support requests.</data>
      <data key="d5">customer service, user assistance</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </edge>
    <edge source="Support Team" target="Email Support">
      <data key="d4">The Support Team provides Email Support as a means for users to seek help with their issues.</data>
      <data key="d5">customer service, communication</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </edge>
    <edge source="Support Team" target="Discord">
      <data key="d4">The Support Team is available on Discord to provide real-time assistance and engage with users.</data>
      <data key="d5">real-time communication, community engagement</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </edge>
    <edge source="Support Team" target="Salable Status Page">
      <data key="d4">The Support Team monitors the Salable Status Page to keep users informed about service availability.</data>
      <data key="d5">service monitoring, user communication</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_6e54175b7facf4c674d075679fc4ea9b</data>
    </edge>
    <edge source="Org Settings" target="Organisation Details">
      <data key="d4">Org Settings includes options to update and manage Organisation Details, relating directly to each other in a configuration context.</data>
      <data key="d5">configuration, management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_acea73938f6ace38d84b68497fd7b05a</data>
    </edge>
    <edge source="Org Settings" target="Save Changes">
      <data key="d4">Org Settings requires the Save Changes function to apply any updates made to Organisation Details.</data>
      <data key="d5">configuration, function</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_acea73938f6ace38d84b68497fd7b05a</data>
    </edge>
    <edge source="Organisation Details" target="Account Creation">
      <data key="d4">Account Creation leads to the automatic establishment of Organisation Details, linking these processes.".</data>
      <data key="d5">automation, setup</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_acea73938f6ace38d84b68497fd7b05a</data>
    </edge>
    <edge source="Salable Web Components library" target="Custom Elements Definition">
      <data key="d4">Custom Elements Definition is a process that utilises the Salable Web Components library to render dynamic components.</data>
      <data key="d5">dynamic rendering, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1b612f26a43928677dcf8db549d3101b</data>
    </edge>
    <edge source="Team Tab" target="Invite Member Button">
      <data key="d4">The Invite Member Button is a function located within the Team Tab that allows users to invite new team members.</data>
      <data key="d5">team management, function</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_957a53aebe179fef047e927dd691f8e1</data>
    </edge>
    <edge source="Invite Member Button" target="Email Address">
      <data key="d4">The Email Address is required by the Invite Member Button to send invitations to new team members.</data>
      <data key="d5">invitation process, input requirement</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_957a53aebe179fef047e927dd691f8e1</data>
    </edge>
    <edge source="Teams Tab" target="Team Member">
      <data key="d4">The Teams Tab allows viewing and managing Team Members, showing the relationship between the configuration and the individuals involved.</data>
      <data key="d5">team management, user roles</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </edge>
    <edge source="Team Member" target="Permissions">
      <data key="d4">Permissions are associated with each Team Member and are edited through the Teams Tab, indicating their access levels.</data>
      <data key="d5">access control, role management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </edge>
    <edge source="Team Member" target="Invitation Process">
      <data key="d4">The Invitation Process is directly related to Team Members as it manages how they are invited to join the team.</data>
      <data key="d5">onboarding, team expansion</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </edge>
    <edge source="Team Member" target="Remove Member">
      <data key="d4">Remove Member directly interacts with Team Members by determining their access and membership status.</data>
      <data key="d5">access revocation, membership management</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_309cb05ad9ffc9790904eeb1293bc388</data>
    </edge>
    <edge source="Payment Integrations" target="Add Payment Integration">
      <data key="d4">Payment Integrations is a feature in Salable that includes the Add Payment Integration function for connecting payment providers.:|:The function to Add Payment Integration is part of the Payment Integrations settings.</data>
      <data key="d5">feature functionality, linking providers:|:functionality, management</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb:|:excerpt_id_986393e22f5effe04fced6469538c6a8</data>
    </edge>
    <edge source="Add Payment Integration" target="Account Name">
      <data key="d4">The user must provide an Account Name when adding a new payment integration.</data>
      <data key="d5">user input, identification</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb</data>
    </edge>
    <edge source="Add Payment Integration" target="Stripe Onboarding">
      <data key="d4">The completion of the Add Payment Integration function redirects users to the Stripe Onboarding process.</data>
      <data key="d5">external service, completion</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb</data>
    </edge>
    <edge source="Get Capabilities" target="currencies">
      <data key="d4">The variable currencies holds the result returned by the Get Capabilities function, linking the function to its output.</data>
      <data key="d5">result storage, function output</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3</data>
    </edge>
    <edge source="Get Capabilities" target="productUuid">
      <data key="d4">The productUuid parameter is required by the Get Capabilities function to uniquely identify a product.</data>
      <data key="d5">parameter requirement, identification</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3</data>
    </edge>
    <edge source="Get Capabilities" target="Product Capability Object">
      <data key="d4">The Get Capabilities function produces a response in the form of a Product Capability Object, which outlines the capabilities of a product.</data>
      <data key="d5">function output, response structure</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3</data>
    </edge>
    <edge source="Get Capabilities" target="Plan Capability Object">
      <data key="d4">Get Capabilities function returns a Plan Capability Object detailing the capabilities of the specified plan.</data>
      <data key="d5">data retrieval, structured response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_af600649bc560ccce1729a149fdba460</data>
    </edge>
    <edge source="currencies" target="ProductPricingTable">
      <data key="d4">The currencies array relates to the pricing aspect of the product by detailing associated currencies.</data>
      <data key="d5">pricing, currency details</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </edge>
    <edge source="currencies" target="SubscriptionUpdatablePlan">
      <data key="d4">The currencies array indicates the financial aspects supported by the SubscriptionUpdatablePlan, impacting pricing and payment options.</data>
      <data key="d5">financial structure, pricing</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </edge>
    <edge source="productUuid" target="Get Currencies for a Product">
      <data key="d4">Get Currencies for a Product function requires the productUuid variable to identify which product's currencies to fetch.</data>
      <data key="d5">requirement, input</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_413bf83a1f6433b1357024badf84fc52</data>
    </edge>
    <edge source="productUuid" target="Get One">
      <data key="d4">Get One requires the productUuid as a necessary parameter to identify which product's details to return.</data>
      <data key="d5">parameter requirement, identification</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476</data>
    </edge>
    <edge source="productUuid" target="Get Plans for a Product">
      <data key="d4">The function 'Get Plans for a Product' requires the variable 'productUuid' as a mandatory parameter for execution.</data>
      <data key="d5">function requirement, parameter dependency</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_4084123f56be759c3a4de2c2abd2e01d</data>
    </edge>
    <edge source="productUuid" target="Get Features">
      <data key="d4">The productUuid variable is a required parameter for the Get Features function, linking them directly.</data>
      <data key="d5">parameter requirement, function dependency</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_43aad08feabcefa292e03d2681262e0b</data>
    </edge>
    <edge source="productUuid" target="licenses.getForPurchaser">
      <data key="d4">productUuid is essential for the licenses.getForPurchaser function to identify which product's licenses to retrieve.</data>
      <data key="d5">input requirement, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </edge>
    <edge source="productUuid" target="checkLicenseParams">
      <data key="d4">productUuid is a required field within checkLicenseParams that specifies the product being queried in the Check License function.</data>
      <data key="d5">required parameter, product identification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </edge>
    <edge source="productUuid" target="SessionCreatePricingTableRequest">
      <data key="d4">SessionCreatePricingTableRequest uses productUuid to establish which product's pricing table is to be displayed.</data>
      <data key="d5">dependency, session configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c</data>
    </edge>
    <edge source="productUuid" target="Get Product Currencies">
      <data key="d4">Get Product Currencies function requires productUuid as a parameter to identify the specific product for which currencies are retrieved.</data>
      <data key="d5">function-requires-parameter</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_90c759c4feb12e8e2b105cd945aeabd3</data>
    </edge>
    <edge source="Get All Products" target="Product Object">
      <data key="d4">The Product Object describes the structure of data returned when using the Get All Products function.</data>
      <data key="d5">data structure, API response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d</data>
    </edge>
    <edge source="Product Object" target="Get One">
      <data key="d4">Get One function returns a Product Object, which is the structure expected from the API response.</data>
      <data key="d5">data structure, API response</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476</data>
    </edge>
    <edge source="Code Sample" target="licenses.getForPurchaser">
      <data key="d4">Code Sample illustrates how to use the licenses.getForPurchaser function within the Salable API.</data>
      <data key="d5">implementation, practical use</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </edge>
    <edge source="Code Sample" target="Get One Plan">
      <data key="d4">Code Sample demonstrates how to implement the Get One Plan function using the Salable API in code.</data>
      <data key="d5">implementation example, coding</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b</data>
    </edge>
    <edge source="Code Sample" target="getFeatures">
      <data key="d4">The Code Sample illustrates how to call the getFeatures function in a practical context, aiding in understanding its use.</data>
      <data key="d5">implementation example, code usage</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0</data>
    </edge>
    <edge source="Code Sample" target="Get a Subscription Update Payment Link">
      <data key="d4">The Code Sample demonstrates how to implement the Get a Subscription Update Payment Link function using the Salable API.</data>
      <data key="d5">implementation example</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_310437ff88c214d922e257631db6a72d</data>
    </edge>
    <edge source="Code Sample" target="Get a Subscription Payment Method">
      <data key="d4">The Code Sample demonstrates how to implement the Get a Subscription Payment Method function using the Salable API.</data>
      <data key="d5">implementation, demonstration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a4b8e11006d615b209673feede32f6c5</data>
    </edge>
    <edge source="Code Sample" target="Cancel a Subscription">
      <data key="d4">The Code Sample demonstrates the implementation of the Cancel a Subscription function showing its practical use.</data>
      <data key="d5">implementation example, practical usage</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce</data>
    </edge>
    <edge source="Code Sample" target="Reactivate a Subscription">
      <data key="d4">The Code Sample provides an example of how to use the Reactivate a Subscription function in practical terms.</data>
      <data key="d5">implementation example, practical use</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_7f708cd18160447dd54fdd10c6e9203e</data>
    </edge>
    <edge source="Code Sample" target="Create Session">
      <data key="d4">The Code Sample illustrates the implementation of the Create Session method, demonstrating how to use the API effectively.</data>
      <data key="d5">implementation guide, coding example</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7</data>
    </edge>
    <edge source="Code Sample" target="Get One Event">
      <data key="d4">The Code Sample illustrates how to implement the Get One Event function in TypeScript, providing a practical guide for developers.</data>
      <data key="d5">implementation example, practical guide</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_ddaf4e6518a73006b4437f10458e27ba</data>
    </edge>
    <edge source="Get Currencies for a Product" target="Product Currency Object">
      <data key="d4">Get Currencies for a Product function is related to the Product Currency Object, which details the data structure returned by this function.</data>
      <data key="d5">data structure, output</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_413bf83a1f6433b1357024badf84fc52</data>
    </edge>
    <edge source="Get One" target="options">
      <data key="d4">Get One can optionally utilize options to customize the details returned, allowing for enhanced API interactions.</data>
      <data key="d5">customization, enhanced functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476</data>
    </edge>
    <edge source="options" target="GetProductOptions">
      <data key="d4">options refer to the GetProductOptions configuration that details what additional parameters can be passed with the function.</data>
      <data key="d5">configuration, optional parameters</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_5054bb85ceb11e7cd95222d0fffc6476</data>
    </edge>
    <edge source="options" target="expand">
      <data key="d4">expand is a specific variable within options that allows specifying which properties to retrieve in the API response.:|:expand is a specific variable within options that provides further detail on how the API responds to the Get One Plan function.:|:expand is an option within the options configuration that allows the user to request specific additional properties in the API call.</data>
      <data key="d5">parameter detail, options variable:|:customization, optional parameters:|:configuration, feature specification</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b:|:excerpt_id_74b2b33402d8e1fd884f911b29d71f78:|:excerpt_id_5054bb85ceb11e7cd95222d0fffc6476</data>
    </edge>
    <edge source="options" target="Get One License">
      <data key="d4">options allow for customization in the Get One License function, modifying the properties returned alongside the license.</data>
      <data key="d5">customization, flexibility</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_74b2b33402d8e1fd884f911b29d71f78</data>
    </edge>
    <edge source="options" target="Get Licenses for a Grantee ID">
      <data key="d4">options is an additional parameter in the function that specifies how to expand properties in the returned license data.</data>
      <data key="d5">configuration parameter, function customization</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_3e7d435b3bee1520f4473a125ea800e1</data>
    </edge>
    <edge source="options" target="Get One Plan">
      <data key="d4">options can modify the behavior of the Get One Plan function by allowing additional parameters to be specified.</data>
      <data key="d5">optional configuration, function behavior</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b</data>
    </edge>
    <edge source="options" target="GetAllInvoicesOptions">
      <data key="d4">GetAllInvoicesOptions defines the structure of the options that can be included in the getInvoices function.</data>
      <data key="d5">configuration definition, optional parameters</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_0605f5987dc662b127cbcde1ca896ece</data>
    </edge>
    <edge source="options" target="Get One Subscription">
      <data key="d4">options provide flexibility in the Get One Subscription function by allowing additional custom parameters to be sent along with the request.</data>
      <data key="d5">customization, API usage</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </edge>
    <edge source="options" target="GetSubscriptionOptions">
      <data key="d4">GetSubscriptionOptions describes the structure of optional parameters that can be utilized in the options of the Get One Subscription function.</data>
      <data key="d5">parameter structure, API documentation</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </edge>
    <edge source="options" target="subscriptionUuid">
      <data key="d4">The options variable must include the subscriptionUuid variable to indicate which subscription is being moved.</data>
      <data key="d5">requirement, dependent variables</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a</data>
    </edge>
    <edge source="options" target="proration">
      <data key="d4">The options variable may include proration to control how proration items are handled during the subscription change.</data>
      <data key="d5">optional configuration, dependent variables</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a</data>
    </edge>
    <edge source="options" target="Get One Pricing Table">
      <data key="d4">options provides additional configurable parameters for enhancing the functionality of the Get One Pricing Table.</data>
      <data key="d5">configuration, function enhancement</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_d96e80b895dea6915b51ebb69acff797</data>
    </edge>
    <edge source="expand" target="getLicenseByUuid">
      <data key="d4">The expand parameter is utilized in the getLicenseByUuid function to include additional license-related data in the response.</data>
      <data key="d5">parameter usage, data enhancement</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4</data>
    </edge>
    <edge source="expand" target="getLicensesByGranteeId">
      <data key="d4">The expand variable in the API request allows for additional information to be retrieved by getLicensesByGranteeId function.</data>
      <data key="d5">variable usage, data enhancement</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_8f76cec6c3c5c205e09868b54019ae7b</data>
    </edge>
    <edge source="Get Plans for a Product" target="Plan Object">
      <data key="d4">The function 'Get Plans for a Product' returns data structured as a Plan Object, providing plan details to the caller.</data>
      <data key="d5">data structure, return value</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_4084123f56be759c3a4de2c2abd2e01d</data>
    </edge>
    <edge source="licenses.getForPurchaser" target="getForPurchaserOptions">
      <data key="d4">getForPurchaserOptions defines the required parameters for executing the licenses.getForPurchaser function.</data>
      <data key="d5">configuration, functional requirement</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </edge>
    <edge source="licenses.getForPurchaser" target="purchaser">
      <data key="d4">purchaser is a required variable for the licenses.getForPurchaser function, directly influencing its output.</data>
      <data key="d5">input requirement, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </edge>
    <edge source="licenses.getForPurchaser" target="License Object">
      <data key="d4">License Object represents the type of data returned by the licenses.getForPurchaser function, detailing the outcome of the function call.</data>
      <data key="d5">output structure, functionality</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e030f342082b40970042b8abc1e01c3a</data>
    </edge>
    <edge source="License Object" target="Get All Licenses">
      <data key="d4">The License Object defines the response structure for the Get All Licenses function, indicating a direct relation to the output of this function.</data>
      <data key="d5">output structure, API response</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </edge>
    <edge source="License Object" target="Get One License">
      <data key="d4">The result of the Get One License function is a License Object that provides details about the retrieved license.</data>
      <data key="d5">output representation, result</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_74b2b33402d8e1fd884f911b29d71f78</data>
    </edge>
    <edge source="Get All Licenses" target="GetLicenseOptions">
      <data key="d4">Get All Licenses utilizes GetLicenseOptions to configure its parameters for fetching licenses, showing a functional relationship.</data>
      <data key="d5">configuration, parameter usage</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </edge>
    <edge source="Get All Licenses" target="licenses.getAll">
      <data key="d4">licenses.getAll is the method that implements the Get All Licenses functionality through the Salable API, linking them directly.</data>
      <data key="d5">implementation, method function</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97</data>
    </edge>
    <edge source="GetLicenseOptions" target="Get All Usage Records for a Grantee">
      <data key="d4">GetLicenseOptions defines the parameters that are necessary for invoking the Get All Usage Records for a Grantee function.</data>
      <data key="d5">parameter definition, function invocation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e8114e81957601460a88df02adf09794</data>
    </edge>
    <edge source="Create Many Licenses" target="createManyAdHocLicenseParams">
      <data key="d4">createManyAdHocLicenseParams outlines the parameters necessary to utilize the Create Many Licenses function effectively.</data>
      <data key="d5">function parameters, API configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_2cd46a574579b7b43c3f957d890e1c25</data>
    </edge>
    <edge source="Get One License" target="licenseUuid">
      <data key="d4">licenseUuid is a required input parameter for the Get One License function to identify the specific license being requested.</data>
      <data key="d5">requirement, input parameter</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_74b2b33402d8e1fd884f911b29d71f78</data>
    </edge>
    <edge source="licenseUuid" target="Cancel License">
      <data key="d4">The licenseUuid variable is a required parameter for the Cancel License function, indicating the specific License to cancel.".</data>
      <data key="d5">required parameter, function usage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </edge>
    <edge source="licenseUuid" target="LicenseUsageRecord">
      <data key="d4">licenseUuid links the LicenseUsageRecord to a specific license, providing context for the record.</data>
      <data key="d5">license identification, contextual association</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </edge>
    <edge source="Check License" target="checkLicenseParams">
      <data key="d4">checkLicenseParams provides the necessary parameters for the execution of the Check License function, ensuring correct operation.</data>
      <data key="d5">parameter configuration, function execution</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </edge>
    <edge source="Check License" target="License Check Object">
      <data key="d4">License Check Object demonstrates the result returned from the Check License function, providing crucial output data.</data>
      <data key="d5">output example, licensing results</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </edge>
    <edge source="checkLicenseParams" target="CheckLicenseInput">
      <data key="d4">CheckLicenseInput defines the structure of the input parameters required by checkLicenseParams during the Check License function operation.</data>
      <data key="d5">data structure, input definition</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </edge>
    <edge source="checkLicenseParams" target="granteeIds">
      <data key="d4">granteeIds is a field within checkLicenseParams necessary for specifying the IDs of the grantees whose licenses are checked.</data>
      <data key="d5">required parameter, grantee specification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_09329d7ae662ecf72d3d964190506555</data>
    </edge>
    <edge source="Update Many Licenses" target="updateManyLicensesParams">
      <data key="d4">"updateManyLicensesParams is a required input for the Update Many Licenses function, providing essential data."&lt;</data>
      <data key="d5">input requirement, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5</data>
    </edge>
    <edge source="Update Many Licenses" target="licenses object">
      <data key="d4">"The licenses object interface describes the structure of licenses affected by the Update Many Licenses function."&lt;</data>
      <data key="d5">interface definition, functionality</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_8df36f78ea176c6bcbef6fd852df56e5</data>
    </edge>
    <edge source="Cancel License" target="cancel License Documentation">
      <data key="d4">The cancel License Documentation provides essential details on how to effectively utilize the Cancel License function.".</data>
      <data key="d5">documentation reference, function guidance</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </edge>
    <edge source="Cancel License" target="TypeScript Code Sample">
      <data key="d4">The TypeScript Code Sample illustrates the practical usage of the Cancel License function in a coding context.".</data>
      <data key="d5">implementation example, function demonstration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </edge>
    <edge source="Cancel License" target="cancel License API Endpoint">
      <data key="d4">The cancel License API Endpoint details how to access the Cancel License function via the Salable API.".</data>
      <data key="d5">API call structure, function access</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_38026b862e04409b6fbda7aa7728c287</data>
    </edge>
    <edge source="Create License" target="CreateAdhocLicenseInput">
      <data key="d4">Create License utilizes CreateAdhocLicenseInput parameters to create a license, necessitating its configuration.</data>
      <data key="d5">process, requirements</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </edge>
    <edge source="CreateAdhocLicenseInput" target="Parameters">
      <data key="d4">Parameters define the specifics of the CreateAdhocLicenseInput structure that is necessary for license creation.</data>
      <data key="d5">specification, structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_4a229833547e95024c6779c45ca44d74</data>
    </edge>
    <edge source="Get Licenses Count" target="licenseCount">
      <data key="d4">"licenseCount is the result returned by the Get Licenses Count function, signifying the count of licenses acquired.")</data>
      <data key="d5">output, function result</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b48f747b61cda7dfebb331b0fdd6525d</data>
    </edge>
    <edge source="subscriptionUuid" target="Get a Subscription Update Payment Link">
      <data key="d4">The function requires the subscriptionUuid variable to identify which subscription's payment link to retrieve.</data>
      <data key="d5">parameters requirement</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_310437ff88c214d922e257631db6a72d</data>
    </edge>
    <edge source="subscriptionUuid" target="Get a Subscription Payment Method">
      <data key="d4">The subscriptionUuid variable is a necessary input for the Get a Subscription Payment Method function, indicating the subscription to query.</data>
      <data key="d5">parameter, dependency</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a4b8e11006d615b209673feede32f6c5</data>
    </edge>
    <edge source="subscriptionUuid" target="Get Cancel Subscription Link">
      <data key="d4">The Get Cancel Subscription Link API requires the subscriptionUuid parameter to identify which subscription to cancel.</data>
      <data key="d5">parameter requirement, API functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_75226dd1c0681dee658c82abefbedb30</data>
    </edge>
    <edge source="subscriptionUuid" target="Get One Subscription">
      <data key="d4">subscriptionUuid is a required parameter in the Get One Subscription function used to identify which subscription's details to retrieve.</data>
      <data key="d5">parameter requirement, function execution</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </edge>
    <edge source="subscriptionUuid" target="Remove Subscription Seats">
      <data key="d4">The subscriptionUuid variable is essential for the Remove Subscription Seats function since it identifies the specific subscription from which seats are being removed.</data>
      <data key="d5">function requirement, identification</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </edge>
    <edge source="subscriptionUuid" target="RemoveSubscriptionSeatsOption">
      <data key="d4">The subscriptionUuid variable is included in the RemoveSubscriptionSeatsOption to ensure proper identification and customization for the seat removal process.</data>
      <data key="d5">parameter linkage, customization</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </edge>
    <edge source="subscriptionUuid" target="Get Switchable Plans for a Subscribed User">
      <data key="d4">The variable subscriptionUuid is crucial as it is required for the function to retrieve the subscription details.</data>
      <data key="d5">parameter requirement, function dependency</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_9e7d62a87ad119e8af876e0901542e69</data>
    </edge>
    <edge source="subscriptionUuid" target="Cancel a Subscription">
      <data key="d4">Cancel a Subscription function requires the subscriptionUuid variable to identify which subscription to cancel.:|:The function Cancel a Subscription requires a parameter subscriptionUuid to identify the subscription to be canceled.</data>
      <data key="d5">function dependency, variable requirement:|:required parameter, function execution</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00:|:excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce</data>
    </edge>
    <edge source="subscriptionUuid" target="Get a Customer Portal Link for a Subscription">
      <data key="d4">subscriptionUuid is a necessary parameter for the function which requires it to specify which subscription is being referenced.</data>
      <data key="d5">parameter dependency, function input</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_d9c1267809cd58cbd21415af67a458ab</data>
    </edge>
    <edge source="subscriptionUuid" target="UpdateSubscriptionInput">
      <data key="d4">subscriptionUuid is a required variable within the UpdateSubscriptionInput configuration for identifying the subscription to update.</data>
      <data key="d5">required parameter, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d979fc2428d484e09ae3b62b942d5968</data>
    </edge>
    <edge source="subscriptionUuid" target="Reactivate a Subscription">
      <data key="d4">The subscriptionUuid variable is necessary to execute the Reactivate a Subscription function, as it identifies which subscription to reactivate.</data>
      <data key="d5">required parameter, execution</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_7f708cd18160447dd54fdd10c6e9203e</data>
    </edge>
    <edge source="subscriptionUuid" target="Fetch API">
      <data key="d4">subscriptionUuid is used as a parameter in the Fetch API requests to fetch specific subscription data.</data>
      <data key="d5">parameterization, data access</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_ee6311eda1a74d2cb86e7774e2dda643</data>
    </edge>
    <edge source="subscriptionUuid" target="changeSubscriptionPlan">
      <data key="d4">The subscriptionUuid variable is used in the changeSubscriptionPlan function to specify which subscription to alter.</data>
      <data key="d5">API usage, identification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2</data>
    </edge>
    <edge source="subscriptionUuid" target="Get subscriptions current payment method">
      <data key="d4">The variable subscriptionUuid is used as a parameter in the function Get subscriptions current payment method to specify which subscription's payment details to access.</data>
      <data key="d5">parameter usage, functional relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_5ebe47a66fffe70faec5fc051e3e9666</data>
    </edge>
    <edge source="subscriptionUuid" target="Change Plan Endpoint">
      <data key="d4">The subscriptionUuid variable is essential for the Change Plan Endpoint as it identifies which subscription is being modified.</data>
      <data key="d5">identifier, API functionality</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </edge>
    <edge source="subscriptionUuid" target="API Endpoint">
      <data key="d4">The subscriptionUuid is part of the API Endpoint URL used to target a specific subscription for seat removal.</data>
      <data key="d5">URL structure, targeting</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f</data>
    </edge>
    <edge source="subscriptionUuid" target="UsageSortQueryParam">
      <data key="d4">UsageSortQueryParam can be used in conjunction with subscriptionUuid to filter and sort usage records effectively.</data>
      <data key="d5">filtering, sorting</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_aeed752a0854093562fcab1a2782b1b3</data>
    </edge>
    <edge source="subscriptionUuid" target="SessionCreateInvoiceRequest">
      <data key="d4">SessionCreateInvoiceRequest requires the subscriptionUuid variable to successfully create an invoice session.</data>
      <data key="d5">dependency, session configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c</data>
    </edge>
    <edge source="subscriptionUuid" target="Get Subscription Cancel Link">
      <data key="d4">The Get Subscription Cancel Link API requires the subscriptionUuid variable to identify the specific subscription for retrieving the cancel link.</data>
      <data key="d5">parameter usage, identification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </edge>
    <edge source="Get Currencies" target="Plan Currency Object">
      <data key="d4">Get Currencies retrieves data described in the Plan Currency Object, thus they are directly related in function and purpose.</data>
      <data key="d5">data retrieval, API application</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d</data>
    </edge>
    <edge source="plan" target="salable.plans.getCurrencies">
      <data key="d4">The function call salable.plans.getCurrencies assigns its result to the variable plan, establishing a direct relationship between the two.</data>
      <data key="d5">function call, variable assignment</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d</data>
    </edge>
    <edge source="Get One Plan" target="plan object">
      <data key="d4">The Get One Plan function returns a plan object that contains detailed information about a specific plan.</data>
      <data key="d5">return type, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b</data>
    </edge>
    <edge source="GetPlanCheckoutOptions" target="customerEmail">
      <data key="d4">customerEmail is a parameter within GetPlanCheckoutOptions allowing user identification and communication post-checkout.</data>
      <data key="d5">user information, configuration</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_ec8853c4684794f440831d669649c3b8</data>
    </edge>
    <edge source="GetPlanCheckoutOptions" target="promoCode">
      <data key="d4">promoCode can be part of the GetPlanCheckoutOptions to offer discounts during checkout, although certain limitations exist.</data>
      <data key="d5">configuration, discount mechanism</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </edge>
    <edge source="GetPlanCheckoutOptions" target="quantity">
      <data key="d4">quantity pertains specifically to the per seat plans within the GetPlanCheckoutOptions, allowing for precise payments.</data>
      <data key="d5">configuration, pricing strategy</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_c7ede61793c23fd3416361ade4773f19</data>
    </edge>
    <edge source="customerEmail" target="Plan checkout link">
      <data key="d4">The customerEmail variable is also included in the inputs for the Plan checkout link, affecting the user interface in checkout.</data>
      <data key="d5">checkout process, input data</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b70787affc67ce541e7d959da486303e</data>
    </edge>
    <edge source="customerEmail" target="customerId">
      <data key="d4">customerEmail and customerId are closely related variables used together in the Stripe checkout process to enhance user experience through autofill functionality.</data>
      <data key="d5">checkout optimization, user experience</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </edge>
    <edge source="getFeatures" target="Plan Feature Object">
      <data key="d4">The output of the getFeatures function is defined by the structure specified in the Plan Feature Object.</data>
      <data key="d5">output definition, API response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0</data>
    </edge>
    <edge source="Get All Usage Records for a Grantee" target="GranteeId">
      <data key="d4">GranteeId is a required option parameter for the Get All Usage Records for a Grantee function, indicating its necessity for the function's execution.</data>
      <data key="d5">function parameter, necessity</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_e8114e81957601460a88df02adf09794</data>
    </edge>
    <edge source="Get All Usage Records for a Grantee" target="Usage Record Object">
      <data key="d4">The return type of the Get All Usage Records for a Grantee function refers to the Usage Record Object, detailing the structure of the records returned.</data>
      <data key="d5">return type, structure reference</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e8114e81957601460a88df02adf09794</data>
    </edge>
    <edge source="UpdateLicenseUsage" target="UpdateLicenseUsageOptions">
      <data key="d4">UpdateLicenseUsage requires the UpdateLicenseUsageOptions configuration to specify the necessary parameters for the operation.</data>
      <data key="d5">parameter specification, functional requirement</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </edge>
    <edge source="UpdateLicenseUsageOptions" target="increment">
      <data key="d4">increment is a required parameter indicating how much to increase the usage in UpdateLicenseUsageOptions.</data>
      <data key="d5">parameter dependency, configuration requirement</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </edge>
    <edge source="UpdateLicenseUsageOptions" target="idempotencyKey">
      <data key="d4">idempotencyKey is included in UpdateLicenseUsageOptions to ensure the request can be processed without duplication.</data>
      <data key="d5">parameter dependency, configuration requirement</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_af891ba93357fd6013d5bbd53f638736</data>
    </edge>
    <edge source="increment" target="Options">
      <data key="d4">increment is an option within Options that indicates the number of seats to be added when the addSeats function is executed.</data>
      <data key="d5">parameter specification, functional link</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_fde1d0189eaa75074956787efcc59cec</data>
    </edge>
    <edge source="increment" target="countOptions">
      <data key="d4">countOptions contains the increment variable, which is required for modifying the usage count of the license.</data>
      <data key="d5">configuration, requirement</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </edge>
    <edge source="Get Current Usage Record for Grantee on Plan" target="CurrentUsageOptions">
      <data key="d4">The function requires CurrentUsageOptions as a configuration parameter for its execution.</data>
      <data key="d5">configuration dependency, function execution</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </edge>
    <edge source="Get Current Usage Record for Grantee on Plan" target="Records">
      <data key="d4">The function returns Records, which represent the current usage data for a metered license.</data>
      <data key="d5">data output, function result</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_8f56e428f951a352b3a5155a7b79b723</data>
    </edge>
    <edge source="Get a Subscription Update Payment Link" target="Subscription Payment Link Object">
      <data key="d4">The function returns a Subscription Payment Link Object as the response based on the request made to the API.</data>
      <data key="d5">response structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_310437ff88c214d922e257631db6a72d</data>
    </edge>
    <edge source="Get a Subscription Update Payment Link" target="salable">
      <data key="d4">The variable salable is used to call the Get a Subscription Update Payment Link function from the Salable API client.</data>
      <data key="d5">object instantiation, function call</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_310437ff88c214d922e257631db6a72d</data>
    </edge>
    <edge source="salable" target="Get One Event">
      <data key="d4">salable is used to call the Get One Event function, demonstrating how to interact with the Salable API.</data>
      <data key="d5">API usage, function call</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ddaf4e6518a73006b4437f10458e27ba</data>
    </edge>
    <edge source="proration" target="Remove Subscription Seats">
      <data key="d4">The proration variable influences the billing behavior when seats are removed, affecting the implementation of the Remove Subscription Seats function.</data>
      <data key="d5">billing mechanism, optional parameter</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </edge>
    <edge source="proration" target="changeSubscriptionPlan">
      <data key="d4">The proration variable influences the behaviour of billing when the changeSubscriptionPlan function is invoked.</data>
      <data key="d5">billing adjustments, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2</data>
    </edge>
    <edge source="proration" target="proration_details">
      <data key="d4">Proration indicates whether proration is applicable, while proration_details provides additional specifics on that proration.</data>
      <data key="d5">conditional relationship, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </edge>
    <edge source="proration" target="IncrementSubscriptionSeats">
      <data key="d4">The proration variable influences how increments affect billing, particularly when the subscription plan changes during the operation.</data>
      <data key="d5">billing relationship</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </edge>
    <edge source="proration" target="decrementSubscriptionSeats">
      <data key="d4">proration settings affect the behavior of the decrementSubscriptionSeats function when changing subscription plans.</data>
      <data key="d5">configuration impact, billing behavior</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_0b9474a6f5a5fdb347caada72f379c22</data>
    </edge>
    <edge source="update Subscription's plan endpoint" target="change Subscription plan endpoint">
      <data key="d4">The update Subscription's plan endpoint has been deprecated and replaced by the change Subscription plan endpoint, which provides improved functionality.</data>
      <data key="d5">endpoint evolution, API updates</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </edge>
    <edge source="checkout links" target="get Plan checkout link endpoint">
      <data key="d4">The feature of checkout links has been transitioned to dynamic fetching via the get Plan checkout link endpoint, enhancing performance.</data>
      <data key="d5">feature transition, performance improvement</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_bfeabcdea4ebc07da01c01c414fe8160</data>
    </edge>
    <edge source="Get a Subscription Payment Method" target="Subscription Payment Method Object">
      <data key="d4">The Subscription Payment Method Object represents the return value from the Get a Subscription Payment Method function, detailing the format of the data received.</data>
      <data key="d5">return type, structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a4b8e11006d615b209673feede32f6c5</data>
    </edge>
    <edge source="Subscription Object" target="Get One Subscription">
      <data key="d4">Subscription Object defines the expected data returned by the Get One Subscription function, referenced in the API documentation.</data>
      <data key="d5">data structure, API documentation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a019e4a9249294b3ee673d179bd32d72</data>
    </edge>
    <edge source="Subscription Object" target="Get Switchable Plans for a Subscribed User">
      <data key="d4">The function Get Switchable Plans for a Subscribed User relies on the structure defined by the Subscription Object to return relevant data.</data>
      <data key="d5">data retrieval, structure dependency</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9e7d62a87ad119e8af876e0901542e69</data>
    </edge>
    <edge source="Subscription Object" target="Change a Subscription's Plan">
      <data key="d4">Changing a subscription's plan interacts with the structure defined by the Subscription Object interface.</data>
      <data key="d5">interaction, structure definition</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a</data>
    </edge>
    <edge source="Get Cancel Subscription Link" target="Cancel Subscription Link Object">
      <data key="d4">The response from the Get Cancel Subscription Link API conforms to the structure defined in the Cancel Subscription Link Object configuration.</data>
      <data key="d5">response structure, API documentation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_75226dd1c0681dee658c82abefbedb30</data>
    </edge>
    <edge source="Remove Subscription Seats" target="decrement">
      <data key="d4">The decrement variable specifies how many seats to remove within the Remove Subscription Seats function, making it crucial for its execution.</data>
      <data key="d5">function parameter, execution detail</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </edge>
    <edge source="Remove Subscription Seats" target="Remove SubscriptionSeatsOption">
      <data key="d4">The RemoveSubscriptionSeatsOption configuration provides additional options for customizing the behavior of the Remove Subscription Seats function.</data>
      <data key="d5">configuration support, customization</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_eb980ddfe99dddb529d8107a56a3e090</data>
    </edge>
    <edge source="decrement" target="decrementSubscriptionSeats">
      <data key="d4">decrement is a necessary parameter for the decrementSubscriptionSeats function, indicating how many seats to remove.</data>
      <data key="d5">operation parameters, function requirement</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_0b9474a6f5a5fdb347caada72f379c22</data>
    </edge>
    <edge source="Cancel a Subscription" target="CancelSubscriptionOptions">
      <data key="d4">The function Cancel a Subscription utilizes CancelSubscriptionOptions to determine how the cancellation occurs.</data>
      <data key="d5">configuration usage, function parameter</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce</data>
    </edge>
    <edge source="Cancel a Subscription" target="when">
      <data key="d4">Cancel a Subscription function allows the when variable to dictate how the cancellation is executed, either immediately or later.</data>
      <data key="d5">function configuration, timing control</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00</data>
    </edge>
    <edge source="Cancel a Subscription" target="apiKey">
      <data key="d4">The Cancel a Subscription function is secured with an apiKey, which is necessary to perform the operation.</data>
      <data key="d5">security requirement, access control</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00</data>
    </edge>
    <edge source="CancelSubscriptionOptions" target="when">
      <data key="d4">CancelSubscriptionOptions includes the variable when which specifies the timing of the subscription cancellation.</data>
      <data key="d5">option specification, configuration detail</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce</data>
    </edge>
    <edge source="Get a Customer Portal Link for a Subscription" target="Subscription Portal Link Object">
      <data key="d4">The function aims to return a Subscription Portal Link Object, establishing a direct connection between the function and its expected output.</data>
      <data key="d5">function outcome, API response</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d9c1267809cd58cbd21415af67a458ab</data>
    </edge>
    <edge source="Get a Customer Portal Link for a Subscription" target="await salable.subscriptions.getOne">
      <data key="d4">The function call await salable.subscriptions.getOne is a part of the process in executing the main function that retrieves the customer portal link.</data>
      <data key="d5">execution flow, function involvement</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d9c1267809cd58cbd21415af67a458ab</data>
    </edge>
    <edge source="Update Subscription" target="Subscription update">
      <data key="d4">Update Subscription is a function that implements the Subscription update feature in the Salable API.</data>
      <data key="d5">implementation, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d979fc2428d484e09ae3b62b942d5968</data>
    </edge>
    <edge source="Get One Pricing Table" target="pricingTableUuid">
      <data key="d4">pricingTableUuid is essential for the Get One Pricing Table function, as it specifies which pricing table to retrieve.</data>
      <data key="d5">required parameter, function dependency</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d96e80b895dea6915b51ebb69acff797</data>
    </edge>
    <edge source="Get One Pricing Table" target="Return Type">
      <data key="d4">Return Type describes the output structure of the Get One Pricing Table function, indicating what data is expected in response.</data>
      <data key="d5">interface specification, function result</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d96e80b895dea6915b51ebb69acff797</data>
    </edge>
    <edge source="pricingTableUuid" target="SessionCreatePricingTableRequest">
      <data key="d4">SessionCreatePricingTableRequest can utilize pricingTableUuid to display a specific pricing table based on user requirements.</data>
      <data key="d5">dependency, session configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c</data>
    </edge>
    <edge source="pricingTableUuid" target="plans">
      <data key="d4">The plans setting references the pricingTableUuid to link different plans to their pricing structures."+</data>
      <data key="d5">association, pricing structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </edge>
    <edge source="Create Session" target="CreateSessionInput">
      <data key="d4">CreateSessionInput serves as the required input for the Create Session method, detailing the parameters necessary for execution.</data>
      <data key="d5">input requirements, functional dependency</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7</data>
    </edge>
    <edge source="Create Session" target="SessionScope.PricingTable">
      <data key="d4">SessionScope.PricingTable is utilized within the Create Session function to determine the session's operational context.</data>
      <data key="d5">context specification, scope usage</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7</data>
    </edge>
    <edge source="Get One Event" target="eventUuid">
      <data key="d4">The eventUuid parameter is a crucial input for the Get One Event function, required for successfully retrieving an event.</data>
      <data key="d5">function parameter, necessity</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ddaf4e6518a73006b4437f10458e27ba</data>
    </edge>
    <edge source="Get One Event" target="Event Object">
      <data key="d4">The Event Object in the API documentation serves as the return type for the Get One Event function, detailing the expected output format.</data>
      <data key="d5">function output, documentation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_ddaf4e6518a73006b4437f10458e27ba</data>
    </edge>
    <edge source="getGrantee" target="capabilities">
      <data key="d4">getGrantee retrieves the capabilities associated with a specific grantee via the Salable API.</data>
      <data key="d5">API interaction, capability retrieval</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </edge>
    <edge source="getGrantee" target="your-products-uuid">
      <data key="d4">The product UUID is required as a parameter for the getGrantee function to check capabilities associated with that product.</data>
      <data key="d5">parameter usage, API query</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </edge>
    <edge source="getGrantee" target="your-grantees-id">
      <data key="d4">The grantee's ID is essential for querying the specific capabilities of a grantee using the getGrantee function.</data>
      <data key="d5">specific query, API interaction</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd</data>
    </edge>
    <edge source="getGrantee" target="License check">
      <data key="d4">License check utilizes getGrantee to verify if users have access rights based on their purchased licenses.</data>
      <data key="d5">verification, access control</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </edge>
    <edge source="getGrantee" target="hasCapability">
      <data key="d4">getGrantee outputs the hasCapability variable to indicate whether the user can perform specific actions based on their capabilities.</data>
      <data key="d5">capability assessment, licensing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </edge>
    <edge source="capabilities" target="License check">
      <data key="d4">License check outputs the capabilities variable to retrieve user permissions associated with the licenses they possess.</data>
      <data key="d5">access control, user permissions</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b2fd5f6d47556cbfaceb821af5580333</data>
    </edge>
    <edge source="capabilities" target="verifyLicenseCheck">
      <data key="d4">The capabilities parameter is used in the verification process of verifyLicenseCheck to ensure the signature is valid for the expected capabilities.</data>
      <data key="d5">function parameter, signature verification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </edge>
    <edge source="capabilities" target="window.crypto.subtle.verify">
      <data key="d4">window.crypto.subtle.verify encodes capabilities into bytes, which are used in the verification process.</data>
      <data key="d5">data encoding, verification process</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </edge>
    <edge source="capabilities" target="LicenseCheck">
      <data key="d4">LicenseCheck function utilizes capabilities as part of its properties to determine what the license can do.</data>
      <data key="d5">functionality, capability use</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_aec59c84e38b8bb0a72122b3e79c8052</data>
    </edge>
    <edge source="capabilities" target="LicenseCurrentUsage">
      <data key="d4">LicenseCurrentUsage tracks the number of units based on the capabilities defined, influencing how licenses are utilized.</data>
      <data key="d5">usage tracking, impact</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_aec59c84e38b8bb0a72122b3e79c8052</data>
    </edge>
    <edge source="capabilities" target="capabilityUuid">
      <data key="d4">capabilities includes capabilityUuid as part of its structure, establishing a connection between capabilities and specific UUIDs.</data>
      <data key="d5">inclusion, data structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_705dce653f2c9226ed4a8be4b289581b</data>
    </edge>
    <edge source="getCheckoutLink" target="checkoutUrl">
      <data key="d4">getCheckoutLink generates a checkoutUrl for processes related to payment from the user's input parameters.</data>
      <data key="d5">payment processing</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d9e1d76334e0264800ec30320373ba71</data>
    </edge>
    <edge source="checkoutUrl" target="getPlanCheckoutLink">
      <data key="d4">getPlanCheckoutLink generates a checkoutUrl, which is the output of the function when called successfully.</data>
      <data key="d5">output generation, process flow</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_ddc9e4fbd355f7d9a819edc36d148407</data>
    </edge>
    <edge source="quantity" target="Plan checkout link">
      <data key="d4">The quantity variable is a part of the data input used when creating a Plan checkout link, impacting the checkout process.</data>
      <data key="d5">checkout process, input data</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b70787affc67ce541e7d959da486303e</data>
    </edge>
    <edge source="active" target="price">
      <data key="d4">The active status of the price object determines its usability in transactions, indicating its current state.</data>
      <data key="d5">usability, transaction status</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </edge>
    <edge source="Add Seats" target="Free Plan">
      <data key="d4">Add Seats function takes into account whether the plan is free or paid based on the implementation requirements.</data>
      <data key="d5">subscription handling, plan differentiation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </edge>
    <edge source="Add Seats" target="Paid Subscription">
      <data key="d4">Add Seats function applies to both free and paid subscriptions for managing the number of active seats in a plan.</data>
      <data key="d5">subscription handling, capacity expansion</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </edge>
    <edge source="Remove Seats" target="Free Plan">
      <data key="d4">Remove Seats function applies to unassigned seats only, relevant to Free Plan usage for managing subscription limits.</data>
      <data key="d5">subscription handling, plan differentiation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </edge>
    <edge source="Remove Seats" target="Paid Subscription">
      <data key="d4">Remove Seats function applies to paid subscription contexts, enabling management of assigned seats.</data>
      <data key="d5">subscription handling, capacity reduction</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_58ff1c48dee01d0183a336f780b53149</data>
    </edge>
    <edge source="Free Plan" target="Trial Period">
      <data key="d4">The Free Plan can have a Trial Period attached to allow users to test the plan before purchasing.</data>
      <data key="d5">trial, testing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </edge>
    <edge source="Free Plan" target="Usage">
      <data key="d4">Usage is a variable that affects how the Free Plan's billing is structured, particularly in terms of feature utilization.</data>
      <data key="d5">billing structure, usage</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </edge>
    <edge source="Free Plan" target="Assign Values Tab">
      <data key="d4">The Assign Values Tab is where users assign values relevant for features tied to the Free Plan.</data>
      <data key="d5">feature assignment, configuration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dcbbc112726c43262b223ebfe3ca030b</data>
    </edge>
    <edge source="subscriptions.cancel" target="'your-subscription-uuid'">
      <data key="d4">The subscription UUID is required as an argument in the subscriptions.cancel function to specify which subscription to cancel.</data>
      <data key="d5">parameter usage, functionality</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </edge>
    <edge source="subscriptions.cancel" target="'when'">
      <data key="d4">The 'when' parameter determines how the cancellation request is processed within the subscriptions.cancel function.</data>
      <data key="d5">cancellation timing, process</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2</data>
    </edge>
    <edge source="Parameter" target="Variable Name">
      <data key="d4">Variable Name is a specific Parameter that must be defined to correctly reference the variable in the API during feature creation.</data>
      <data key="d5">reference definition, API</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e2c009bde3f9c48c2520232d0990c9fa</data>
    </edge>
    <edge source="Variable Name" target="Feature Description">
      <data key="d4">Variable Name is another integral component of the Feature Description that defines the technical name used in code.</data>
      <data key="d5">technical naming, identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Feature Description" target="Display Name">
      <data key="d4">Display Name is a crucial part of the Feature Description that specifies how the feature will be identified in user interfaces.</data>
      <data key="d5">user interface, identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Feature Description" target="Default Value">
      <data key="d4">Default Value is referenced in the Feature Description to specify what value the feature will have by default.</data>
      <data key="d5">initial settings, feature characteristics</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Feature Description" target="Updated At">
      <data key="d4">Updated At is crucial for the Feature Description as it reflects when any changes were made to the feature details.</data>
      <data key="d5">version control, change management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Feature Description" target="Sort Order">
      <data key="d4">Sort Order is relevant to the Feature Description by determining the order in which the feature appears in listings or menus.</data>
      <data key="d5">organization, display order</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Feature Description" target="Feature Enum Options">
      <data key="d4">Feature Enum Options are included in the Feature Description to provide additional configuration possibilities for the feature.</data>
      <data key="d5">configuration options, extended features</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1c04b1c5e30972f3289d5a41f2049659</data>
    </edge>
    <edge source="Create Feature" target="Features Tab">
      <data key="d4">"Create Feature is performed within the context of the Features Tab, linking the function to the interface used.")</data>
      <data key="d5">function interface relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_30cc79a13c79866d5507321347cb20a7</data>
    </edge>
    <edge source="Get subscriptions current payment method" target="payment-method API">
      <data key="d4">The function Get subscriptions current payment method interacts with the payment-method API to retrieve payment details based on a subscription UUID.</data>
      <data key="d5">functionality, API interaction</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5ebe47a66fffe70faec5fc051e3e9666</data>
    </edge>
    <edge source="Get an 'update payment method' link" target="payment-method API">
      <data key="d4">The function Get an 'update payment method' link uses the payment-method API to generate a link for updating payment methods.</data>
      <data key="d5">functionality, API interaction</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5ebe47a66fffe70faec5fc051e3e9666</data>
    </edge>
    <edge source="Create Pricing Table" target="Add Plans">
      <data key="d4">During the process of creating a pricing table, the Add Plans feature assists users in selecting different plans to include.</data>
      <data key="d5">configuration options, selection process</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce</data>
    </edge>
    <edge source="Create Pricing Table" target="Feature Order">
      <data key="d4">The Feature Order feature is utilized in conjunction with the Create Pricing Table function to organize features of selected plans.</data>
      <data key="d5">organization, feature arrangement</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce</data>
    </edge>
    <edge source="Feature Order" target="Features Tab">
      <data key="d4">"Feature Order determines how features are displayed on the Features Tab, indicating a direct relationship between configuration and interface.")</data>
      <data key="d5">configuration interface</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_30cc79a13c79866d5507321347cb20a7</data>
    </edge>
    <edge source="Salable Pricing Table Web Component" target="createSession">
      <data key="d4">createSession is an API that facilitates the creation of sessions required to utilize the Salable Pricing Table Web Component, making them interdependent.</data>
      <data key="d5">session management, API integration</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="Salable Pricing Table Web Component" target="global-success-url">
      <data key="d4">global-success-url is a configuration option that affects how the Salable Pricing Table Web Component behaves after a successful session.</data>
      <data key="d5">configuration impact, session behavior</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="Salable Pricing Table Web Component" target="global-cancel-url">
      <data key="d4">global-cancel-url sets the behavior of the Salable Pricing Table Web Component when a session is canceled.</data>
      <data key="d5">configuration impact, session behavior</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="Salable Pricing Table Web Component" target="global-grantee-id">
      <data key="d4">global-grantee-id is linked to the Salable Pricing Table Web Component as it identifies the involved grantee during session operations.</data>
      <data key="d5">session management, user identification</data>
      <data key="d6">12.0</data>
      <data key="d7">excerpt_id_dcb04584bdf965125367de7881cf4516</data>
    </edge>
    <edge source="global-success-url" target="SalablePricingTable">
      <data key="d4">SalablePricingTable utilizes global-success-url to direct users upon successful transaction completion.</data>
      <data key="d5">user navigation, success handling</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_76f2bf224d3111fcdb908c47e3e64890</data>
    </edge>
    <edge source="global-cancel-url" target="SalablePricingTable">
      <data key="d4">SalablePricingTable utilizes global-cancel-url to manage redirect upon cancellation of transactions.</data>
      <data key="d5">user navigation, cancellation handling</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_76f2bf224d3111fcdb908c47e3e64890</data>
    </edge>
    <edge source="global-grantee-id" target="SalablePricingTable">
      <data key="d4">SalablePricingTable incorporates global-grantee-id to ensure the correct identification of the grantee in transactions.</data>
      <data key="d5">transaction processing, identification</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_76f2bf224d3111fcdb908c47e3e64890</data>
    </edge>
    <edge source="Plans Tab" target="Add Plan">
      <data key="d4">The Plans Tab contains the Add Plan function, enabling users to create new plans for their products.</data>
      <data key="d5">functionality, user interaction</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </edge>
    <edge source="Add Plan" target="Plan Slug">
      <data key="d4">The Plan Slug variable is necessary for referencing the plan across the API and SDKs when using the Add Plan function.</data>
      <data key="d5">data input, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </edge>
    <edge source="Add Plan" target="Plan Description">
      <data key="d4">The Plan Description variable provides contextual information for users when creating a new plan through Add Plan.</data>
      <data key="d5">data description, user guidance</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </edge>
    <edge source="License Type Section" target="Standard Plans">
      <data key="d4">The License Type Section defines how Standard Plans operate in terms of subscription cycles and feature sets.</data>
      <data key="d5">plan categorization, configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </edge>
    <edge source="License Type Section" target="Coming Soon Plans">
      <data key="d4">The License Type Section includes options relevant to Coming Soon Plans, indicating their positioning in the pricing table.</data>
      <data key="d5">plan categorization, configuration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_ec35536b3d41d59d2de737f1e2874f82</data>
    </edge>
    <edge source="Edit Pricing Table" target="Actions menu">
      <data key="d4">The Actions menu interface provides access to the Edit Pricing Table function, linking the interface to the capability to edit pricing tables.</data>
      <data key="d5">interface functionality, user interaction</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_2606a25588f8e8e2ee794116e597f0bd</data>
    </edge>
    <edge source="SalablePricingTable" target="globalSuccessUrl">
      <data key="d4">The SalablePricingTable component utilizes the globalSuccessUrl for redirecting users post-transaction success.</data>
      <data key="d5">redirection, configuration</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401</data>
    </edge>
    <edge source="SalablePricingTable" target="globalCancelUrl">
      <data key="d4">The SalablePricingTable component uses the globalCancelUrl to manage user redirection upon transaction cancellation.</data>
      <data key="d5">redirection, configuration</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401</data>
    </edge>
    <edge source="SalablePricingTable" target="globalGranteeId">
      <data key="d4">The SalablePricingTable component integrates globalGranteeId for transaction-specific information related to the pricing table.</data>
      <data key="d5">contextual information, dependency</data>
      <data key="d6">12.0</data>
      <data key="d7">excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401</data>
    </edge>
    <edge source="SalablePricingTable" target="SalablePricingTableDemo">
      <data key="d4">SalablePricingTableDemo utilizes the SalablePricingTable component to display pricing information based on provided variables.</data>
      <data key="d5">component usage, demonstration</data>
      <data key="d6">18.0</data>
      <data key="d7">excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </edge>
    <edge source="Usage" target="CursorPaginationLicensesUsageRecordsResponse">
      <data key="d4">CursorPaginationLicensesUsageRecordsResponse provides necessary data that supports the Usage feature, creating a functional relationship.</data>
      <data key="d5">data management, usage tracking</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac</data>
    </edge>
    <edge source="Usage" target="Events">
      <data key="d4">Both Usage and Events represent operational functionalities that play essential roles in system interactions and tracking.</data>
      <data key="d5">system operations, functionality</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </edge>
    <edge source="Usage" target="getCurrentLicenseUsage">
      <data key="d4">getCurrentLicenseUsage is a function that directly interacts with the Usage feature to retrieve license usage records.</data>
      <data key="d5">functionality, access</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </edge>
    <edge source="YOUR_SALABLE_API_KEY" target="https://api.salable.app/licenses/check">
      <data key="d4">YOUR_SALABLE_API_KEY is required for making requests to the API endpoint for license checks.</data>
      <data key="d5">api access, authentication</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </edge>
    <edge source="https://api.salable.app/licenses/check" target="grace">
      <data key="d4">"The grace parameter can be included in the API request to adjust the license capability check parameters."&lt;</data>
      <data key="d5">flexibility, license management</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </edge>
    <edge source="ECDSA Encryption and Signatures" target="signature check">
      <data key="d4">ECDSA encryption is used to create signatures, which are then verified in the signature check function for license verification.</data>
      <data key="d5">cryptography, security</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </edge>
    <edge source="public key" target="signature check">
      <data key="d4">The public key is essential for validating the signature check function to ensure the license data is authentic.</data>
      <data key="d5">authentication, validation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_7afe2e3cf72d8910689510b5002270c3</data>
    </edge>
    <edge source="Authentication" target="Quick Start">
      <data key="d4">The Quick Start section includes the process for setting up Authentication as an essential step for using the Salable API.</data>
      <data key="d5">initial setup, user guidance</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1447c9ad088ee587d295240cee723646</data>
    </edge>
    <edge source="HTTP Endpoints" target="Standard HTTP Status Codes">
      <data key="d4">HTTP Endpoints return responses that adhere to Standard HTTP Status Codes, ensuring users can understand the outcomes of their requests.</data>
      <data key="d5">response handling, communication standards</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_1447c9ad088ee587d295240cee723646</data>
    </edge>
    <edge source="Change Plan Endpoint" target="Upgrade Example">
      <data key="d4">The Upgrade Example provides practical use of the Change Plan Endpoint to demonstrate how to upgrade a subscription.</data>
      <data key="d5">practical application, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </edge>
    <edge source="Change Plan Endpoint" target="Downgrade Example">
      <data key="d4">The Downgrade Example details another usage of the Change Plan Endpoint for downgrading subscriptions, showing its versatility.</data>
      <data key="d5">practical application, subscription management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a873e2cace623f12f690b112f35aa4f7</data>
    </edge>
    <edge source="automaticTax" target="Plan checkout link">
      <data key="d4">The automaticTax variable plays a role in how tax is calculated during the checkout process linked to the Plan checkout link.</data>
      <data key="d5">checkout process, billing</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b70787affc67ce541e7d959da486303e</data>
    </edge>
    <edge source="verifyLicenseCheck" target="importPublicKey">
      <data key="d4">verifyLicenseCheck calls importPublicKey to prepare the public key for signature verification.</data>
      <data key="d5">function dependency, cryptographic process</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </edge>
    <edge source="verifyLicenseCheck" target="signature">
      <data key="d4">verifyLicenseCheck uses the signature variable to confirm its validity against the public key and capabilities.</data>
      <data key="d5">signature verification, process flow</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </edge>
    <edge source="importPublicKey" target="publicKey">
      <data key="d4">importPublicKey results in the creation of a publicKey variable that contains the imported public key.</data>
      <data key="d5">data handling, public key processing</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </edge>
    <edge source="stringToArrayBuffer" target="hexStringToUint8Array">
      <data key="d4">stringToArrayBuffer is utilized to transform data to binary, while hexStringToUint8Array specifically handles hexadecimal strings to binary arrays.</data>
      <data key="d5">data transformation, utility functions</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_532dad11736e05ba4a1c64103447a997</data>
    </edge>
    <edge source="publicKey" target="window.crypto.subtle.verify">
      <data key="d4">window.crypto.subtle.verify uses the publicKey variable as part of the digital signature verification process.</data>
      <data key="d5">verification process, cryptography</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </edge>
    <edge source="publicKey" target="rawSignature">
      <data key="d4">rawSignature is validated against the publicKey to ensure the signature's authenticity.</data>
      <data key="d5">authentication, cryptography</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </edge>
    <edge source="signature" target="LicenseCheck">
      <data key="d4">LicenseCheck uses the signature within its process to validate capabilities and ensure secure execution.</data>
      <data key="d5">security, validation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_aec59c84e38b8bb0a72122b3e79c8052</data>
    </edge>
    <edge source="ECDSA" target="SHA-256">
      <data key="d4">ECDSA can utilize SHA-256 as the hashing algorithm in its signature verification process.</data>
      <data key="d5">signature algorithm, hashing</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </edge>
    <edge source="API Endpoint" target="cURL Request">
      <data key="d4">The cURL Request demonstrates how to interact with the API Endpoint for the removeSeats function.</data>
      <data key="d5">interfacing, example usage</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f</data>
    </edge>
    <edge source="globalSuccessUrl" target="globalCancelUrl">
      <data key="d4">Both globalCancelUrl and globalSuccessUrl are required variables that dictate user redirection based on transaction success or failure.:|:Both globalSuccessUrl and globalCancelUrl are used in the context of user actions, guiding users to their respective outcomes based on their choices.</data>
      <data key="d5">redirection, transaction handling:|:user journey, navigation</data>
      <data key="d6">30.0</data>
      <data key="d7">excerpt_id_ef01641492d489ead5f4ed24b22dc924:|:excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1</data>
    </edge>
    <edge source="globalSuccessUrl" target="perPlanSuccessUrls">
      <data key="d4">globalSuccessUrl serves as a general variable for directing successful purchases, while perPlanSuccessUrls provides specific success URLs for individual plans.</data>
      <data key="d5">redirection, configuration</data>
      <data key="d6">14.0</data>
      <data key="d7">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </edge>
    <edge source="400" target="getPlanCheckoutLink">
      <data key="d4">The 400 status code is a response indicating a potential error when calling the getPlanCheckoutLink function, showing a relationship through error handling.</data>
      <data key="d5">error handling, status indication</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_ddc9e4fbd355f7d9a819edc36d148407</data>
    </edge>
    <edge source="400" target="Get a Customer Portal Link">
      <data key="d4">The response code 400 signifies a Bad Request that may arise while using the Get a Customer Portal Link function, indicating a problem with the request.</data>
      <data key="d5">error handling, request validation</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_a9f412b9d897ad9489864c063036ab9a</data>
    </edge>
    <edge source="404" target="Get a Customer Portal Link">
      <data key="d4">The response code 404 indicates that the requested resource could not be found, which can occur when accessing the Get a Customer Portal Link function.</data>
      <data key="d5">error handling, resource not found</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_a9f412b9d897ad9489864c063036ab9a</data>
    </edge>
    <edge source="window.crypto.subtle.verify" target="rawSignature">
      <data key="d4">window.crypto.subtle.verify utilizes rawSignature to verify the authenticity of the generated signature.</data>
      <data key="d5">verification process, signature validation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d</data>
    </edge>
    <edge source="api.salable.app" target="apiKey">
      <data key="d4">api.salable.app uses apiKey as a method for authenticating API requests through a header parameter.</data>
      <data key="d5">authentication, security</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="VersionHeader">
      <data key="d4">VersionHeader is a required parameter for requests made to api.salable.app, ensuring the correct API version is used.</data>
      <data key="d5">parameter requirement, versioning</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="UniqueKey">
      <data key="d4">UniqueKey is a required parameter for requests to api.salable.app, helping to ensure idempotence in the API calls.</data>
      <data key="d5">parameter requirement, idempotency</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="ProductUuidPathParam">
      <data key="d4">ProductUuidPathParam is necessary for api.salable.app to identify a specific product in its requests.</data>
      <data key="d5">parameter requirement, resource identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="ProductUuidQueryParam">
      <data key="d4">ProductUuidQueryParam serves a similar function to ProductUuidPathParam for product identification in queries.</data>
      <data key="d5">parameter requirement, resource identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="PlanUuidPathParam">
      <data key="d4">PlanUuidPathParam is a required parameter for api.salable.app to identify a specific plan in requests.</data>
      <data key="d5">parameter requirement, resource identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="EventUuidPathParam">
      <data key="d4">EventUuidPathParam is required for identifying specific events in the context of api.salable.app requests.</data>
      <data key="d5">parameter requirement, resource identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="SubscriptionUuidPathParam">
      <data key="d4">SubscriptionUuidPathParam is necessary for api.salable.app to manage subscriptions through specific identifiers.</data>
      <data key="d5">parameter requirement, resource management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="SubscriptionUuidQueryParam">
      <data key="d4">SubscriptionUuidQueryParam provides additional functionality for managing subscriptions through queries to the service.</data>
      <data key="d5">parameter functionality, resource management</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="api.salable.app" target="LicenseUuidPathParam">
      <data key="d4">LicenseUuidPathParam is a required parameter for api.salable.app to manage licenses related to resources.</data>
      <data key="d5">parameter requirement, resource management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_dc525bd2329c111af82010ba09911981</data>
    </edge>
    <edge source="apiKey" target="Get Product Features">
      <data key="d4">apiKey is necessary to authorize the Get Product Features function, ensuring secure access to the feature data.</data>
      <data key="d5">authentication, security</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23</data>
    </edge>
    <edge source="apiKey" target="getLicenseByUuid">
      <data key="d4">The apiKey configuration is required for secure access to the getLicenseByUuid operation, allowing users to fetch license data.</data>
      <data key="d5">security, access control</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4</data>
    </edge>
    <edge source="apiKey" target="decrementSubscriptionSeats">
      <data key="d4">decrementSubscriptionSeats requires an apiKey for secure execution, establishing a protected connection to the API.</data>
      <data key="d5">security, authorization</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_0b9474a6f5a5fdb347caada72f379c22</data>
    </edge>
    <edge source="apiKey" target="getCurrentLicenseUsage">
      <data key="d4">apiKey is required for the getCurrentLicenseUsage function to ensure secure access to usage data.</data>
      <data key="d5">security, access control</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </edge>
    <edge source="VersionHeader" target="Get Product Features">
      <data key="d4">Get Product Features utilizes the VersionHeader to ensure the correct version of the API is being accessed.</data>
      <data key="d5">versioning, functional dependency</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23</data>
    </edge>
    <edge source="VersionHeader" target="Plan Capabilities">
      <data key="d4">VersionHeader is utilized to maintain compatibility when retrieving Plan Capabilities, showing its integral role in API requests.</data>
      <data key="d5">compatibility, API structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </edge>
    <edge source="VersionHeader" target="Licenses Endpoint">
      <data key="d4">The VersionHeader parameter is part of the Licenses Endpoint, indicating which API version is being used.</data>
      <data key="d5">versioning, compatibility</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_93a1bdd9071867235ec2537127127c00</data>
    </edge>
    <edge source="VersionHeader" target="getLicensesCount">
      <data key="d4">getLicensesCount function utilizes the VersionHeader parameter to ensure the correct API version is called.</data>
      <data key="d5">versioning, API call</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </edge>
    <edge source="VersionHeader" target="updateLicense">
      <data key="d4">VersionHeader is a parameter required by the updateLicense function, establishing a necessary link in the API request.</data>
      <data key="d5">parameter-function association</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </edge>
    <edge source="VersionHeader" target="getLicensesByGranteeId">
      <data key="d4">getLicensesByGranteeId requires VersionHeader to ensure the correct API version is utilized in the request.</data>
      <data key="d5">version control, function requirements</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_8f76cec6c3c5c205e09868b54019ae7b</data>
    </edge>
    <edge source="VersionHeader" target="cancelLicenses">
      <data key="d4">"The function cancelLicenses uses VersionHeader as a required parameter for executing the API call.")</data>
      <data key="d5">requirement, API call</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a8a1a1f7699cb50324dc4207ba11c6e6</data>
    </edge>
    <edge source="VersionHeader" target="Get Subscription Cancel Link">
      <data key="d4">The Get Subscription Cancel Link API requires the VersionHeader variable to determine the API version being used.</data>
      <data key="d5">parameter usage, versioning</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </edge>
    <edge source="VersionHeader" target="Get License Usage">
      <data key="d4">VersionHeader is a required parameter for the Get License Usage function, indicating the API version being used.</data>
      <data key="d5">parameter dependency, versioning</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="VersionHeader" target="getPricingTableByUuid">
      <data key="d4">VersionHeader is a required parameter for the function getPricingTableByUuid, influencing the API's behavior.</data>
      <data key="d5">parameter dependency, API versioning</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </edge>
    <edge source="ProductUuidPathParam" target="Get Product Features">
      <data key="d4">Get Product Features requires the ProductUuidPathParam to function properly, as it identifies the product of interest.</data>
      <data key="d5">parameter requirement, functional relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23</data>
    </edge>
    <edge source="ProductUuidPathParam" target="Get Product Capabilities">
      <data key="d4">Get Product Capabilities requires the ProductUuidPathParam to identify the specific product whose capabilities are being retrieved.</data>
      <data key="d5">parameter dependency, function requirement</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </edge>
    <edge source="PlanUuidPathParam" target="Plan Capabilities">
      <data key="d4">PlanUuidPathParam is utilized as a parameter in requests to obtain specific plan capabilities, linking the variable to the function.</data>
      <data key="d5">parameter use, function link</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </edge>
    <edge source="SubscriptionUuidPathParam" target="getSubscriptionByUuid">
      <data key="d4">The path parameter 'SubscriptionUuidPathParam' is necessary for the function 'getSubscriptionByUuid' to specify which subscription to retrieve.</data>
      <data key="d5">parameterization, function dependency</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </edge>
    <edge source="SubscriptionUuidPathParam" target="Get Payment Method">
      <data key="d4">Get Payment Method requires SubscriptionUuidPathParam to specify which subscription's payment method is being retrieved.</data>
      <data key="d5">dependency, specification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a</data>
    </edge>
    <edge source="SubscriptionUuidPathParam" target="Reactivate Subscription">
      <data key="d4">Reactivate Subscription also relies on SubscriptionUuidPathParam to determine which subscription is being reactivated.</data>
      <data key="d5">dependency, specification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a</data>
    </edge>
    <edge source="SubscriptionUuidQueryParam" target="getLicensesCount">
      <data key="d4">getLicensesCount uses SubscriptionUuidQueryParam to filter results based on subscription IDs.</data>
      <data key="d5">filtering, query parameters</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </edge>
    <edge source="LicenseUuidPathParam" target="PurchaserQueryParam">
      <data key="d4">Both LicenseUuidPathParam and PurchaserQueryParam are variables used in an API path to identify and filter licenses based on their owner.</data>
      <data key="d5">API parameters, license identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b</data>
    </edge>
    <edge source="LicenseUuidPathParam" target="cancelLicense">
      <data key="d4">LicenseUuidPathParam is a necessary parameter for executing the cancelLicense function, indicating its role in identifying licenses.</data>
      <data key="d5">parameter-function association</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </edge>
    <edge source="LicenseStatusQueryParam" target="SubscriptionStatusQueryParam">
      <data key="d4">LicenseStatusQueryParam and SubscriptionStatusQueryParam function to filter API calls based on the status of licenses and subscriptions respectively.</data>
      <data key="d5">filtering, API status</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b</data>
    </edge>
    <edge source="LicenseStatusQueryParam" target="getLicensesCount">
      <data key="d4">getLicensesCount allows filtering based on license statuses through the LicenseStatusQueryParam.</data>
      <data key="d5">filtering, query parameters</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </edge>
    <edge source="UsageStatusQueryParam" target="UsagePlanUuidQueryParam">
      <data key="d4">Both UsageStatusQueryParam and UsagePlanUuidQueryParam are variables used for filtering usage records in the API, representing different aspects of usage and plans.</data>
      <data key="d5">filtering, usage records</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b</data>
    </edge>
    <edge source="UsageStatusQueryParam" target="Get License Usage">
      <data key="d4">UsageStatusQueryParam influences the results returned by Get License Usage based on the status of usage records.</data>
      <data key="d5">status filtering, result influence</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="UsageTypeQueryParam" target="Get License Usage">
      <data key="d4">UsageTypeQueryParam helps refine the output of Get License Usage by filtering based on usage types.</data>
      <data key="d5">filtering, specificity</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="UsagePlanUuidQueryParam" target="Update License Usage">
      <data key="d4">UsagePlanUuidQueryParam is necessary to update the proper license associated with the license usage records.</data>
      <data key="d5">parameter requirement, operational context</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="UsageSubscriptionUuidQueryParam" target="Update License Usage">
      <data key="d4">UsageSubscriptionUuidQueryParam is utilized in updating usage, specifying the context of the subscription for the license.</data>
      <data key="d5">subscription context, update process</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="perPlanCancelUrls" target="perPlanSuccessUrls">
      <data key="d4">Both perPlanCancelUrls and perPlanSuccessUrls are configured to manage different URLs associated with specific plans, ensuring proper user flow management.</data>
      <data key="d5">URL management, plan configuration</data>
      <data key="d6">12.0</data>
      <data key="d7">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </edge>
    <edge source="perPlanSuccessUrls" target="isCustomPricingTable">
      <data key="d4">isCustomPricingTable indicates the presence of custom pricing, which may affect how perPlanSuccessUrls are used for those plans.</data>
      <data key="d5">customization, pricing</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_3e5aff90a7d27611da426420fa021bf0</data>
    </edge>
    <edge source="UsageSortQueryParam" target="Get License Usage">
      <data key="d4">UsageSortQueryParam allows for custom sorting of results yielded from the Get License Usage function.</data>
      <data key="d5">sorting, output organization</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="CursorQueryParam" target="CursorTakeQueryParam">
      <data key="d4">CursorQueryParam and CursorTakeQueryParam work together to manage pagination in data requests efficiently.</data>
      <data key="d5">pagination, data management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_aeed752a0854093562fcab1a2782b1b3</data>
    </edge>
    <edge source="CursorQueryParam" target="Get License Usage">
      <data key="d4">CursorQueryParam is used in Get License Usage for managing pagination in the results returned.</data>
      <data key="d5">pagination management, result formatting</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="CursorTakeQueryParam" target="Get License Usage">
      <data key="d4">CursorTakeQueryParam limits the number of records returned in the Get License Usage response.</data>
      <data key="d5">record limiting, output control</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="GraceQueryParam" target="GranteeIdQueryParam">
      <data key="d4">GraceQueryParam provides additional parameters that impact how grantee-related queries process information.</data>
      <data key="d5">query parameters, processing instructions</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_aeed752a0854093562fcab1a2782b1b3</data>
    </edge>
    <edge source="GranteeIdPathParam" target="getLicensesByGranteeId">
      <data key="d4">The function getLicensesByGranteeId uses GranteeIdPathParam to specify which grantee's licenses are being retrieved.</data>
      <data key="d5">parameter usage, function dependency</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8f76cec6c3c5c205e09868b54019ae7b</data>
    </edge>
    <edge source="GranteeIdQueryParam" target="GranteeIdsQueryParam">
      <data key="d4">GranteeIdQueryParam is for a single identifier, while GranteeIdsQueryParam supports multiple identifiers, linking them in query-based API interactions.</data>
      <data key="d5">identification, API interaction</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </edge>
    <edge source="SuccessUrlQueryParamRequired" target="GlobalSuccessUrlQueryParam">
      <data key="d4">Both variables relate to success redirection URLs and are required to ensure users are directed properly after transactions.</data>
      <data key="d5">url redirection, transaction success</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </edge>
    <edge source="CancelUrlQueryParamRequired" target="GlobalCancelUrlQueryParam">
      <data key="d4">Both variables are related as they handle failure redirection URLs and are crucial for user experience during transaction failures.</data>
      <data key="d5">url redirection, transaction failure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_8e922faee94e3720b6c80829911b9849</data>
    </edge>
    <edge source="MemberQueryParamRequired" target="SuccessUrlQueryParam">
      <data key="d4">MemberQueryParamRequired is essential for identifying the managing member, while SuccessUrlQueryParam facilitates navigating after a successful transaction.</data>
      <data key="d5">transaction flow, member management</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </edge>
    <edge source="SuccessUrlQueryParam" target="CancelUrlQueryParam">
      <data key="d4">CancelUrlQueryParam and SuccessUrlQueryParam both relate to handling outcomes of a transaction, directing users accordingly.</data>
      <data key="d5">transaction outcome, user navigation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </edge>
    <edge source="SuccessUrlQueryParam" target="CurrencyQueryParam">
      <data key="d4">CurrencyQueryParam sets the payment context while SuccessUrlQueryParam manages the success outcome navigation, linking financial aspects.</data>
      <data key="d5">financial context, transaction management</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </edge>
    <edge source="PromoCodeQueryParam" target="AllowPromoCodeQueryParam">
      <data key="d4">PromoCodeQueryParam and AllowPromoCodeQueryParam are related in managing how promo codes are handled during checkout.</data>
      <data key="d5">promo management, checkout process</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </edge>
    <edge source="CustomerEmailQueryParam" target="CustomerIdQueryParam">
      <data key="d4">CustomerEmailQueryParam and CustomerIdQueryParam work together to manage customer information in the checkout process.</data>
      <data key="d5">customer information, checkout efficiency</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_546bf9e2829fb44f8bceb9060b941373</data>
    </edge>
    <edge source="CurrencyQueryParam" target="getPricingTableByUuid">
      <data key="d4">CurrencyQueryParam is used in conjunction with getPricingTableByUuid to define the currency context of the pricing table data.</data>
      <data key="d5">currency specification, API interaction</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </edge>
    <edge source="Currencies" target="ExpandSubscriptionQueryParams">
      <data key="d4">ExpandSubscriptionQueryParams allows the expansion of resource fields related to currencies, linking query parameters with currency functionalities.</data>
      <data key="d5">query expansion, currency relationship</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </edge>
    <edge source="Currencies" target="ShowUnlimited">
      <data key="d4">ShowUnlimited indicates a feature that may relate to how currencies are handled, such as unlimited pricing options.</data>
      <data key="d5">feature functionality, pricing</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </edge>
    <edge source="ExpandProductQueryParams" target="CancelWhenQueryParam">
      <data key="d4">CancelWhenQueryParam may be used in conjunction with product-related queries to determine cancellation timing, demonstrating a procedural connection.</data>
      <data key="d5">conditional operation, configuration linkage</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_e10ea143ebb22deb97ff87ec309791a6</data>
    </edge>
    <edge source="paymentIntegrationProductId" target="Sample Product">
      <data key="d4">paymentIntegrationProductId serves as an important identifier for any payment integrations related to Sample Product.</data>
      <data key="d5">payment processing, integration</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1c13b52ff77353471ab9c278f922f502</data>
    </edge>
    <edge source="appType" target="Sample Product">
      <data key="d4">Sample Product's appType clarifies the nature of the application it represents, such as being CUSTOM.</data>
      <data key="d5">application type, product classification</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_1c13b52ff77353471ab9c278f922f502</data>
    </edge>
    <edge source="updatedAt" target="Event">
      <data key="d4">The updatedAt variable tracks the last modification date of the Event, indicating its recency and relevance.</data>
      <data key="d5">update tracking, relevance</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="updatedAt" target="LicenseCurrentUsage">
      <data key="d4">LicenseCurrentUsage includes an updatedAt timestamp to indicate the last recorded usage, ensuring currency of data.</data>
      <data key="d5">data integrity, timeliness</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_aec59c84e38b8bb0a72122b3e79c8052</data>
    </edge>
    <edge source="updatedAt" target="LicenseUsageRecord">
      <data key="d4">updatedAt reflects the last modification of the LicenseUsageRecord, important for auditing purposes.</data>
      <data key="d5">version control, change tracking</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </edge>
    <edge source="updatedAt" target="StripeInvoice">
      <data key="d4">The updatedAt property in StripeInvoice reflects when the invoice object's data was last modified, emphasizing its dynamic nature.</data>
      <data key="d5">data management, object lifecycle</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </edge>
    <edge source="updatedAt" target="capability">
      <data key="d4">capability includes updatedAt to indicate the last time the capability was updated.</data>
      <data key="d5">tracking, maintenance</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b5b087e2945918c40faadd1bcef0b6d2</data>
    </edge>
    <edge source="updatedAt" target="feature">
      <data key="d4">updatedAt provides information on when the feature was last modified, affecting its relevance.</data>
      <data key="d5">data management, modifications</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </edge>
    <edge source="isTest" target="Event">
      <data key="d4">The isTest variable indicates whether the Event is genuine or part of a simulation, influencing how it is handled.</data>
      <data key="d5">event handling, testing</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="name" target="ProductPricingTable">
      <data key="d4">The ProductPricingTable contains the name of the product as a variable indicating its designation.</data>
      <data key="d5">configuration details, product identification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </edge>
    <edge source="name" target="SubscriptionUpdatablePlan">
      <data key="d4">The SubscriptionUpdatablePlan API utilizes name as a key attribute to label each subscription plan.</data>
      <data key="d5">labeling, API structure</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </edge>
    <edge source="name" target="PricingTable">
      <data key="d4">name serves as the title or identifier for the PricingTable, crucial for recognition and differentiation.</data>
      <data key="d5">identification</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </edge>
    <edge source="name" target="description">
      <data key="d4">The description follows and elaborates on the name of the plan, providing users with critical information."+</data>
      <data key="d5">information, elaboration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f773342d97bc7f5f7350eac9c2b3518f</data>
    </edge>
    <edge source="description" target="ProductPricingTable">
      <data key="d4">The description variable provides additional information about an entry in the ProductPricingTable.</data>
      <data key="d5">additional information, configuration details</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </edge>
    <edge source="description" target="discount">
      <data key="d4">description provides context for the discount applied, indicating its relevance to the overall invoice content.</data>
      <data key="d5">invoice details, discount relevance</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </edge>
    <edge source="description" target="SubscriptionUpdatablePlan">
      <data key="d4">The description provides additional details about the SubscriptionUpdatablePlan, enhancing its documentation.</data>
      <data key="d5">documentation, API structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </edge>
    <edge source="OrganisationPaymentIntegration" target="Currency">
      <data key="d4">OrganisationPaymentIntegration may involve specifications of Currency to facilitate payment processes and account management.</data>
      <data key="d5">payment processing, currency specification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_292ab6a210a5d658e3c94cd9b3e02c1a</data>
    </edge>
    <edge source="Currency" target="PlanCurrency">
      <data key="d4">"PlanCurrency links a plan to its associated Currency, which details pricing and payment aspects.")</data>
      <data key="d5">financial relationship</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_4ce077a690e06fe23daada90c307e546</data>
    </edge>
    <edge source="Currency" target="ShortName">
      <data key="d4">Currency contains the ShortName as one of its properties, defining a simple identifier for the currency.</data>
      <data key="d5">currency representation, properties</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </edge>
    <edge source="Currency" target="LongName">
      <data key="d4">Currency includes the LongName property, which provides detailed information about the currency's name.</data>
      <data key="d5">currency representation, properties</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </edge>
    <edge source="Currency" target="Symbol">
      <data key="d4">Currency has a Symbol property that visually identifies the currency, completing its informational structure.</data>
      <data key="d5">currency representation, properties</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </edge>
    <edge source="Currency" target="currencyUuid">
      <data key="d4">Currency schema uses currencyUuid to distinguish between different currencies in the API responses.</data>
      <data key="d5">schema-attribute</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_90c759c4feb12e8e2b105cd945aeabd3</data>
    </edge>
    <edge source="Currency" target="defaultCurrency">
      <data key="d4">Currency schema includes defaultCurrency to specify if the currency is the default for the associated product.</data>
      <data key="d5">schema-attribute</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_90c759c4feb12e8e2b105cd945aeabd3</data>
    </edge>
    <edge source="ProductPricingTable" target="organisation">
      <data key="d4">The ProductPricingTable includes an organisation variable, which indicates the entity managing the product.</data>
      <data key="d5">management, configuration detail</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </edge>
    <edge source="ProductPricingTable" target="features">
      <data key="d4">The features array in ProductPricingTable contains various functionalities related to the product configuration.</data>
      <data key="d5">functionalities, product features</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </edge>
    <edge source="ProductPricingTable" target="plans">
      <data key="d4">The plans array directly relates to the available pricing options for the product within the ProductPricingTable.</data>
      <data key="d5">pricing options, configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1</data>
    </edge>
    <edge source="organisation" target="SubscriptionUpdatablePlan">
      <data key="d4">The organisation field connects the SubscriptionUpdatablePlan to a specific company or entity responsible for the subscription.</data>
      <data key="d5">association, organizational connection</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </edge>
    <edge source="organisation" target="Sample Product">
      <data key="d4">Sample Product is associated with an organisation that defines the entity behind it.</data>
      <data key="d5">product ownership, organisational representation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_1c13b52ff77353471ab9c278f922f502</data>
    </edge>
    <edge source="features" target="SubscriptionUpdatablePlan">
      <data key="d4">The features array outlines the various functionalities that the SubscriptionUpdatablePlan encompasses, making it customizable for users.</data>
      <data key="d5">customization, functionalities</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515</data>
    </edge>
    <edge source="features" target="PricingTable">
      <data key="d4">features array is defined as part of PricingTable, emphasizing the connection between the features of a plan and its pricing configuration.</data>
      <data key="d5">component relationship</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </edge>
    <edge source="features" target="Sample Product">
      <data key="d4">features are linked to Sample Product as different functionalities that enhance its capabilities.</data>
      <data key="d5">product features, functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_1c13b52ff77353471ab9c278f922f502</data>
    </edge>
    <edge source="features" target="featureUuid">
      <data key="d4">features refers to a collection of feature objects that each have a featureUuid indicating unique identification.</data>
      <data key="d5">identification, collection</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b5b087e2945918c40faadd1bcef0b6d2</data>
    </edge>
    <edge source="Event" target="type">
      <data key="d4">The type variable defines the category of the Event, thereby dictating its processing flow and functionalities.</data>
      <data key="d5">event categorization, processing</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="Event" target="retries">
      <data key="d4">The retries variable relates to how many attempts have been made to process the Event, revealing its reliability.</data>
      <data key="d5">reliability, performance</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="Event" target="errorMessage">
      <data key="d4">The errorMessage variable provides context on any issues encountered during Event processing, crucial for debugging.</data>
      <data key="d5">debugging, error handling</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="Event" target="errorCode">
      <data key="d4">The errorCode identifies specific errors in the Event processing, assisting in troubleshooting and resolution.</data>
      <data key="d5">troubleshooting, error identification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="Event" target="createdAt">
      <data key="d4">The createdAt variable denotes when the Event was first recorded, establishing a timeline for its history.</data>
      <data key="d5">event history, timeline</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_13d42e3fe4431a3658dbaa6390d835e4</data>
    </edge>
    <edge source="Event" target="GetEventByUuid">
      <data key="d4">GetEventByUuid function retrieves data defined by the Event schema, linking event fetching with event information structure.</data>
      <data key="d5">event retrieval, schema connection</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </edge>
    <edge source="type" target="transform_quantity">
      <data key="d4">Transform_quantity defines the structure for the type data field, indicating the kind of transformation operations that can be specified.</data>
      <data key="d5">configuration, variable relationship</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </edge>
    <edge source="createdAt" target="LicenseUsageRecord">
      <data key="d4">createdAt indicates when the LicenseUsageRecord was created, making it essential for tracking history.</data>
      <data key="d5">time management, record history</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </edge>
    <edge source="cancelAtPeriodEnd" target="LicenseCreateRequest">
      <data key="d4">cancelAtPeriodEnd determines if the license will renew, which is a critical feature in license management.</data>
      <data key="d5">renewal settings, license management</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </edge>
    <edge source="SessionCreateInvoiceRequest" target="scope">
      <data key="d4">SessionCreateInvoiceRequest specifies a scope configuration that aligns it with the component it interacts with, ensuring proper function execution.</data>
      <data key="d5">function configuration, component association</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c</data>
    </edge>
    <edge source="SessionCreateInvoiceRequest" target="CreateSession">
      <data key="d4">CreateSession function is associated with the SessionCreateInvoiceRequest schema for creating invoices within a session.</data>
      <data key="d5">session functionality, request structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </edge>
    <edge source="SessionCreatePricingTableRequest" target="scope">
      <data key="d4">SessionCreatePricingTableRequest also defines a scope configuration, linking it to the relevant web component for its execution.</data>
      <data key="d5">function configuration, component association</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c</data>
    </edge>
    <edge source="SessionCreatePricingTableRequest" target="CreateSession">
      <data key="d4">The CreateSession function relates to the SessionCreatePricingTableRequest schema used for generating pricing tables in a session.</data>
      <data key="d5">session functionality, request structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </edge>
    <edge source="scope" target="SessionCreateCheckoutRequest">
      <data key="d4">SessionCreateCheckoutRequest requires the scope variable to determine the component context within which the checkout session is created.</data>
      <data key="d5">requirement, API usage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </edge>
    <edge source="SessionCreateCheckoutRequest" target="metadata">
      <data key="d4">SessionCreateCheckoutRequest requires the metadata configuration to supply necessary information for the checkout process.</data>
      <data key="d5">requirement, API configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858</data>
    </edge>
    <edge source="SessionCreateCheckoutRequest" target="CreateSession">
      <data key="d4">CreateSession is connected to the SessionCreateCheckoutRequest schema, facilitating checkout processes during a session.</data>
      <data key="d5">session functionality, request structure</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_7c997969594a4417e475afa3bf6edfa2</data>
    </edge>
    <edge source="metadata" target="livemode">
      <data key="d4">The livemode variable influences the usage of metadata, determining whether data reflects live operation or testing.</data>
      <data key="d5">operational mode, data context</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </edge>
    <edge source="LicenseCreateRequest" target="LicenseUpdateRequest">
      <data key="d4">Both LicenseCreateRequest and LicenseUpdateRequest are types of API requests related to the management of licenses, with one focused on creation and the other on updates.</data>
      <data key="d5">API management, license operations</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a2081f1929b982759b423b9e6f1d90b7</data>
    </edge>
    <edge source="LicenseCreateRequest" target="Licenses Endpoint">
      <data key="d4">The Licenses Endpoint requires a LicenseCreateRequest schema to define the structure of a create license operation.</data>
      <data key="d5">request structure, operation requirement</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_93a1bdd9071867235ec2537127127c00</data>
    </edge>
    <edge source="LicenseUpdateRequest" target="UpdateManyLicensesRequest">
      <data key="d4">LicenseUpdateRequest serves as the item type for UpdateManyLicensesRequest, indicating the relationship between the requests in handling multiple licenses.</data>
      <data key="d5">bulk operations, API structure</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a2081f1929b982759b423b9e6f1d90b7</data>
    </edge>
    <edge source="LicenseUpdateRequest" target="updateLicense">
      <data key="d4">The updateLicense function utilizes the LicenseUpdateRequest schema to define the structure of the update payload.</data>
      <data key="d5">function-schema interaction</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_49c1f925b9b823dbc869debcecd54227</data>
    </edge>
    <edge source="LicenseByPurchaser" target="LicenseCount">
      <data key="d4">LicenseByPurchaser and LicenseCount are related as LicenseCount summarizes information extracted from licenses managed under LicenseByPurchaser.</data>
      <data key="d5">summary, aggregation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9516a99c40383674c2274db86035bea6</data>
    </edge>
    <edge source="LicenseByPurchaser" target="getLicensesByPurchaser">
      <data key="d4">LicenseByPurchaser schema is the expected return structure of the getLicensesByPurchaser function, showing consistency in API design.</data>
      <data key="d5">data schema, API functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_436e9d6c339c56d143b4d7eb7f449283</data>
    </edge>
    <edge source="LicenseCount" target="getLicensesCount">
      <data key="d4">getLicensesCount returns a response formatted according to the LicenseCount schema, which defines how the count data is structured.</data>
      <data key="d5">data structure, response format</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167</data>
    </edge>
    <edge source="LicenseCount" target="getLicenseByUuid">
      <data key="d4">getLicenseByUuid retrieves data that may include the total number of licenses as defined by the LicenseCount schema.</data>
      <data key="d5">data retrieval, API functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4</data>
    </edge>
    <edge source="LicenseCheck" target="getLicenseCheck">
      <data key="d4">LicenseCheck schema is the expected return structure of the getLicenseCheck function, connecting functionality with data format.</data>
      <data key="d5">data schema, API functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_436e9d6c339c56d143b4d7eb7f449283</data>
    </edge>
    <edge source="LicenseUsageRecord" target="unitCount">
      <data key="d4">The LicenseUsageRecord includes unitCount as a property to track the units used under that license.</data>
      <data key="d5">tracking, usage information</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </edge>
    <edge source="LicenseUsageRecord" target="recordedAt">
      <data key="d4">The LicenseUsageRecord includes recordedAt as a timestamp indicating when the record was created.</data>
      <data key="d5">time management, creation date</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </edge>
    <edge source="LicenseUsageRecord" target="resetAt">
      <data key="d4">resetAt is part of LicenseUsageRecord, indicating when the unit count resets for specific licenses.</data>
      <data key="d5">conditional timing, reset management</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9372e24bc34dbf7191b5152899bc4fb2</data>
    </edge>
    <edge source="PlanFeature" target="PricingTable">
      <data key="d4">PricingTable refers to PlanFeature in order to define the features that can be included in the pricing structure.</data>
      <data key="d5">configuration reference</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </edge>
    <edge source="PlanFeature" target="getPlanFeatures">
      <data key="d4">PlanFeature schema is used by the getPlanFeatures function to format the data returned about the features of a plan.</data>
      <data key="d5">data structure, API response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_8afa492aad2baaf4c1b74f1b88500086</data>
    </edge>
    <edge source="PlanCurrency" target="PricingTable">
      <data key="d4">PricingTable uses PlanCurrency to reference the currency associated with different plans, essential for pricing computations.</data>
      <data key="d5">configuration reference</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_bec94aa703c289fd51df9950f46b6864</data>
    </edge>
    <edge source="PlanCurrency" target="getPlanCurrencies">
      <data key="d4">PlanCurrency schema is utilized by the getPlanCurrencies function to format the data returned about the currencies of a plan.</data>
      <data key="d5">data structure, API response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_8afa492aad2baaf4c1b74f1b88500086</data>
    </edge>
    <edge source="capabilityUuid" target="capability">
      <data key="d4">capability includes the capabilityUuid as a property to uniquely identify itself.</data>
      <data key="d5">identification, property</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b5b087e2945918c40faadd1bcef0b6d2</data>
    </edge>
    <edge source="capability" target="StripeInvoice">
      <data key="d4">The capability referenced within StripeInvoice describes the functions available for processing invoices, linking invoicing and capabilities.</data>
      <data key="d5">functionality, capability integration</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </edge>
    <edge source="StripeInvoice" target="automatic_tax">
      <data key="d4">The automatic_tax configuration directly affects how taxes are calculated and applied in the StripeInvoice context.</data>
      <data key="d5">tax management, configuration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_591961ae8bc9634e2c292997a16088d5</data>
    </edge>
    <edge source="StripeInvoice" target="getSubscriptionInvoices">
      <data key="d4">The function getSubscriptionInvoices utilizes the StripeInvoice schema to define the expected data format of invoices that are retrieved.</data>
      <data key="d5">data structure, API usage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </edge>
    <edge source="StripeInvoice" target="getSubscriptionUpdatablePlans">
      <data key="d4">Although getSubscriptionUpdatablePlans does not directly relate to StripeInvoice, both are part of subscription management, indicating an interplay in subscription options and billing structure.</data>
      <data key="d5">subscription management, billing structure</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </edge>
    <edge source="id" target="price">
      <data key="d4">The price object can be identified by its id, linking the unique identifier to the pricing details.</data>
      <data key="d5">identification, linkage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </edge>
    <edge source="Customer Address" target="customer">
      <data key="d4">The Customer Address object is related to the Customer variable as it provides details about the customer's location and shipping information.</data>
      <data key="d5">customer information, location</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </edge>
    <edge source="Customer Tax IDs" target="customer">
      <data key="d4">Customer Tax IDs are associated with Customer as they provide critical tax-related information for the individual or organization.</data>
      <data key="d5">tax information, identification</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_9a24a50a506ac799b7d4bcfa18511367</data>
    </edge>
    <edge source="customer_tax_ids" target="default_tax_rates">
      <data key="d4">customer_tax_ids may use default_tax_rates to determine tax applicability based on customer information.</data>
      <data key="d5">tax management, customer information</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </edge>
    <edge source="hosted_invoice_url" target="invoice_pdf">
      <data key="d4">hosted_invoice_url and invoice_pdf both provide access to the invoice in different formats: one as a viewable URL and the other as a downloadable PDF.</data>
      <data key="d5">access methods, invoice representation</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_553ef68bcb5301348217820a3bb94336</data>
    </edge>
    <edge source="livemode" target="tax_behavior">
      <data key="d4">livemode likely influences tax_behavior by determining whether the environment is live or in a test mode, affecting how taxes are applied.</data>
      <data key="d5">environment, tax implications</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </edge>
    <edge source="livemode" target="product">
      <data key="d4">product may be affected by livemode since a product may behave differently in live versus test environments.</data>
      <data key="d5">product state, environment</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </edge>
    <edge source="trial_period_days" target="usage_type">
      <data key="d4">The trial_period_days variable ties into the usage_type by outlining the parameters that define how the product can be utilized during the trial.</data>
      <data key="d5">trial usage, licensing</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </edge>
    <edge source="price" target="billing_scheme">
      <data key="d4">The billing_scheme defines how the price is structured and applied to customers, relating the pricing model to its application.</data>
      <data key="d5">pricing structure, application</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_f72de382d2f8ee7e3885cd1c45362b97</data>
    </edge>
    <edge source="recurring" target="interval">
      <data key="d4">recurring relates to interval as it specifies the frequency of recurring payments, with interval detailing when charges are applied.</data>
      <data key="d5">recurring payments, frequency</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_66dba50ee12718a86cdc1d136f146b1c</data>
    </edge>
    <edge source="unit_amount" target="unit_amount_decimal">
      <data key="d4">Unit_amount and unit_amount_decimal properties are related as they represent the same quantitative value in different formats.</data>
      <data key="d5">coexistence, data representation</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_2a288d213011152a702ad1023fbb23c8</data>
    </edge>
    <edge source="Tax Rates" target="Total Count">
      <data key="d4">Tax Rates is part of the data structure that contributes to the total count of invoice items.</data>
      <data key="d5">data structure, aggregation</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </edge>
    <edge source="Unit Amount Excluding Tax" target="Paid">
      <data key="d4">Unit Amount Excluding Tax directly impacts whether the invoice item is considered Paid or not.</data>
      <data key="d5">financial status, payment processing</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </edge>
    <edge source="Payment Settings" target="Payment Method Options">
      <data key="d4">Payment Settings encompasses Payment Method Options, indicating a hierarchy in configuration settings for payments.</data>
      <data key="d5">configuration hierarchy, payment settings</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </edge>
    <edge source="Card" target="Request Three D Secure">
      <data key="d4">The Card configuration includes Request Three D Secure indicating security options in payment processing.</data>
      <data key="d5">security configuration, payment processing</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_86f7f994692e668da939abf6bdd64677</data>
    </edge>
    <edge source="Customer Balance" target="Payment Method Types">
      <data key="d4">Customer Balance can influence the choice of Payment Method Types available to a customer during a transaction, as insufficient balance may limit options.</data>
      <data key="d5">financial influence, transaction capability</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </edge>
    <edge source="Period End" target="Period Start">
      <data key="d4">Period Start provides the beginning reference point and Period End provides the ending reference for a billing cycle, establishing the duration within which transactions occur.</data>
      <data key="d5">time frame, billing cycle</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </edge>
    <edge source="Post Payment Credit Notes Amount" target="Pre Payment Credit Notes Amount">
      <data key="d4">Post Payment Credit Notes Amount is evaluated in relation to Pre Payment Credit Notes Amount to assess the total adjustments made to the account during the payment period.</data>
      <data key="d5">credit assessment, account adjustments</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_aecd89cee2523c6280f6e76d501f92b4</data>
    </edge>
    <edge source="subtotal" target="total">
      <data key="d4">The subtotal is a part of the total calculation in a transaction, establishing a direct relationship between them.</data>
      <data key="d5">financial calculation, direct dependency</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </edge>
    <edge source="subtotal_excluding_tax" target="total_excluding_tax">
      <data key="d4">Subtotal excluding tax directly impacts the total excluding tax, representing a clear link between these related variables.</data>
      <data key="d5">financial calculation, dependency</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </edge>
    <edge source="tax" target="total_tax_amounts">
      <data key="d4">Tax calculates the total tax amounts, linking the variable representing tax to the aggregated tax amounts.</data>
      <data key="d5">financial calculation, tax implications</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_5be8ee65f617fbdda55811498eb94708</data>
    </edge>
    <edge source="total_tax_amounts" target="transfer_data">
      <data key="d4">Both total_tax_amounts and transfer_data are variables defined within a data structure, detailing aspects of a data processing function.</data>
      <data key="d5">data structure, variables connection</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_0445f247b05816e0bff80bd0e5c12785</data>
    </edge>
    <edge source="total_tax_amounts" target="webhooks_delivered_at">
      <data key="d4">webhooks_delivered_at can be part of a configuration or response that includes total_tax_amounts, linking these variables in the context of API responses.</data>
      <data key="d5">api response, variables connection</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_0445f247b05816e0bff80bd0e5c12785</data>
    </edge>
    <edge source="transfer_data" target="webhooks_delivered_at">
      <data key="d4">webhooks_delivered_at might be relevant in scenarios where transfer_data is logged, indicating a relationship between timestamps and data transfers.</data>
      <data key="d5">data transfer, logging connection</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_0445f247b05816e0bff80bd0e5c12785</data>
    </edge>
    <edge source="PricingTable" target="getPricingTableByUuid">
      <data key="d4">The function getPricingTableByUuid retrieves data conforming to the PricingTable schema when called.</data>
      <data key="d5">function-call, data retrieval</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </edge>
    <edge source="PricingTable" target="checkoutCreateSubscription">
      <data key="d4">The function checkoutCreateSubscription refers to the PricingTable schema to structure pricing information needed for subscription creation.</data>
      <data key="d5">function-scheme reference</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </edge>
    <edge source="feature" target="properties">
      <data key="d4">feature contains properties that define its characteristics in detail.</data>
      <data key="d5">feature attributes, object structure</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </edge>
    <edge source="Type" target="Example">
      <data key="d4">"Type defines how example values should be structured, demonstrating the expected data type."&lt;</data>
      <data key="d5">data representation, type definition</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </edge>
    <edge source="ValueType" target="DefaultValue">
      <data key="d4">ValueType determines the kind of default value that can be set, linking types to their default representations.</data>
      <data key="d5">default settings, data types</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </edge>
    <edge source="ProductUuid" target="UpdatedAt">
      <data key="d4">ProductUuid may be associated with a record's updated timestamp, showing when a product identifier was last modified.</data>
      <data key="d5">data tracking, metadata</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_0e6dd63a0e60c2461612a94879366617</data>
    </edge>
    <edge source="isUnlimited" target="maxUsage">
      <data key="d4">isUnlimited indicates whether the resource has a maximum usage defined by maxUsage.</data>
      <data key="d5">usage limitations, constraints</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </edge>
    <edge source="pricePerUnit" target="minUsage">
      <data key="d4">pricePerUnit probably affects calculations related to minUsage in resource management.</data>
      <data key="d5">cost management, resource usage</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </edge>
    <edge source="minUsage" target="maxUsage">
      <data key="d4">minUsage and maxUsage represent the limits of usage constraints for a resource.</data>
      <data key="d5">usage constraints, limits</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_2703d4708f21fd100dfa3bb784effc38</data>
    </edge>
    <edge source="Price" target="PaymentIntegrationPlanId">
      <data key="d4">Price is associated with the PaymentIntegrationPlanId as it defines the financial parameters for a specific payment plan.</data>
      <data key="d5">pricing, financial integration</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330</data>
    </edge>
    <edge source="Permission" target="PermissionCreateRequest">
      <data key="d4">PermissionCreateRequest requires a value which corresponds to the properties defined in Permission.</data>
      <data key="d5">request, requirement</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </edge>
    <edge source="Permission" target="PermissionUpdateRequest">
      <data key="d4">PermissionUpdateRequest has properties that can be linked back to the Permission object type's structure.</data>
      <data key="d5">request, relationship</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </edge>
    <edge source="Role" target="User">
      <data key="d4">User has a property which references Role, indicating a structural link between users and their roles within the system.</data>
      <data key="d5">hierarchy, structure</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </edge>
    <edge source="Role" target="RoleCreateRequest">
      <data key="d4">RoleCreateRequest serves to create instances of Role, establishing a direct relationship between the request and the role it generates.</data>
      <data key="d5">creation, linkage</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </edge>
    <edge source="Role" target="RoleUpdateRequest">
      <data key="d4">RoleUpdateRequest enables updating properties of an existing Role, showing its modifying relationship with the role structure.</data>
      <data key="d5">modification, relationship</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89</data>
    </edge>
    <edge source="StripeCard" target="StripeChecks">
      <data key="d4">StripeCard contains a reference to StripeChecks which details the checks performed on the card for validation.</data>
      <data key="d5">validation, security checks</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </edge>
    <edge source="StripeCard" target="StripeNetworks">
      <data key="d4">StripeCard includes information on which networks it belongs to, as specified in StripeNetworks.</data>
      <data key="d5">networks, credit card features</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </edge>
    <edge source="StripeCard" target="StripeThreeDSecureUsage">
      <data key="d4">StripeCard contains information on whether or not 3D Secure is supported as per StripeThreeDSecureUsage.</data>
      <data key="d5">security, fraud prevention</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </edge>
    <edge source="StripeCard" target="CheckoutCreateSubscriptionRequest">
      <data key="d4">CheckoutCreateSubscriptionRequest involves creating a subscription that relates to a specific StripeCard for billing.</data>
      <data key="d5">billing, subscriptions</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </edge>
    <edge source="StripeCard" target="CheckoutCreateIntentRequest">
      <data key="d4">CheckoutCreateIntentRequest entails creating a payment intent which involves interactions with a StripeCard.</data>
      <data key="d5">payment processing, intent creation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_d4f2fa832d56ba402288c090c5b8e6be</data>
    </edge>
    <edge source="CheckoutCreateSubscriptionRequest" target="checkoutCreateSubscription">
      <data key="d4">The function checkoutCreateSubscription utilizes the CheckoutCreateSubscriptionRequest schema to define the required request format for creating a subscription.</data>
      <data key="d5">function-request schema</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </edge>
    <edge source="CheckoutCreateIntentRequest" target="checkoutCreateIntent">
      <data key="d4">The CheckoutCreateIntentRequest schema is used as part of the parameters in the checkoutCreateIntent function to specify the request for creating a setup intent.</data>
      <data key="d5">request specification, API parameters</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab</data>
    </edge>
    <edge source="CheckoutCreateSubscriptionResponse" target="CheckoutCreateIntentResponse">
      <data key="d4">CheckoutCreateSubscriptionResponse and CheckoutCreateIntentResponse are both API responses involved in the subscription checkout process, indicating a connected workflow.:|:The CheckoutCreateSubscriptionResponse is related to the CheckoutCreateIntentResponse as both are part of the workflow in creating subscription intents with Stripe.</data>
      <data key="d5">api connections, subscription management:|:API responses, subscription creation</data>
      <data key="d6">16.0</data>
      <data key="d7">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac:|:excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab</data>
    </edge>
    <edge source="CheckoutCreateSubscriptionResponse" target="checkoutCreateSubscription">
      <data key="d4">Upon execution, checkoutCreateSubscription provides a response that adheres to the CheckoutCreateSubscriptionResponse schema indicating success or failure of the subscription creation.</data>
      <data key="d5">function-response schema</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c</data>
    </edge>
    <edge source="EventResponse" target="Events">
      <data key="d4">EventResponse provides data pertinent to the Events feature, linking operational capabilities with data retrieval.</data>
      <data key="d5">data management, event handling</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a842dcf0a2bc31150f8009b20e0265ac</data>
    </edge>
    <edge source="EventResponse" target="IncrementSubscriptionSeats">
      <data key="d4">IncrementSubscriptionSeats function returns an EventResponse schema upon execution, providing necessary feedback on the operation.</data>
      <data key="d5">function response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </edge>
    <edge source="EventResponse" target="DecrementSubscriptionSeats">
      <data key="d4">DecrementSubscriptionSeats function similarly triggers an EventResponse schema, indicating the result of the seat decrement operation.</data>
      <data key="d5">function response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab</data>
    </edge>
    <edge source="CursorPaginationLicensesUsageRecordsResponse" target="Get License Usage">
      <data key="d4">Get License Usage leads to a response structured as CursorPaginationLicensesUsageRecordsResponse, designed for pagination purposes.</data>
      <data key="d5">response structure, pagination</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="CursorPaginationLicensesUsageRecordsResponse" target="Update License Usage">
      <data key="d4">Update License Usage modifies data inputs that can impact the response received, which includes CursorPaginationLicensesUsageRecordsResponse.</data>
      <data key="d5">data alteration, output impact</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="CursorPaginationSubscriptionsResponse" target="getSubscriptions">
      <data key="d4">The schema 'CursorPaginationSubscriptionsResponse' details the format of the response for the 'getSubscriptions' request, ensuring data structure consistency.</data>
      <data key="d5">response structure, API design</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </edge>
    <edge source="/products" target="getProducts">
      <data key="d4">getProducts is the function associated with the /products endpoint, directly handling requests to retrieve all products.</data>
      <data key="d5">API interaction, function association</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </edge>
    <edge source="/products/{productUuid}" target="getProductByUuid">
      <data key="d4">getProductByUuid is the function associated with the /products/{productUuid} endpoint, facilitating the retrieval of a specific product.</data>
      <data key="d5">API interaction, function association</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11</data>
    </edge>
    <edge source="Get all plans of a product" target="400 BAD REQUEST">
      <data key="d4">The 400 BAD REQUEST response example indicates that the request made to the Get all plans of a product function could fail due to a bad request.</data>
      <data key="d5">error handling, user feedback</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </edge>
    <edge source="Get product pricing table" target="404 NOT FOUND">
      <data key="d4">The 404 NOT FOUND response example suggests that the Get product pricing table function could fail if the product does not exist.</data>
      <data key="d5">error handling, resource availability</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_e9974e8199195febc17fa224f2404286</data>
    </edge>
    <edge source="Get Product Currencies" target="currencyUuid">
      <data key="d4">Get Product Currencies returns currencyUuid as part of the response to identify the specific currency associated with the product.</data>
      <data key="d5">function-returns-parameter</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_90c759c4feb12e8e2b105cd945aeabd3</data>
    </edge>
    <edge source="Get Product Currencies" target="defaultCurrency">
      <data key="d4">Get Product Currencies includes defaultCurrency in the response to indicate whether the returned currency is the default for the product.</data>
      <data key="d5">function-returns-attribute</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_90c759c4feb12e8e2b105cd945aeabd3</data>
    </edge>
    <edge source="Get Product Capabilities" target="400 Bad Request">
      <data key="d4">400 Bad Request may be returned if the Get Product Capabilities function is called with incorrect parameters such as an invalid ProductUuidPathParam.</data>
      <data key="d5">error handling, request validation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </edge>
    <edge source="Get Product Capabilities" target="404 Not Found">
      <data key="d4">404 Not Found may be returned if the specified product UUID does not correspond to an existing product in the database.</data>
      <data key="d5">error handling, request validation</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_a96d4a6e32f4604aedeb831d9028fe91</data>
    </edge>
    <edge source="Get a Plan" target="Version Header">
      <data key="d4">The Version Header is a necessary parameter for the Get a Plan API operation, influencing the version of the response received.</data>
      <data key="d5">API parameters, response control</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Plan Uuid Path Param">
      <data key="d4">The Plan Uuid Path Param is essential for the Get a Plan API call, as it uniquely identifies the plan to be retrieved.</data>
      <data key="d5">identifier, API usage</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Expand Plan Query Param">
      <data key="d4">The Expand Plan Query Param enhances the Get a Plan functionality by allowing access to additional relational data.</data>
      <data key="d5">data expansion, enriched retrieval</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Success Url Query Param">
      <data key="d4">The Success Url Query Param is included in the Get a Plan request to manage user navigation post-request.</data>
      <data key="d5">redirect handling, user experience</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Cancel Url Query Param">
      <data key="d4">The Cancel Url Query Param serves to specify a redirection link for cancellations made during the Get a Plan process.</data>
      <data key="d5">cancel handling, user experience</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Grantee Id Query Param">
      <data key="d4">The Grantee Id Query Param allows retrieval of plans associated with specific grantees, thereby filtering the data returned by the Get a Plan API.</data>
      <data key="d5">data filtering, user specification</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Member Query Param">
      <data key="d4">The Member Query Param affects the results returned from the Get a Plan request based on membership identifiers.</data>
      <data key="d5">data customization, user specific</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Promo Code Query Param">
      <data key="d4">The Promo Code Query Param can influence the plan's pricing or availability upon execution of the Get a Plan API call.</data>
      <data key="d5">pricing strategy, promotions</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Allow Promo Code Query Param">
      <data key="d4">The Allow Promo Code Query Param impacts whether promotional codes can be utilized in the context of the Get a Plan API call.</data>
      <data key="d5">promotional considerations, API flexibility</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Customer Email Query Param">
      <data key="d4">The Customer Email Query Param is crucial for retrieving plan information linked to customer identities during the Get a Plan operation.</data>
      <data key="d5">customer specificity, personalization</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Customer Id Query Param">
      <data key="d4">The Customer Id Query Param associates the plan with a particular customer, impacting the information retrieved through Get a Plan.</data>
      <data key="d5">customer identification, data relevance</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Currency Query Param">
      <data key="d4">The Currency Query Param determines the currency context under which the Get a Plan results are calculated or presented.</data>
      <data key="d5">currency consideration, financial context</data>
      <data key="d6">6.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Get a Plan" target="Automatic Tax Query Param">
      <data key="d4">The Automatic Tax Query Param's role within the Get a Plan API call can influence the inclusion of tax calculations for the retrieved plan.</data>
      <data key="d5">tax handling, financial processing</data>
      <data key="d6">5.0</data>
      <data key="d7">excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab</data>
    </edge>
    <edge source="Plan Capabilities" target="Plan Capability">
      <data key="d4">Plan Capability represents the expected output structure from the Get Plan Capabilities function, showing a relationship between function and example.</data>
      <data key="d5">output structure, relationship demonstration</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_7da111d140e753a404fc70f2a6fe80b0</data>
    </edge>
    <edge source="Licenses Endpoint" target="CreateManyLicensesRequest">
      <data key="d4">The Licenses Endpoint can also process requests defined by the CreateManyLicensesRequest schema for batch operations.</data>
      <data key="d5">batch operation, flexibility</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_93a1bdd9071867235ec2537127127c00</data>
    </edge>
    <edge source="Licenses Endpoint" target="incrementSubscriptionSeats">
      <data key="d4">incrementSubscriptionSeats is referenced in the context of managing seat licenses via the Licenses Endpoint.</data>
      <data key="d5">subscription management, functionality</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_93a1bdd9071867235ec2537127127c00</data>
    </edge>
    <edge source="updateLicenses" target="getLicenses">
      <data key="d4">updateLicenses is part of the overall management of licenses, while getLicenses retrieves their current state and details.</data>
      <data key="d5">functionality relationship, license management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_2803692fca51400dad72f2a2a41f66b4</data>
    </edge>
    <edge source="getLicenses" target="License Status Query Parameter">
      <data key="d4">getLicenses employs the License Status Query Parameter to filter the licenses based on their status when making a request.</data>
      <data key="d5">filtering, data retrieval</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_2803692fca51400dad72f2a2a41f66b4</data>
    </edge>
    <edge source="cancelLicenses" target="License UUIDs">
      <data key="d4">"The function cancelLicenses requires License UUIDs to identify which licenses to cancel.")</data>
      <data key="d5">input requirement, function dependency</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_a8a1a1f7699cb50324dc4207ba11c6e6</data>
    </edge>
    <edge source="getSubscriptions" target="subscriptions">
      <data key="d4">The function 'getSubscriptions' is directly related to the feature of subscriptions as it retrieves subscription data from the API.</data>
      <data key="d5">data retrieval, API functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </edge>
    <edge source="getSubscriptionByUuid" target="subscriptions">
      <data key="d4">The function 'getSubscriptionByUuid' provides access to subscription data based on UUID, demonstrating a specific usage of the subscriptions feature.</data>
      <data key="d5">specific access, API functionality</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_ce43f56f1c477d0c5bb726334f2a714d</data>
    </edge>
    <edge source="Get Subscription Invoices" target="getSubscriptionInvoices">
      <data key="d4">Get Subscription Invoices is linked with the function getSubscriptionInvoices, as it defines the API endpoint's operational functionality.</data>
      <data key="d5">api functionality, operation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </edge>
    <edge source="Get Plans That A Subscribed User Can Switch To" target="getSubscriptionUpdatablePlans">
      <data key="d4">Get Plans That A Subscribed User Can Switch To corresponds with the function getSubscriptionUpdatablePlans, demonstrating the API's capability to retrieve relevant plans.</data>
      <data key="d5">api functionality, operation</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d</data>
    </edge>
    <edge source="Bad Request" target="Get Subscription Cancel Link">
      <data key="d4">The Get Subscription Cancel Link API can return a Bad Request response if the request cannot be processed due to invalid parameters.</data>
      <data key="d5">error handling, response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </edge>
    <edge source="Not Found" target="Get Subscription Cancel Link">
      <data key="d4">The Get Subscription Cancel Link API may return a Not Found response if the specified subscription does not exist.</data>
      <data key="d5">error handling, response</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </edge>
    <edge source="Get a Customer Portal Link" target="Subscription Management Portal">
      <data key="d4">The Get a Customer Portal Link function facilitates access to the Subscription Management Portal, enabling users to manage subscriptions through the link retrieved by this function.</data>
      <data key="d5">access, management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_a9f412b9d897ad9489864c063036ab9a</data>
    </edge>
    <edge source="Get a Customer Portal Link" target="Stripe Customer Portal Link">
      <data key="d4">The function Get a Customer Portal Link is responsible for returning the Stripe Customer Portal Link, which is essential for subscription management.</data>
      <data key="d5">API functionality, integration</data>
      <data key="d6">10.0</data>
      <data key="d7">excerpt_id_a9f412b9d897ad9489864c063036ab9a</data>
    </edge>
    <edge source="Get Subscription Cancel Link" target="Cancel Subscription Link">
      <data key="d4">The Get Subscription Cancel Link API provides access to the Cancel Subscription Link feature, enabling customers to manage their subscriptions.</data>
      <data key="d5">API functionality, customer management</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_79ba54d7da0c670cf02d0b7a721733af</data>
    </edge>
    <edge source="License Usage Record" target="Get License Usage">
      <data key="d4">Get License Usage is a functionality that falls under the broader context of License Usage Record, facilitating record retrieval.</data>
      <data key="d5">functional relationship, broad context</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="License Usage Record" target="Update License Usage">
      <data key="d4">Update License Usage modifies the License Usage Record, directly affecting its data and statistics.</data>
      <data key="d5">functional update, data management</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="Get License Usage" target="UsageGranteeIdRequiredQueryParam">
      <data key="d4">UsageGranteeIdRequiredQueryParam is essential for executing the Get License Usage function, specifying the target grantee.</data>
      <data key="d5">parameter requirement, execution context</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_760444f325abfe9a14b47ad4de73095c</data>
    </edge>
    <edge source="responses" target="getCurrentLicenseUsage">
      <data key="d4">responses define the output results of the getCurrentLicenseUsage function including success or failure messages.</data>
      <data key="d5">response handling, functionality</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_6b75e0b0ccb8be642042580b0d5bc451</data>
    </edge>
    <edge source="getPricingTableByUuid" target="PricingTableUuidPathParam">
      <data key="d4">PricingTableUuidPathParam is a necessary path parameter for the function getPricingTableByUuid, enabling access to specific pricing tables.</data>
      <data key="d5">parameter dependency, path specification</data>
      <data key="d6">8.0</data>
      <data key="d7">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </edge>
    <edge source="getPricingTableByUuid" target="GranteeIdPricingTableQueryParamRequired">
      <data key="d4">GranteeIdPricingTableQueryParamRequired is an essential query parameter for the getPricingTableByUuid function, indicating necessary user permissions.</data>
      <data key="d5">parameter requirement, access control</data>
      <data key="d6">7.0</data>
      <data key="d7">excerpt_id_39737808dc86383e52da4e4e8f531f84</data>
    </edge>
    <edge source="checkoutCreateIntent" target="clientSecret">
      <data key="d4">The checkoutCreateIntent function returns the clientSecret which is necessary for processing payments with Stripe Elements.</data>
      <data key="d5">API functionality, payment processing</data>
      <data key="d6">9.0</data>
      <data key="d7">excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab</data>
    </edge>
    <data key="d0">Stripe, payment processing, API functionalities, Checkout feature</data>
  </graph>
</graphml>
