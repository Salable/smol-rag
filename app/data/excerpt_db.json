{
  "excerpt_id_fdfcb77c4fc4be807c8c8b2854fa3d00": {
    "doc_id": "doc_178a36589a532a007452da1a04700cb8",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Overview\n\nSalable is designed to be a flexible tool to allow you to integrate your app with your chosen payment provider easily. The advantage of using Salable is that you can more easily make changes to your pricing structures, and you can offer more options to your customers. Instead of having to go to many places to get the flexibility you need, you can do it all through Salable.\n\nOur Node SDK exposes HTTP endpoints that accept requests with JSON arguments and return JSON responses. Authentication is done via the API key passed to the `Salable` class.\n\nSpecific versions of the Salable API can also be specified as the second argument of the `Salable` constructor function.\n\n```ts\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n```\n\n> NOTE: If you'd like to use test mode, make sure to use an API key generated in test mode (prefixed with `test_`).\n\nTo get up and running, you need to work through the following steps.\n\n- Set up a Salable Account and Organization\n- Generate your API key\n- Connect Stripe to Salable (You can skip this for a free product)\n- Build your products and plans\n- Install the Node SDK to your project\n- Make your first SDK call",
    "summary": "The excerpt highlights the key features and setup process of Salable, emphasizing its flexibility and ease of integration with payment providers, which aligns with the broader context of the document that aims to guide users in utilizing Salable effectively for their payment solutions.",
    "indexed_at": 1745320708.112587
  },
  "excerpt_id_431115802905d2582e7883b3b0c33bf9": {
    "doc_id": "doc_0f2cfef9ec3270713031588841866e34",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# The Grantee System\n\nTo faciliate access to functionality in your product, you create and assign licenses. The license broadly describes two things: what features and capabilities can be accessed, and the _thing_ that the license belongs to.\n\nThis _thing_ could be just about anything. It could be a user, an organisation, a Trello board, a Miro team; if it can be uniquely identified in some way, a license can belong to it.\n\nIn Salable we call this _thing_ that the license belongs to the **Grantee**.\n\nFrom a technical perspective, this \u201cGrantee\u201d is no more complicated than a string. It is just a sequence of characters that describes the license holder.\n\nThis set of characters only needs to meet three criteria:\n1. It needs to uniquely describe the _thing_ that the license will belong to. For example, a User ID from your database or a Board ID from Trello.\n2. It should be a value that doesn\u2019t change. For example, an email address might not be a good Grantee ID if you allow the user to update it within your system.\n3. It shouldn't contain any commas. We use commas to determine where one grantee definition ends and another begins.\n\nYou can change the Grantee a license belongs to\u2014but these should always be intentional changes, not changes that happen by accident as illustrated in criteria two.\n\nAnd because the Grantee ID is represented by a string, we\u2019re free to join together any combination of values we see fit to represent _what_ the license belongs to. It could be that the license just belongs to a `user_id`, or just to a `board_id` or to a `user_id board_id` (a specific user, on a specific board). The possibilities that this system offers are virtually limitless.\n\nSo you\u2019ve got options, what you assign your licenses too will really come down to your business model and how you plan to monetise your application.\n\nNow go and build something great.\n\n*The Salable Team*",
    "summary": "The excerpt details the concept of \"Grantee\" in the licensing system, emphasizing its importance for defining access to features within the product, which directly supports the broader context of managing user permissions and monetization strategies outlined in the full document.",
    "indexed_at": 1745320708.11448
  },
  "excerpt_id_94fb228ccda17239a53922fdeba71ddc": {
    "doc_id": "doc_4457f5be09574920dc5de70352195c36",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\ntitle: Cancellation Button\ndescription: How to use the cancellation button web component and wrappers\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n## Creating a Session Token\n\nYou can create a session token for this web component by using the request template below with the Salable API.\n<Tabs>\n<TabItem value=\"javascript\" label=\"JavaScript\">\n\n```js\nconst response = await fetch('https://api.salable.app/sessions', {\n    method: \"POST\",\n    headers: {\n        \"x-api-key\": \"YOUR_SALABLE_API_TOKEN\",\n        version: \"v2\",\n    },\n    body: JSON.stringify({\n        scope: 'web-components:cancellation-button',\n        metadata: {\n            subscriptionUuid: 'YOUR_SUBSCRIPTION_UUID',\n            // === OR ===\n            licenseUuid: 'YOUR_LICENSE_UUID'\n        }\n    })\n})\n\nconst { sessionToken } = await response.json()\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl \n    -XPOST \n    -H 'x-api-key: YOUR_SALABLE_API_TOKEN' \n    -H 'version: v2' \n    -d '{ \n        \"scope\": \"web-components:cancellation-button\", \n        \"metadata\": {\n            \"subscriptionUuid\": \"YOUR_SUBSCRIPTION_UUID\",\n            # === OR ===\n            \"licenseUuid\": \"YOUR_LICENSE_UUID\"\n            } \n        }' \n    'https://api.salable.app/sessions'\n```\n\n</TabItem>\n</Tabs>\n\n_[See the entire API docs for creating sessions for web components.](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession)_\n\n## Examples\n\n<Tabs>\n<TabItem value=\"html\" label=\"HTML/JavaScript\">",
    "summary": "The excerpt provides detailed instructions for creating a session token necessary for utilizing the cancellation button web component, linking to the broader context of the document that explains how to implement this component in various programming environments.",
    "indexed_at": 1745322350.281604
  },
  "excerpt_id_843312fa18be8527f5843f17a4d64ad3": {
    "doc_id": "doc_4457f5be09574920dc5de70352195c36",
    "doc_order_index": 1,
    "excerpt": "he entire API docs for creating sessions for web components.](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession)_\n\n## Examples\n\n<Tabs>\n<TabItem value=\"html\" label=\"HTML/JavaScript\">```html\n<!doctype html>\n<head>\n    <title>Salable Cancellation Button Web Component Example</title>\n    <script type=\"module\">\n        import { defineCustomElements } from 'https://cdn.jsdelivr.net/npm/@salable/web-components@latest/loader/index.es2017.js';\n        defineCustomElements();\n    </script>\n</head>\n<body>\n    <salable-cancellation-button\n        session-token=\"YOUR_SESSION_TOKEN\"\n        uuid=\"YOUR_SUBSCRIPTION_OR_LICENSE_UUID\"\n    ></salable-cancellation-button>\n</body>\n</html>\n```",
    "summary": "The excerpt provides a practical example of implementing the Salable cancellation button within a web application, illustrating how to utilize a session token and uuid, thus contextualizing the broader documentation on creating session tokens for web components.",
    "indexed_at": 1745322350.281706
  },
  "excerpt_id_192d34c930ce13b033dea301e1b00bfe": {
    "doc_id": "doc_4457f5be09574920dc5de70352195c36",
    "doc_order_index": 2,
    "excerpt": "ipt>\n</head>\n<body>\n    <salable-cancellation-button\n        session-token=\"YOUR_SESSION_TOKEN\"\n        uuid=\"YOUR_SUBSCRIPTION_OR_LICENSE_UUID\"\n    ></salable-cancellation-button>\n</body>\n</html>\n```</TabItem>\n<TabItem value=\"svelte\" label=\"Svelte\">\n\n*+page.svelte*\n\n```html\n<script>\n    import {defineCustomElements} from \"@salable/web-components/loader\";\n    defineCustomElements();\n</script>\n\n<salable-cancellation-button\n    session-token=\"YOUR_SESSION_TOKEN\"\n    uuid=\"YOUR_SUBSCRIPTION_OR_LICENSE_UUID\"\n></salable-cancellation-button>\n```\n\n*+page.js*\n\n```js\nexport const ssr = false;\n```\n\n</TabItem>\n<TabItem value=\"react\" label=\"React\">\n\n```tsx\nimport { defineCustomElements, SalableCancellationButton } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalableCancellationButtonDemo() {\n    return (\n        <SalableCancellationButton\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            uuid=\"YOUR_SUBSCRIPTION_OR_LICENSE_UUID\"\n        />\n    )\n}\n```\n\n</TabItem>\n<TabItem value=\"nextjs-pages\" label=\"Next.js Pages Router\">\n\n```tsx\nimport dynamic from \"next/dynamic\";\nimport { useEffect } from 'react'\n\nconst SalableCancellationButton = dynamic(\n  () =>\n    import(\"@salable/react-web-components\").then(\n      (module) => module.SalableCancellationButton,\n    ),\n  { ssr: false },\n);\n\nexport default function SalableCancellationButtonDemo() {\n    useEffect(() => {\n      import(\"@salable/react-web-components\").then((module) => {\n        const { defineCustomElements } = module;\n        defineCustomElements();\n      });\n    }, []);\n\n    return (\n        <SalableCancellationButton\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            uuid=\"YOUR_SUBSCRIPTION_OR_LICENSE_UUID\"\n        />\n    )\n}\n```\n\n</TabItem>\n<TabItem value=\"nextjs-app\" label=\"Next.js App Router\">\n\n```tsx\n'use client';\n\nimport { defineCustomElements, SalableCancellationButton } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalableCancellationButtonDemo() {\n    return (\n        <SalableCancellationButton\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            uuid=\"YOUR_SUBSCRIPTION_OR_LICENSE_UUID\"\n        />\n    )\n}\n```",
    "summary": "The excerpt illustrates practical implementations of the cancellation button web component using various frameworks, demonstrating its integration within the broader context of the documentation focused on web component utilization and session token management with the Salable API.",
    "indexed_at": 1745322350.2817652
  },
  "excerpt_id_4a856870c319acb269c556884ddef7f2": {
    "doc_id": "doc_4457f5be09574920dc5de70352195c36",
    "doc_order_index": 3,
    "excerpt": "ableCancellationButtonDemo() {\n    return (\n        <SalableCancellationButton\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            uuid=\"YOUR_SUBSCRIPTION_OR_LICENSE_UUID\"\n        />\n    )\n}\n```</TabItem>\n</Tabs>\n\n## Properties\n\n| Property                    | Attribute       | Description                                               | Type     | Default     |\n| --------------------------- | --------------- | --------------------------------------------------------- | -------- | ----------- |\n| `sessionToken` _(required)_ | `session-token` | The generated token for this session from the Salable API | `string` | `undefined` |\n| `uuid` _(required)_         | `uuid`          | The uuid of the license or subscription to cancel         | `string` | `undefined` |",
    "summary": "The excerpt illustrates the implementation of the Salable Cancellation Button in a React environment, highlighting the required properties for integrating this web component, which ties into the broader context of providing comprehensive documentation for using the cancellation button within various programming frameworks.",
    "indexed_at": 1745322350.2818172
  },
  "excerpt_id_6570345c98baaf7dba384cd0d59011cb": {
    "doc_id": "doc_e91ec67ff3947f69326a0ac487b5f4ec",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Changelog\n\n## v4.0.0\n\n### Breaking Changes\n\n- Salable API versions are now supported and `Version` is now a required argument upon `Salable` instantiation. (Currently supports `v2`)\n  - Support for `v1` of the Salable API has been deprecated\n\n### Licenses\n\n- `getAll` now supports cursor based pagination, licenses can also be filtered by `status`, `subscriptionUuid`, `planUuid`, `productUuid`, and `granteeId`\n- `getOne` and `getForGranteeId` now offer an `expand` option to expand certain properties (e.g. `plan` etc)\n- `getForPurchaser` no longer offers `cancelLink` as an option\n- `getUsage` has been deprecated\n- `create` and `createMany` are now seperate methods, `status` and `endTime` have been added as optional parameters\n- `update` method parameters have been changed to have an object as the second parameter, the `granteeId` property is where the grantee ID value can be assigned \n- `cancelMany` method parameter has been updated to be an object, the `uuids` property is where an array of license UUIDs to cancel can be assigned \n- `verifyLicenseCheck` has been renamed to `verify`\n\n### Plans\n\n- `getOne` now offers an `expand` option to expand certain properties (e.g. `product` etc) \n- `getCheckoutLink` options have now been updated: \n  - `vat` is no longer supported and has been deprecated \n  - `customer` has been deprecated and been replaced with `customerId` and `customerEmail`\n  - `contactUsLink` has been deprecated\n  - `marketingConsent` has been deprecated\n  - `couponCode` has been deprecated\n  - `customMessage` has been deprecated\n  - `automaticTax`, `changeQuantity`, and `requirePaymentMethod` have been added\n\n### Pricing Tables\n\n- `getOne` options have been updated. The only supported options are now `granteeId` and `currency`\n\n### Products",
    "summary": "The excerpt illustrates significant updates in the Salable API's version 4.0.0 changelog, emphasizing breaking changes, enhancements in API methods, and deprecations, which reflect the broader context of evolving functionalities and improved user experience outlined throughout the full-document.",
    "indexed_at": 1745320865.938465
  },
  "excerpt_id_22cd5495433421f9da8476c7c8928c7a": {
    "doc_id": "doc_e91ec67ff3947f69326a0ac487b5f4ec",
    "doc_order_index": 1,
    "excerpt": "ax`, `changeQuantity`, and `requirePaymentMethod` have been added\n\n### Pricing Tables\n\n- `getOne` options have been updated. The only supported options are now `granteeId` and `currency`\n\n### Products- `getOne` now offers an `expand` option to expand certain properties (e.g. `plan` etc)\n- `getPricingTable` options have been updated. The only supported options are now `granteeId` and `currency`\n\n### Subscriptions\n\n- `getOne` now offers an `expand` option to expand certain properties (e.g. `plan` etc)\n- `getAll` method added. Retrieves a list of all subscriptions\n- `getInvoices` method added. Retrieves a list of invoices for a subscription\n- `getSwitchablePlans` method added. Retrieves a list of available plans that a subscribed user can switch to\n- `getUpdatePaymentLink` method added. Retrieves the update payment portal link for a specific subscription\n- `getPortalLink` method added. Retrieves the customer portal link for a subscription\n- `getCancelSubscriptionLink` method added. Retrieves the cancel subscription portal link for a specific subscription\n- `getPaymentMethod` method added. Retrieves the payment method used to pay for a subscription\n- `reactivateSubscription` method added. Reactivate a Subscription's scheduled cancellation before the billing period has passed\n- `updatePlan` method has been deprecated\n- `addSeats` and `removeSeats` now optionally allow proration as an option\n\n### Usage (NEW)\n\n- `getAllUsageRecords` gets all usage records for grantee's metered licenses\n- `getCurrentUsageRecord` gets current usage record for grantee on plan\n- `updateLicenseUsage` updates a license's usage\n\n### RBAC (DEPRECATED)\n\n- All RBAC methods have been deprecated and currently not supported by the SDK\n\n### Other Changes\n\n- **DOCS**: JSDoc and SDK documentation have been updated\n- interfaces have been replaced with types\n- `403` and `404` errors now specifically handled\n\n## v3.2.0\n\n### Licenses\n\n- Added `getOne`, `getForPurchaser`, `getForGranteeId`, `getUsage` & `getCount` licenses methods to SDK.\n\n## v3.1.0\n\n### Licenses\n\n- Added `getOne`, `getForPurchaser`, `getForGranteeId`, `getUsage` & `getCount` licenses methods to SDK.\n\n## v3.0.0\n\n### Error handling",
    "summary": "The excerpt highlights several updates and enhancements to subscription and pricing functionalities within the Salable API, reflecting significant changes in how users can interact with and manage subscriptions and related data, thereby aligning with the overarching goal of improving user experience and operational efficiency in version 4.0.0 of the SDK.",
    "indexed_at": 1745320865.938876
  },
  "excerpt_id_92801c82ba27735682f0b681e6920d1e": {
    "doc_id": "doc_e91ec67ff3947f69326a0ac487b5f4ec",
    "doc_order_index": 2,
    "excerpt": " & `getCount` licenses methods to SDK.\n\n## v3.1.0\n\n### Licenses\n\n- Added `getOne`, `getForPurchaser`, `getForGranteeId`, `getUsage` & `getCount` licenses methods to SDK.\n\n## v3.0.0\n\n### Error handling- Added new Error classes `SalableResponseError`, `SalableValidationError` and `SalableUnknownError`\n- New error codes\n\nMore information on [error handling](./errors.md)\n\n## v2.8.0\n\n### Subscriptions\n\n- Added `changePlan` subscriptions method to SDK.\n\n### Pricing Tables\n\n- Added `getOne` pricing tables method to SDK.\n\n## v2.7.0\n\n### Licenses\n\n- Added `update`, `updateMany` & `getCount` licenses methods to SDK.\n\n## v2.6.0\n\n### Subscriptions\n\n- Added `addSeats` & `removeSeats` subscription methods to SDK.\n\n## v2.5.0\n\n### Features\n\n- Added `Products` (`getOne`, `getCheckoutLink`, `getFeatures`, `getCapabilities`, `getCurrencies`) methods to SDK.\n\n## v2.4.0\n\n### Features\n\n- Added `plans` (`getOne`, `getCheckoutLink`, `getFeatures`, `getCapabilities`, `getCurrencies`) methods to SDK.\n\n### Other Changes\n\n- **DOCS**: Updated links to resources object documentation\n\n## v2.3.0\n\n### Features\n\n- Added URL support in constructor for passing API URL\n\n## v2.2.0\n\n### Features\n\n- Added `cancel` subscription method to SDK.\n\n## v2.1.0\n\n### Features\n\n- Added `rbac` (`permissions`, `users`, `roles`) methods to SDK.\n\n### Other Changes\n\n- **DOCS**: Updated documentation mistakes and inaccuracies\n\n## v2.0.0\n\n### Breaking Changes\n\n- Top level export `SalableApi` renamed to `Salable`\n- `getLicenses()` renamed to `getAll()`\n- `createLicense()` renamed to `create()`\n- `checkLicenses()` renamed to `check()`\n- `getSubscription()` renamaed to `getOne()`\n- `changePlan()` renmaed to `updatePlan()`\n- `updateUsage()` renamed to `update()`\n\n### Other Changes\n\n- **DOCS:** JSDoc documentation added to all methods for each class\n- **FEAT:** Updated internal `_request` method to support TS Generics for return and argument types\n- **CHORE:** Restructured repository contents so endpoints aren't contained inside a `third-party-api` folder.",
    "summary": "The excerpt illustrates the incremental updates to the SDK's licensing functionalities and error handling, showcasing the evolution from basic methods to more robust options, within the broader context of the full changelog that documents comprehensive enhancements across various API components over multiple versions.",
    "indexed_at": 1745320865.939073
  },
  "excerpt_id_9a944ddc3dfa0bec820becd08962062d": {
    "doc_id": "doc_a6319ec702b661e3ed996d46cfcfab21",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\ntitle: Checkout\ndescription: How to use the checkout web component and wrappers\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n## Creating a Session Token\n\nYou can create a session token for this web component by using the request template below with the Salable API.\n\n<Tabs>\n<TabItem value=\"javascript\" label=\"JavaScript\">\n\n```js\nconst response = await fetch('https://api.salable.app/sessions', {\n    method: \"POST\",\n    headers: {\n        \"x-api-key\": \"YOUR_SALABLE_API_TOKEN\",\n        version: \"v2\",\n    },\n    body: JSON.stringify({\n        scope: 'web-components:checkout',\n        metadata: {\n            planUuid: 'YOUR_PLAN_UUID'\n        }\n    })\n})\n\nconst { sessionToken } = await response.json()\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl \n    -XPOST \n    -H 'x-api-key: YOUR_SALABLE_API_TOKEN' \n    -H 'version: v2' \n    -d '{ \"scope\": \"web-components:checkout\", \"metadata\": {\"planUuid\": \"YOUR_PLAN_UUID\"} }' \n    'https://api.salable.app/sessions'\n```\n\n</TabItem>\n</Tabs>\n\n_[See the entire API docs for creating sessions for web components.](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession)_\n\n## Examples\n\n<Tabs>\n<TabItem value=\"html\" label=\"HTML/JavaScript\">\n\n```html\n<!doctype html>\n<head>\n    <title>Salable Checkout Web Component Example</title>\n    <script type=\"module\">\n        import { defineCustomElements } from 'https://cdn.jsdelivr.net/npm/@salable/web-components@latest/loader/index.es2017.js';\n        defineCustomElements();\n    </script>\n</head>\n<body>\n    <salable-checkout\n        session-token=\"YOUR_SESSION_TOKEN\"\n        plan-uuid=\"YOUR_PLAN_UUID\"\n        owner=\"EXAMPLE_OWNER\"\n        grantee-id=\"EXAMPLE_GRANTEE_ID\"\n        success-url=\"https://example.com/success\"\n        currency=\"GBP\"\n    ></salable-checkout>\n</body>\n</html>\n```\n\n</TabItem>\n<TabItem value=\"svelte\" label=\"Svelte\">\n\n*+page.svelte*",
    "summary": "The excerpt provides a code snippet for creating a session token using the Salable API, demonstrating how developers can implement checkout functionality within various web frameworks, which is essential for integrating payment processing in the broader context of the document's focus on using web components and wrappers for a seamless e-commerce experience.",
    "indexed_at": 1745322349.095955
  },
  "excerpt_id_f6ec90f5117ab7bbd27ce2ff293019c5": {
    "doc_id": "doc_a6319ec702b661e3ed996d46cfcfab21",
    "doc_order_index": 1,
    "excerpt": "LE_GRANTEE_ID\"\n        success-url=\"https://example.com/success\"\n        currency=\"GBP\"\n    ></salable-checkout>\n</body>\n</html>\n```\n\n</TabItem>\n<TabItem value=\"svelte\" label=\"Svelte\">\n\n*+page.svelte*```html\n<script>\n    import {defineCustomElements} from \"@salable/web-components/loader\";\n    defineCustomElements();\n</script>\n\n<salable-checkout\n    session-token=\"YOUR_SESSION_TOKEN\"\n    plan-uuid=\"YOUR_PLAN_UUID\"\n    owner=\"EXAMPLE_OWNER\"\n    grantee-id=\"EXAMPLE_GRANTEE_ID\"\n    success-url=\"https://example.com/success\"\n    currency=\"GBP\"\n></salable-checkout>\n```",
    "summary": "The excerpt illustrates the implementation details of the Salable Checkout web component using various frameworks, emphasizing its role in the broader context of facilitating seamless e-commerce transactions within the provided documentation.",
    "indexed_at": 1745322349.096043
  },
  "excerpt_id_704b4768f1fa2d061a279b1a131ab19d": {
    "doc_id": "doc_a6319ec702b661e3ed996d46cfcfab21",
    "doc_order_index": 2,
    "excerpt": "UR_SESSION_TOKEN\"\n    plan-uuid=\"YOUR_PLAN_UUID\"\n    owner=\"EXAMPLE_OWNER\"\n    grantee-id=\"EXAMPLE_GRANTEE_ID\"\n    success-url=\"https://example.com/success\"\n    currency=\"GBP\"\n></salable-checkout>\n```*+page.js*\n\n```js\nexport const ssr = false;\n```\n\n</TabItem>\n<TabItem value=\"react\" label=\"React\">\n\n```tsx\nimport { defineCustomElements, SalableCheckout } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalableCheckoutDemo() {\n    return (\n        <SalableCheckout\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            planUuid=\"YOUR_PLAN_UUID\"\n            owner=\"EXAMPLE_OWNER\"\n            granteeId=\"EXAMPLE_GRANTEE_ID\"\n            successUrl=\"https://example.com/success\"\n            currency=\"GBP\"\n        />\n    )\n}\n```\n\n</TabItem>\n<TabItem value=\"nextjs-pages\" label=\"Next.js Pages Router\">\n\n```tsx\nimport dynamic from \"next/dynamic\";\nimport { useEffect } from 'react'\n\nconst SalableCheckout = dynamic(\n  () =>\n    import(\"@salable/react-web-components\").then(\n      (module) => module.SalableCheckout,\n    ),\n  { ssr: false },\n);\n\nexport default function SalableCheckoutDemo() {\n    useEffect(() => {\n      import(\"@salable/react-web-components\").then((module) => {\n        const { defineCustomElements } = module;\n        defineCustomElements();\n      });\n    }, []);\n\n    return (\n        <SalableCheckout\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            planUuid=\"YOUR_PLAN_UUID\"\n            owner=\"EXAMPLE_OWNER\"\n            granteeId=\"EXAMPLE_GRANTEE_ID\"\n            successUrl=\"https://example.com/success\"\n            currency=\"GBP\"\n        />\n    )\n}\n```\n\n</TabItem>\n<TabItem value=\"nextjs-app\" label=\"Next.js App Router\">\n\n```tsx\n'use client';\n\nimport { defineCustomElements, SalableCheckout } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalableCheckoutDemo() {\n    return (\n        <SalableCheckout\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            planUuid=\"YOUR_PLAN_UUID\"\n            owner=\"EXAMPLE_OWNER\"\n            granteeId=\"EXAMPLE_GRANTEE_ID\"\n            successUrl=\"https://example.com/success\"\n            currency=\"GBP\"\n        />\n    )\n}\n```\n\n</TabItem>\n</Tabs>",
    "summary": "The excerpt provides a practical example of implementing the Salable Checkout web component in different frameworks, illustrating its integration within the broader context of the documentation on using the checkout functionality and creating session tokens.",
    "indexed_at": 1745322349.096095
  },
  "excerpt_id_fbdb809c0bb44640a84ab10e32221e37": {
    "doc_id": "doc_a6319ec702b661e3ed996d46cfcfab21",
    "doc_order_index": 3,
    "excerpt": "\n            owner=\"EXAMPLE_OWNER\"\n            granteeId=\"EXAMPLE_GRANTEE_ID\"\n            successUrl=\"https://example.com/success\"\n            currency=\"GBP\"\n        />\n    )\n}\n```\n\n</TabItem>\n</Tabs>## Properties",
    "summary": "The excerpt highlights the essential properties for configuring the Salable Checkout web component, emphasizing the need for user identification, licensing, and payment success redirection within the overarching context of building flexible web-based checkout experiences.",
    "indexed_at": 1745322349.096138
  },
  "excerpt_id_71c9a77ddc807d05dcb4bcba21e1c507": {
    "doc_id": "doc_a6319ec702b661e3ed996d46cfcfab21",
    "doc_order_index": 4,
    "excerpt": "## Properties| Property                    | Attribute       | Description                                                                                                                  | Type     | Default               |\n|-----------------------------|-----------------|------------------------------------------------------------------------------------------------------------------------------|----------|-----------------------|\n| `currency` _(required)_     | `currency`      | The short name of the currency used in the checkout e.g.\n\nUSD                                                                 | `string` | `undefined`           |\n| `granteeId` _(required)_    | `grantee-id`    | A unique identifier used in licensing that represents the entity to which a license is granted                               | `string` | `undefined`           |\n| `owner`                     | `owner`         | The ID of the entity who will own the subscription                                                                           | `string` | The value of `member` |\n| `member`                    | `member`        | A unique identifier for a member or user.\n\nDeprecated, please use owner.\n\n| `string` | `undefined`           |\n| `planUuid` _(required)_     | `plan-uuid`     | A unique identifier for a specific plan                                                                                      | `string` | `undefined`           |\n| `sessionToken` _(required)_ | `session-token` | The generated token for this session from the Salable API                                                                    | `string` | `undefined`           |\n| `successUrl` _(required)_   | `success-url`   | The URL the user is sent to if they successfully completed a payment                                                         | `string` | `undefined`           |\n| `email`                     | `email`         | A user's email address to be used for the checkout.",
    "summary": "The excerpt succinctly details the properties required for configuring the checkout web component, illustrating its essential role within the broader context of the full document, which serves as a comprehensive guide on utilizing the checkout functionality through the Salable API.",
    "indexed_at": 1745322349.096181
  },
  "excerpt_id_a281d51fe193582e940b069350512acc": {
    "doc_id": "doc_a6319ec702b661e3ed996d46cfcfab21",
    "doc_order_index": 5,
    "excerpt": "yment                                                         | `string` | `undefined`           |\n| `email`                     | `email`         | A user's email address to be used for the checkout.Providing the user's email skips the provide email step during checkout | `string` | `undefined`           |",
    "summary": "The excerpt highlights the `email` property in the context of the full document, which provides detailed specifications for implementing a checkout web component, emphasizing user experience improvements by allowing pre-filled email information during the checkout process.",
    "indexed_at": 1745322349.096222
  },
  "excerpt_id_99827a02251fd259a13d407966db3096": {
    "doc_id": "doc_a0a7ca8ce662f3a195aaaed8757a8f45",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# The Salable Way\n\nTo get the most out of Salable, we have some recommendations around how to best set-up your plans, features, and capabilities on the platform.\n\n## The Basics\n\nThe most common way to restrict access to a feature in an application is to assert whether the current user\u2019s plan ID matches their plan ID from a payment provider service like Stripe.\n\nFor example, if \u201cExport CSV\u201d is a \u201cPro\u201d plan feature, then you\u2019d write some code to check whether the current user is subscribed to the Pro plan. If they are, allow access to the feature; if they aren\u2019t, hide it.\n\nThis is a *fine* way to authorise your users, and you can work this way with Salable, but it isn\u2019t what we would recommend.\n\n## Embracing Granularity\n\nWhen working with Salable we would recommend taking a more granular approach to authorisation. What this means is, rather than checking what **plan** a user is on, check whether they have access to a **feature**.\n\nThis approach provides multiple benefits:\n\n1. If multiple plans give the user access to the same feature, your conditional code is simpler\u2014you can check against the feature name rather than having to compare against a list of plans.\n2. You can easily change what features belong to which plans right from the Salable dashboard, no code required. This means your pricing model can easily be managed by non-developers and your application will automatically adapt to the changes.\n3. It enables the creation of bespoke plans which you can use to give the customer a custom combination of feature values and capabilities.\n\n## Features & Capabilities\n\nThese are the two main methods of \u201cauthorising\u201d whether a grantee can or cannot perform an action in Salable.\n\nA feature can provide a list of numeric options, text options or be a simple true/false boolean field. Any feature that is created in Salable must have an associated value on *every* plan.",
    "summary": "The excerpt highlights the Salable platform's recommendation to prioritize a feature-based authorization approach over plan-based checks, emphasizing its benefits for managing user access and adapting pricing models, which aligns with the document's overall guidance for optimizing user experience on the platform.",
    "indexed_at": 1745321337.482102
  },
  "excerpt_id_889335c292df0ac0fb3417eda2e436b9": {
    "doc_id": "doc_a0a7ca8ce662f3a195aaaed8757a8f45",
    "doc_order_index": 1,
    "excerpt": "n Salable.\n\nA feature can provide a list of numeric options, text options or be a simple true/false boolean field. Any feature that is created in Salable must have an associated value on *every* plan.So for that \u201cExport CSV\u201d example we referenced earlier, that might be false for the Basic Plan; but true for the Pro Plan and the Premium Plan.\n\nFeatures also have the ability to appear on generated pricing tables.\n\nA capability on the other hand is a simple, bespoke string that can be attached to any plan. It can\u2019t contain any values or options, it either exists or it doesn\u2019t. You can think of it as almost like a true/false feature but with one key difference: it doesn\u2019t have to have a value for each plan.\n\n## Proprietary vs Bespoke plans\n\nWhen setting up plans, it\u2019s helpful to think if they\u2019re going to be proprietary plans or bespoke.\n\nProprietary plans are your typical Basic, Pro, Premium, etc plans that customers can sign up for and contain pre-defined sets of features.\n\nBespoke plans are created for specific customers and contain custom feature sets and capabilities.\n\n## Should I use features or capabilities?\n\nWhen working with Salable, we\u2019d recommend defaulting to using features unless you\u2019re sure you need a capability. Features typically offer you additional flexibility later down the road.\n\nFor example, that \u201cData Analytics\u201d functionality you\u2019ve just added might only be available on the Pro plan for now, but you never know how your business model will change or adapt in the future. If you make it a feature, you can easily toggle it on or off at any time, on any of your current or future plans.\n\nCapabilities really shine when you\u2019re offering bespoke or \u201cone-off\u201d functionality to your customers. For example, you may offer white-labelling to select customers\u2014having this be a feature wouldn\u2019t make sense as you\u2019d have to set a value for every plan. Whereas making it a capability allows you to simply add it just on the bespoke plan that you have set up for that specific customer.\n\n## When should I lock functionality behind the plan?",
    "summary": "The excerpt highlights the distinction between features and capabilities in Salable, emphasizing that features have defined values for all plans and facilitate flexible pricing models, while capabilities are bespoke and tailored for specific customers, reinforcing the broader recommendation to adopt a granular approach to user authorization based on feature access rather than plan tiers.",
    "indexed_at": 1745321337.483714
  },
  "excerpt_id_1fa7615b97ee3943e1dedb880f5e701c": {
    "doc_id": "doc_a0a7ca8ce662f3a195aaaed8757a8f45",
    "doc_order_index": 2,
    "excerpt": "r every plan. Whereas making it a capability allows you to simply add it just on the bespoke plan that you have set up for that specific customer.\n\n## When should I lock functionality behind the plan?As mentioned at the start of this guide, we wouldn\u2019t recommend using the plan to authorise actions in your application. However, we do still return the plan name as part of the license check.\n\nWe do this to enable you to check against this value in specific cases where it can be helpful\u2014such as when the functionality is inextricably tied to one specific plan.\n\n## Summary\n\nSo now you know the Salable way. As mentioned at the start of this guide, you can set things up however you see fit\u2014but we believe the recommendations put forward in this guide will set you up for success and give you the best experience with the platform.\n\nAnd for reference, here are some of the main points re-iterated:\n\n1. Features have a value on every plan, capabilities do not.\n2. When setting up plans, think about whether they\u2019re going to be proprietary or bespoke.\n3. We\u2019d recommend features almost always unless you\u2019re offering bespoke functionality.\n4. Check against the plan name only when that \u201cthing\u201d is inextricably linked to said plan.\n\nNow go and build something great.\n\n*The Salable Team*",
    "summary": "The excerpt reinforces the Salable platform\u2019s guidance on user authorization, emphasizing that while plans can provide basic functionality, utilizing features offers greater flexibility and management for future adaptations, thereby aligning with the overall recommendation for a more granular and adaptable approach to feature access.",
    "indexed_at": 1745321337.483936
  },
  "excerpt_id_af9abb82c0d9db221ed69f2b5c8bce4b": {
    "doc_id": "doc_78d934fc9b167886eb21eaa4e2a438e8",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Get One Plan\n\nReturns the details of a single plan.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst plan = await salable.plans.getOne('f965551b-5070-48df-b3aa-944c7ff876e0', { expand: ['product'] });\n```\n\n## Parameters\n\n#### planUuid (_required_)\n\n_Type:_ `string`\n\nThe `uuid` of the Plan to be returned\n\n---\n\n#### options\n\n_Type:_ `{ expand: string[] }`\n\n| Option | Type   | Description                                                        | Required |\n| ------ | ------ | ------------------------------------------------------------------ | -------- |\n| expand | string | Specify which properties to expand. e.g. `{ expand: ['product'] }` | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [plan object](https://docs.salable.app/api/v2#tag/Plans/operation/getPlanByUuid)",
    "summary": "The excerpt provides a specific code sample and parameter details for retrieving a single plan using the Salable API, which is essential for developers to understand how to utilize the broader API functionality outlined in the full document.",
    "indexed_at": 1745322301.096104
  },
  "excerpt_id_8949faee968ed6bf19c979f4b005a699": {
    "doc_id": "doc_4fb2aaa78fc7f705aae8af136d52fdf4",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Key Concepts\n\n### Grantee\n\nThe entity that a [License](#license) is assigned to. This could be an\nindividual user, a team, an organisation, a Trello board, a Slack channel, or\nanything else that is uniquely identifiable.\n\n### Feature\n\nAttached to a [Plan](#plan) and used to toggle functionality for\n[Grantees](#grantee) within your application. Features can contain boolean\n(on/off), numeric, or text values.\n\n### Capability\n\nTypically used to offer bespoke or \"one off\" functionality to a\n[Grantee](#grantee) within your application. These values are fixed, they will\nnot change for the licenses duration. Read more about the differences between \nFeatures and Capabilities in [The Salable Way](./the-salable-way.mdx#should-i-use-features-or-capabilities)\n\n### Plan\n\nGrouping of [Features](#feature) and [Capabilities](#capability) that a\n[Grantee](#grantee) can be given a license for. For example, you may have\n\"Basic\" and \"Pro\" plans in your application.\n\n### License\n\nAssigned to a [Grantee](#grantee) and describes what they can access based on\nthe associated [Plan](#plan).\n\n### Subscription\n\nA recurring payment that is made at a chosen interval. For ad-hoc licenses or\nfree plans - subscriptions don't exist.\n\n### Payment Integration\n\nAn external payment provider (such as Stripe), that you link with your Salable\naccount in order to collect payments.",
    "summary": "The excerpt provides a detailed overview of key concepts related to licensing and functionality management within an application, which is essential for understanding how users (Grantees) interact with the features, capabilities, and payment structures outlined in the broader document.",
    "indexed_at": 1745322313.01775
  },
  "excerpt_id_761b7e7d2e80ea5581133a171250a211": {
    "doc_id": "doc_f56d80cd3a40758920445a6bb6ab5aa7",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\ntitle: Invoices\ndescription: How to use the invoices web component and wrappers\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n## Creating a Session Token\n\nYou can create a session token for this web component by using the request template below with the Salable API.\n\n<Tabs>\n<TabItem value=\"javascript\" label=\"JavaScript\">\n\n```js\nconst response = await fetch('https://api.salable.app/sessions', {\n    method: \"POST\",\n    headers: {\n        \"x-api-key\": \"YOUR_SALABLE_API_TOKEN\",\n        version: \"v2\",\n    },\n    body: JSON.stringify({\n        scope: 'web-components:invoices',\n        metadata: {\n            subscriptionUuid: 'YOUR_SUBSCRIPTION_UUID'\n        }\n    })\n})\n\nconst { sessionToken } = await response.json()\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl \n    -XPOST \n    -H 'x-api-key: YOUR_SALABLE_API_TOKEN' \n    -H 'version: v2' \n    -d '{ \"scope\": \"web-components:invoices\", \"metadata\": {\"subscriptionUuid\": \"YOUR_SUBSCRIPTION_UUID\"} }' \n    'https://api.salable.app/sessions'\n```\n\n</TabItem>\n</Tabs>\n\n_[See the entire API docs for creating sessions for web components.](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession)_\n\n## Examples\n\n<Tabs>\n<TabItem value=\"html\" label=\"HTML/JavaScript\">\n\n```html\n<!doctype html>\n<head>\n    <title>Salable Invoices Web Component Example</title>\n    <script type=\"module\">\n        import { defineCustomElements } from 'https://cdn.jsdelivr.net/npm/@salable/web-components@latest/loader/index.es2017.js';\n        defineCustomElements();\n    </script>\n</head>\n<body>\n    <salable-invoices class=\"theme\" session-token=\"YOUR_SESSION_TOKEN\" subscription-uuid=\"YOUR_SUBSCRIPTION_UUID\" limit=\"3\"></salable-invoices>\n</body>\n</html>\n```\n\n</TabItem>\n<TabItem value=\"svelte\" label=\"Svelte\">\n\n*+page.svelte*",
    "summary": "The excerpt provides a detailed guide on creating a session token and implementing the Salable Invoices web component, which integrates into the broader context of the full document that serves as documentation for utilizing various web components and wrappers in applications.",
    "indexed_at": 1745322351.3108962
  },
  "excerpt_id_414b247030d869939909cae61904cbaf": {
    "doc_id": "doc_f56d80cd3a40758920445a6bb6ab5aa7",
    "doc_order_index": 1,
    "excerpt": "eme\" session-token=\"YOUR_SESSION_TOKEN\" subscription-uuid=\"YOUR_SUBSCRIPTION_UUID\" limit=\"3\"></salable-invoices>\n</body>\n</html>\n```\n\n</TabItem>\n<TabItem value=\"svelte\" label=\"Svelte\">\n\n*+page.svelte*```html\n<script>\n    import {defineCustomElements} from \"@salable/web-components/loader\";\n    defineCustomElements();\n</script>\n\n<salable-invoices class=\"theme\" session-token=\"YOUR_SESSION_TOKEN\" subscription-uuid=\"YOUR_SUBSCRIPTION_UUID\" limit=\"3\"></salable-invoices>\n```",
    "summary": "The excerpt illustrates specific implementation examples for integrating the Salable Invoices web component into various frameworks, demonstrating practical usage within the broader context of the documentation that guides users on how to utilize the invoices component effectively.",
    "indexed_at": 1745322351.3110552
  },
  "excerpt_id_da0a09d7dfdef3227e5234d284bf95ca": {
    "doc_id": "doc_f56d80cd3a40758920445a6bb6ab5aa7",
    "doc_order_index": 2,
    "excerpt": "mponents/loader\";\n    defineCustomElements();\n</script>\n\n<salable-invoices class=\"theme\" session-token=\"YOUR_SESSION_TOKEN\" subscription-uuid=\"YOUR_SUBSCRIPTION_UUID\" limit=\"3\"></salable-invoices>\n```*+page.js*\n\n```js\nexport const ssr = false;\n```\n\n</TabItem>\n<TabItem value=\"react\" label=\"React\">\n\n```tsx\nimport { defineCustomElements, SalableInvoices } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalableInvoicesDemo() {\n    return (\n        <SalableInvoices\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            subscriptionUuid=\"YOUR_SUBSCRIPTION_UUID\"\n            limit={3}\n        />\n    )\n}\n```\n\n</TabItem>\n<TabItem value=\"nextjs-pages\" label=\"Next.js Pages Router\">\n\n```tsx\nimport dynamic from \"next/dynamic\";\nimport { useEffect } from 'react'\n\nconst SalableInvoices = dynamic(\n  () =>\n    import(\"@salable/react-web-components\").then(\n      (module) => module.SalableInvoices,\n    ),\n  { ssr: false },\n);\n\nexport default function SalableInvoicesDemo() {\n    useEffect(() => {\n      import(\"@salable/react-web-components\").then((module) => {\n        const { defineCustomElements } = module;\n        defineCustomElements();\n      });\n    }, []);\n\n    return (\n        <SalableInvoices\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            subscriptionUuid=\"YOUR_SUBSCRIPTION_UUID\"\n            limit={3}\n        />\n    )\n}\n```\n\n</TabItem>\n<TabItem value=\"nextjs-app\" label=\"Next.js App Router\">\n\n```tsx\n'use client';\n\nimport { defineCustomElements, SalableInvoices } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalableInvoicesDemo() {\n    return (\n        <SalableInvoices\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            subscriptionUuid=\"YOUR_SUBSCRIPTION_UUID\"\n            limit={3}\n        />\n    )\n}\n```\n\n</TabItem>\n</Tabs>\n\n## Properties",
    "summary": "The excerpt illustrates practical implementation examples of the Salable Invoices web component in various frameworks, reinforcing the document's focus on enabling developers to effectively use the invoices feature with necessary session management and configuration details.",
    "indexed_at": 1745322351.311169
  },
  "excerpt_id_05dfb6db3f4ce84e8a8b38654cdd2542": {
    "doc_id": "doc_f56d80cd3a40758920445a6bb6ab5aa7",
    "doc_order_index": 3,
    "excerpt": "    <SalableInvoices\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            subscriptionUuid=\"YOUR_SUBSCRIPTION_UUID\"\n            limit={3}\n        />\n    )\n}\n```\n\n</TabItem>\n</Tabs>\n\n## Properties| Property                        | Attribute           | Description                                                         | Type     | Default     |\n| ------------------------------- | ------------------- | ------------------------------------------------------------------- | -------- | ----------- |\n| `sessionToken` _(required)_     | `session-token`     | The generated token for this session                                | `string` | `undefined` |\n| `subscriptionUuid` _(required)_ | `subscription-uuid` | The uuid of the subscription that you want to display invoices for. | `string` | `undefined` |\n| `limit`                         | `limit`             | The number of rows to display per page                              | `number` | `25`        |",
    "summary": "The excerpt demonstrates the usage of the `SalableInvoices` component within a broader documentation context that explains creating session tokens and listing various implementation examples across different frameworks for utilizing invoices in web applications.",
    "indexed_at": 1745322351.31127
  },
  "excerpt_id_570e9764415e5e3f2711ee0725da220d": {
    "doc_id": "doc_22756d5da3b59bc4daf9e913d49be4d7",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 9\n---\n\n# Errors\n\n## Salable error types\n\nSalable throws different kinds of errors. The following lists the exception types, and their documented data fields:\n\n### `SalableResponseError`\n\nThe Salable node SDK throws a `SalableResponseError` exception if the error is a known error.\n\n| Property | Description                             |\n| -------- | --------------------------------------- |\n| `code`   | A Salable specific error code           |\n| `status` | The status code of the error            |\n| `data`   | Error message associated with the error |\n\n### `SalableValidationError`\n\nThe Salable node SDK throws a `SalableValidationError` exception if the error is related validating data on the request.\n\n| Property | Description                   |\n| -------- | ----------------------------- |\n| `code`   | A Salable specific error code |\n| `status` | The status code of the error  |\n| `data`   | An array of `ValidationError` |\n\n### `SalableUnknownError`\n\nThe Salable node SDK throws a `SalableUnknownError` exception if the error unknown.\n\n| Property | Description                    |\n| -------- | ------------------------------ |\n| `code`   | A Salable specific error code  |\n| `error`  | A message related to the error |\n\n## Salable error codes\n\n| Code    | Description                  |\n| ------- | ---------------------------- |\n| `S1000` | Unauthorised access to SDK   |\n| `S1001` | Object was not found         |\n| `S1002` | Bad request                  |\n| `S1003` | Validation error             |\n| `S1004` | Unknown error in Salable API |\n| `S1005` | Unknown error in Salable SDK |",
    "summary": "The excerpt details the different error types and codes within the Salable node SDK, serving as a specific reference to facilitate error handling in the broader context of the full document's guidance on SDK usage and error management.",
    "indexed_at": 1745322313.039689
  },
  "excerpt_id_e92c83ab9e90ff89816fc1841452b9ce": {
    "doc_id": "doc_d0a26e7e3bc8606e1d04d3f6dab862b6",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Quick Start Guide\n\nThe simplest and easiest way to get up-and-running with Salable. Monetise your\napplication in record time.\n\n### Create an account\n\nThe first step of the journey is to\n[create a Salable account](https://salable.app/signup), if you haven't already!\n\nOnce you are in the dashboard, you will have a pre-configured API Key and\n[\"Payment Integration\"](./using-the-dashboard/payment-integration/add-salable-payments.md)\nready for use. The payment intgration will need fully connecting before\nproduction use but is suitable for \"Test Mode\" development immediately.\n\n### Configure your product\n\nYou can now create your product in the Salable dashboard. Configure the plans\nand features to best suit your intended business model. We support everything\nfrom monthly recurring payments, ad hoc licensing, usage-based billing.\n\nCreating your product in Salable is best done with a \"bottom-up\" approach.\nStart by defining each of your individual features and capabilities, and\nthen create plans for them to sit within.\n\n### Taking payments\n\nNow you have your product configured, you will need to prompt the user to pay\nfor your application. We will do this through a simple payment link.\n\n<Tabs>\n<TabItem value=\"js\" label=\"JavaScript\">\n\n```js\n// Don't forget to: npm install @salable/js\nimport { getCheckoutLink } from '@salable/js'\n\nconst checkoutLink = await getCheckoutLink({\n  apiKey: 'your-salable-api-key',\n  planUuid: 'your-salable-plans-uuid',\n  successUrl: 'https://your.app/payment-success',\n  cancelUrl: 'https://your.app/payment-cancelled',\n  granteeId: 'your-users-id',\n  member: 'your-users-id',\n})\n\n// Now you are free to present this `checkoutLink` to your user however you see\n// fit.\n```\n\n</TabItem>\n<TabItem value=\"node\" label=\"Node.js\">",
    "summary": "The excerpt introduces the initial steps for setting up a Salable account and configuring product offerings, which aligns with the full document's objective of providing a comprehensive guide to monetizing applications efficiently through Salable.",
    "indexed_at": 1745322313.043339
  },
  "excerpt_id_b0d99f3af716852d9f2a0d8e9d551113": {
    "doc_id": "doc_d0a26e7e3bc8606e1d04d3f6dab862b6",
    "doc_order_index": 1,
    "excerpt": "ranteeId: 'your-users-id',\n  member: 'your-users-id',\n})\n\n// Now you are free to present this `checkoutLink` to your user however you see\n// fit.\n```\n\n</TabItem>\n<TabItem value=\"node\" label=\"Node.js\">```js\n// Don't forget to: npm install @salable/node-sdk\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\n\nconst checkoutLink = await salable.plans.getCheckoutLink('your-plan-uuid', {\n  successUrl: 'https://example.com/success',\n  cancelUrl: 'https://your.app/cancel',\n  granteeId: 'your-users-id',\n  member: 'your-users-id',\n});\n```",
    "summary": "The excerpt demonstrates how to generate a checkout link using the Salable API, illustrating a specific implementation step within the broader context of monetizing an application effectively through product configuration and payment integration in the Quick Start Guide.",
    "indexed_at": 1745322313.0434
  },
  "excerpt_id_b2fd5f6d47556cbfaceb821af5580333": {
    "doc_id": "doc_d0a26e7e3bc8606e1d04d3f6dab862b6",
    "doc_order_index": 2,
    "excerpt": " salable.plans.getCheckoutLink('your-plan-uuid', {\n  successUrl: 'https://example.com/success',\n  cancelUrl: 'https://your.app/cancel',\n  granteeId: 'your-users-id',\n  member: 'your-users-id',\n});\n```</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XGET\n  -H 'x-api-key: YOUR_SALABLE_API_KEY'\n  -H 'version: v2'\n  'https://api.salable.app/plans/your-plan-uuid/checkoutLink?successUrl=https%3A%2F%2Fyour.app%2Fsuccess&cancelUrl=https%3A%2F%2Fyour.app%2Fcancel&granteeId=your-users-id&member=your-users-id'\n```\n\n</TabItem>\n</Tabs>\n\nThe payment link is only for an individual plan. If you'd rather showcase\nmultiple options to the user, consider using a Pricing Table.\n\n### License check\n\nNow users can buy licenses, you can lock certain features/functionalities of\nyour application depending on whether they've paid or not.\n\n<Tabs>\n<TabItem value=\"js\" label=\"JavaScript\">\n\n```js\n// Don't forget to: npm install @salable/js\nimport { getGrantee } from '@salable/js';\n\nconst { hasCapability } = await getGrantee({\n  apiKey: 'your-salable-api-key',\n  productUuid: 'your-products-uuid',\n  granteeId: 'your-users-id',\n});\n\nconst isUserLicensedToPerformAction = hasCapability('your-capability-name');\n```\n\n</TabItem>\n\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\n\nconst { capabilities } = await salable.licenses.check({\n  productUuid: 'your-product-uuid'\n  granteeIds: ['your-users-id']\n  });\nconst isUserLicensedToPerformAction = capabilities.includes(\n  'your-capability-name'\n);\n```\n\n</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XGET\n  -H 'x-api-key: YOUR_SALABLE_API_KEY'\n  -H 'version: v2'\n  'https://api.salable.app/licenses/check?productUuid=YOUR_PRODUCT_UUID&granteeIds=your-users-id'\n```\n\n</TabItem>\n</Tabs>\n\n### Learning more\n\nIn just a few steps, you have now: configured your product on Salable, allowed\nusers to buy licenses, and restricted what a user can do based on the license(s)\nthey hold.\n\nYou can now make money with your project!",
    "summary": "The excerpt illustrates a specific implementation of how to generate a checkout link for purchasing a plan in the Salable platform, which is part of the broader guide aimed at helping users quickly monetize their applications through product configuration and payment processing.",
    "indexed_at": 1745322313.043454
  },
  "excerpt_id_a7a5f5e4d50483cbee1b64c6879848c4": {
    "doc_id": "doc_d0a26e7e3bc8606e1d04d3f6dab862b6",
    "doc_order_index": 3,
    "excerpt": " steps, you have now: configured your product on Salable, allowed\nusers to buy licenses, and restricted what a user can do based on the license(s)\nthey hold.\n\nYou can now make money with your project!But this is just the beginning, Salable can offer a lot more when it comes to\nmanaging seats, usage-based consumption and subscription flexibility.\n\nTo see how Salable can be implemented check out our demo repos -\n- [Flat rate billing in Next.js](https://github.com/Salable/salable-flat-rate-demo)\n- [Usage-based billing in Next.js](https://github.com/Salable/salable-usage-demo)\n- [Per-seat billing in Next.js](https://github.com/Salable/salable-per-seat-demo)\n- [Flat rate billing in Miro](https://github.com/Salable/miro-salable-flat-rate)\n- [Usage-based billing in Miro](https://github.com/Salable/miro-salable-usage)",
    "summary": "The excerpt highlights the initial success of configuring a product and enabling licensing through Salable, emphasizing its potential for diverse monetization strategies as outlined in the broader Quick Start Guide.",
    "indexed_at": 1745322313.0435
  },
  "excerpt_id_06e17d56e4842e103630578061ddccad": {
    "doc_id": "doc_a68818f036843e298fb09a2537fdbf49",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\ntitle: \"Getting Started\"\ndescription: \"Introduction to the Salable Web Component library\"\n---\n\n## Introduction\n\nThe Salable Web Component Library is designed to streamline the development process for SaaS products. It is a collection of Web Components that facilitate easy integration with payment platforms and simplify the creation of flexible pricing models. Our components are seamlessly compatible with various web frameworks, making it easier for developers to integrate payment and licensing functionality in web applications.\n\n## Key Features\n\n - **Web Components**: Our Web Components are standards-compliant and work across all modern browsers, ensuring broad compatibility.\n - **React Wrappers**: We provide wrapped versions of our Web Components for React projects.\n - **Ease of Integration**: Designed to be easily integrated into your existing projects, requiring minimal configuration to get started\n\n## Available Components\n\n - [**Pricing Table**](/web-components/web-components-latest/Components/pricing-table): Display your product's plans and allow users to sign up for free plans or purchase a subscription for a paid plans.\n - [**Invoices**](/web-components/web-components-latest/Components/invoices): Display all of the invoices for a given subscription and allow users to view/download them.\n - [**Checkout**](/web-components/web-components-latest/Components/checkout): Allow users to purchase a given paid plan\n - [**Cancellation Button**](/web-components/web-components-latest/Components/cancellation-button): Allow users to cancel the provided subscription or license\n\n## Implementing Salable Web Components\n\n### Generating a session\n\nTo use the Salable Web Components, you first need to generate a session token for the specific web component you want to use. You can do this using the [`POST /sessions` endpoint](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession) on the [Salable API](https://docs.salable.app/api/v2).",
    "summary": "The excerpt serves as an introductory overview of the Salable Web Component Library's functionality and features, establishing its relevance within the broader context of efficiently integrating payment solutions and pricing models for SaaS products discussed throughout the full document.",
    "indexed_at": 1745322316.918256
  },
  "excerpt_id_1b612f26a43928677dcf8db549d3101b": {
    "doc_id": "doc_a68818f036843e298fb09a2537fdbf49",
    "doc_order_index": 1,
    "excerpt": "nent you want to use. You can do this using the [`POST /sessions` endpoint](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession) on the [Salable API](https://docs.salable.app/api/v2).:::caution\n\nSession tokens grant access to sensitive information so it's vital you authenticate your users prior to creating a new session token.\n\n:::\n\nWhen creating a session token using the API, you'll need to provide two pieces of data in the body.\n\n 1. `scope`\n 2. `metadata`\n\n#### Scope\n\nEach web component has it's own scope that needs to be provided, E.g. Invoices is `web-components:invoices`. \n\nSee the complete list of scopes on the [create session API docs.](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession)\n\n#### Metadata\n\nDepending on the scope you provide and the component you want to generate the session token for, you'll need to provide different metadata objects. \n\nFor example, if you were generating a session token to use with the `web-components:invoices` scope, you'd need to provide a `subscriptionUuid` like so.\n\n```json\n\"metadata\": {\n    \"subscriptionUuid\": \"YOUR_SUBSCRIPTION_UUID\"\n}\n```\n\nSee the complete list of requirements for each component's metadata on the [create session API docs.](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession) Or, by viewing the specific component's documentation using the left sidebar.\n\n### Install\n\nYou'll need to install one of our packages using one of the commands below to begin using the Salable Web Components. For Web Components, include them directly in your HTML, and for React-based projects, import the components as shown in the examples below.\n\n#### Salable Web Components library:\n\n```bash\nnpm i @salable/web-components\n```\n\n#### Salable React Web Components library:\n\n```bash\nnpm i @salable/react-web-components\n```\n\n#### HTML Import\n\n```html\n<script type=\"module\">\n    import { defineCustomElements } from 'https://cdn.jsdelivr.net/npm/@salable/web-components@latest/loader/index.es2017.js';\n    defineCustomElements();\n</script>\n```\n\n### Render the component",
    "summary": "The excerpt details the process of generating session tokens necessary for using the Salable Web Components, highlighting the importance of authentication and the specific requirements for different components, which supports the broader context of integrating payment and licensing functionalities within SaaS products mentioned in the full document.",
    "indexed_at": 1745322316.9183922
  },
  "excerpt_id_9e01d9ace73d2d02610afe3af1cdf1da": {
    "doc_id": "doc_a68818f036843e298fb09a2537fdbf49",
    "doc_order_index": 2,
    "excerpt": "ule\">\n    import { defineCustomElements } from 'https://cdn.jsdelivr.net/npm/@salable/web-components@latest/loader/index.es2017.js';\n    defineCustomElements();\n</script>\n```\n\n### Render the componentAfter you have installed the right NPM package (if required) for your project, you can then render your chosen web component by providing the session token you generated and any other required properties.\n\nFor example, here is how you would render the `Invoices` component in a React project.\n\n```tsx\nimport { defineCustomElements, SalableInvoices } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalableInvoicesDemo() {\n    return (\n        <SalableInvoices\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            subscriptionUuid=\"YOUR_SUBSCRIPTION_UUID\"\n            limit={3}\n        />\n    )\n}\n```\n\nBelow are links to each component's documentation page which contains examples of how to generate session tokens for it and how to render it.\n\n - [Pricing Table](/web-components/web-components-latest/Components/pricing-table)\n - [Invoices](/web-components/web-components-latest/Components/invoices)\n - [Checkout](/web-components/web-components-latest/Components/checkout)\n - [Cancellation Button](/web-components/web-components-latest/Components/cancellation-button)\n\n## Salable Web Components Integration Demos\n\nExplore how to integrate Salable Web Components with different front-end frameworks and environments. Below are the links to example repositories showcasing the usage of Web Components within various frameworks and environments.\n\n- [Svelte](https://github.com/Salable/Salable-Web-Components-Svelte-Demo)\n- [React/Next.js](https://github.com/Salable/Salable-React-Web-Components-Nextjs-Demo)\n- [HTML/JavaScript](https://github.com/Salable/Salable-Web-Components-HTML-JS-Demo)",
    "summary": "The excerpt outlines the implementation of the Salable Web Components, specifically how to render the `Invoices` component in a React project, which demonstrates the broader context of the document's focus on providing easy integration of payment functionalities for SaaS products using the Salable Web Component Library.",
    "indexed_at": 1745322316.918494
  },
  "excerpt_id_c08dee207a93dbeac363d048eb1567e4": {
    "doc_id": "doc_33e5f301d93add000e9e06012f2b5ffa",
    "doc_order_index": 0,
    "excerpt": "---\ntitle: Migrating to V2 of the API\n---\n\nV2 of the Salable API is the result of an effort to consolidate and fortify the\nelements that make Salable what it is end-to-end. During this process, we have\nimproved the security and performance of multiple endpoints.\n\nIt is our recommendation that all customers migrate to V2 as soon as possible.\n\n## How do I use V2 of the API?\n\nIn order to start using the new and improved V2 endpoints, you'll want to\nprovide a `version` header with a value of `v2` to each request you send to the\nAPI.\n\n## What has changed since V1?\n\n### Licenses are now paginated\n\nThis used to return all licenses for an organisation in one response. The\nresponse in v2 is now paginated, changing the response type. The array of\nlicenses is now on a data property instead of the entire response being an\narray. Ensure you are using the data property to access the license data and\nimplement pagination using the first, last and cursor parameters if required.\n\nIn V1, this endpoint returned all licenses for an organisation in a single\nresponse. Starting from V2, this response will be paginated which alters the\ndata shape returned by the endpoint.\n\nWhile before the response was an array, it is now an object with a `data`\nproperty, among others.\n\nOld V1 shape:\n\n```json\n[\n  // License objects here...\n]\n```\n\nNew V2 shape:\n\n```json\n{\n  first: '' // ID of first returned license, useful for pagination.\n  last: '' // ID of last returned license, useful for pagination.\n  data: [\n    // Subset of License objects now here...\n  ]\n}\n```\n\n### Change to fetching Licenses for a given Subscription\n\nPreviously if you wanted to fetch the Licenses associated with a Subscription\nyou could use the `GET /subscriptions/{id}` endpoint with an `expand` value of\n`licenses`. As of V2, this data has been removed from the get subscription\nendpoint.\n\nNow if you want this data, the way to fetch it is by providing a\n`subscriptionUuid` to the `GET /licenses` endpoint.",
    "summary": "The excerpt outlines key changes in the Salable API's transition from V1 to V2, illustrating the enhanced security, performance, and modified data structures which underscore the broader initiative for customers to migrate promptly for improved functionality.",
    "indexed_at": 1745322317.360613
  },
  "excerpt_id_bfeabcdea4ebc07da01c01c414fe8160": {
    "doc_id": "doc_33e5f301d93add000e9e06012f2b5ffa",
    "doc_order_index": 1,
    "excerpt": "icenses`. As of V2, this data has been removed from the get subscription\nendpoint.\n\nNow if you want this data, the way to fetch it is by providing a\n`subscriptionUuid` to the `GET /licenses` endpoint.V1: `GET /subscriptions/123?expand=licenses`\n\nV2: `GET /licenses?subscriptionUuid=123`\n\n### A new way to modify a Subscription's Plan\n\nThe [update Subscription's plan endpoint](https://docs.salable.app/api#tag/Subscriptions/operation/updateSubscriptionPlan)\nhas been deprecated. You can achieve the same with the\n[change Subscription plan endpoint](https://docs.salable.app/api/v2#tag/Subscriptions/operation/changeSubscriptionsPlan).\nThe latter endpoint also offers additional parameters to modify the proration\nbehaviour applied when your customer's plan changes.\n\n### Removal of checkout links from pricing table endpoint\n\nV2 no longer generates Stripe checkout links for each plan on the pricing table\nendpoint. Our own pricing table components have moved to dynamically fetching\nthe checkout links when the user clicks the purchase button. This change lead to\nbetter performance as a result of fewer calls to the Stripe API.\n\nIf you need to get the checkout link for a plan, you can still do so with the\n[get Plan checkout link endpoint](https://docs.salable.app/api/v2#tag/Plans/operation/getPlanCheckoutLink).",
    "summary": "The excerpt highlights key changes in accessing licenses and modifying subscription plans in the V2 API, illustrating the API's evolution towards improved data management and performance, which aligns with the document's overall goal of encouraging users to migrate to V2 for enhanced functionality.",
    "indexed_at": 1745322317.360662
  },
  "excerpt_id_fbb88f35eb8a656df79436055d95db83": {
    "doc_id": "doc_ba6c417ffebbf0b31134a3f2fd8dedc9",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\ntitle: Pricing Table\ndescription: How to use the pricing table web component and wrappers\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n## Creating a Session Token\n\nYou can create a session token for this web component by using the request template below with the Salable API.\n<Tabs>\n<TabItem value=\"javascript\" label=\"JavaScript\">\n\n```js\nconst response = await fetch('https://api.salable.app/sessions', {\n    method: \"POST\",\n    headers: {\n        \"x-api-key\": \"YOUR_SALABLE_API_TOKEN\",\n        version: \"v2\",\n    },\n    body: JSON.stringify({\n        scope: 'web-components:pricing-table',\n        metadata: {\n            pricingTableUuid: 'YOUR_PRICING_TABLE_UUID',\n            // === OR ===\n            productUuid: 'YOUR_PRODUCT_UUID'\n        }\n    })\n})\n\nconst { sessionToken } = await response.json()\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl \n    -XPOST \n    -H 'x-api-key: YOUR_SALABLE_API_TOKEN' \n    -H 'version: v2' \n    -d '{ \n        \"scope\": \"web-components:pricing-table\", \n        \"metadata\": {\n            \"productUuid\": \"YOUR_PRODUCT_UUID\"\n            # === OR ===\n            \"pricingTableUuid: \"YOUR_PRICING_TABLE_UUID\"\n            } \n        }' \n    'https://api.salable.app/sessions'\n```\n\n</TabItem>\n</Tabs>\n\n_[See the entire API docs for creating sessions for web components.](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession)_\n\n## Examples\n\n<Tabs>\n<TabItem value=\"html\" label=\"HTML/JavaScript\">",
    "summary": "The excerpt outlines the process of creating a session token for the Pricing Table web component using the Salable API, which is a foundational step in implementing the more extensive functionality detailed throughout the full document on pricing table integration.",
    "indexed_at": 1745322351.371486
  },
  "excerpt_id_dcb04584bdf965125367de7881cf4516": {
    "doc_id": "doc_ba6c417ffebbf0b31134a3f2fd8dedc9",
    "doc_order_index": 1,
    "excerpt": "he entire API docs for creating sessions for web components.](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession)_\n\n## Examples\n\n<Tabs>\n<TabItem value=\"html\" label=\"HTML/JavaScript\">```html\n<!doctype html>\n<head>\n    <title>Salable Pricing Table Web Component Example</title>\n    <script type=\"module\">\n        import { defineCustomElements } from 'https://cdn.jsdelivr.net/npm/@salable/web-components@latest/loader/index.es2017.js';\n        defineCustomElements();\n    </script>\n</head>\n<body>\n    <salable-pricing-table\n        session-token=\"YOUR_SESSION_TOKEN\"\n        uuid=\"YOUR_PRICING_TABLE_UUID\"\n        global-success-url=\"https://example.com/success\"\n        global-cancel-url=\"https://example.com/cancel\"\n        global-grantee-id=\"EXAMPLE_GRANTEE_ID\"\n        owner=\"EXAMPLE_OWNER\"\n        currency=\"GBP\"\n    ></salable-pricing-table>\n</body>\n</html>\n```",
    "summary": "The excerpt provides a practical example of implementing the Salable Pricing Table web component, which supports the broader context of the document by demonstrating how to utilize the session token generated via the Salable API for integrating pricing functionalities in various web development frameworks.",
    "indexed_at": 1745322351.3715641
  },
  "excerpt_id_76f2bf224d3111fcdb908c47e3e64890": {
    "doc_id": "doc_ba6c417ffebbf0b31134a3f2fd8dedc9",
    "doc_order_index": 2,
    "excerpt": "    global-cancel-url=\"https://example.com/cancel\"\n        global-grantee-id=\"EXAMPLE_GRANTEE_ID\"\n        owner=\"EXAMPLE_OWNER\"\n        currency=\"GBP\"\n    ></salable-pricing-table>\n</body>\n</html>\n```</TabItem>\n<TabItem value=\"svelte\" label=\"Svelte\">\n\n*+page.svelte*\n\n```html\n<script>\n    import {defineCustomElements} from \"@salable/web-components/loader\";\n    defineCustomElements();\n</script>\n\n<salable-pricing-table\n    session-token=\"YOUR_SESSION_TOKEN\"\n    uuid=\"YOUR_PRICING_TABLE_UUID\"\n    global-success-url=\"https://example.com/success\"\n    global-cancel-url=\"https://example.com/cancel\"\n    global-grantee-id=\"EXAMPLE_GRANTEE_ID\"\n    owner=\"EXAMPLE_OWNER\"\n    currency=\"GBP\"\n></salable-pricing-table>\n```\n\n*+page.js*\n\n```js\nexport const ssr = false;\n```\n\n</TabItem>\n<TabItem value=\"react\" label=\"React\">\n\n```tsx\nimport { defineCustomElements, SalablePricingTable } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalablePricingTableDemo() {\n    return (\n        <SalablePricingTable\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            uuid=\"YOUR_PRICING_TABLE_UUID\"\n            globalSuccessUrl=\"https://example.com/success\"\n            globalCancelUrl=\"https://example.com/cancel\"\n            globalGranteeId=\"EXAMPLE_GRANTEE_ID\"\n            owner=\"EXAMPLE_OWNER\"\n            currency=\"GBP\"\n        />\n    )\n}\n```\n\n</TabItem>\n<TabItem value=\"nextjs-pages\" label=\"Next.js Pages Router\">",
    "summary": "The excerpt illustrates the use of essential attributes for configuring the Salable pricing table web component, which aligns with the broader context of providing comprehensive examples and instructions for integrating pricing tables in various programming environments.",
    "indexed_at": 1745322351.3716202
  },
  "excerpt_id_27a5e79fbdf1ce12312bf9804cdb8401": {
    "doc_id": "doc_ba6c417ffebbf0b31134a3f2fd8dedc9",
    "doc_order_index": 3,
    "excerpt": "        globalGranteeId=\"EXAMPLE_GRANTEE_ID\"\n            owner=\"EXAMPLE_OWNER\"\n            currency=\"GBP\"\n        />\n    )\n}\n```\n\n</TabItem>\n<TabItem value=\"nextjs-pages\" label=\"Next.js Pages Router\">```tsx\nimport dynamic from \"next/dynamic\";\nimport { useEffect } from 'react'\n\nconst SalablePricingTable = dynamic(\n  () =>\n    import(\"@salable/react-web-components\").then(\n      (module) => module.SalablePricingTable,\n    ),\n  { ssr: false },\n);\n\nexport default function SalablePricingTableDemo() {\n    useEffect(() => {\n      import(\"@salable/react-web-components\").then((module) => {\n        const { defineCustomElements } = module;\n        defineCustomElements();\n      });\n    }, []);\n\n    return (\n        <SalablePricingTable\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            uuid=\"YOUR_PRICING_TABLE_UUID\"\n            globalSuccessUrl=\"https://example.com/success\"\n            globalCancelUrl=\"https://example.com/cancel\"\n            globalGranteeId=\"EXAMPLE_GRANTEE_ID\"\n            owner=\"EXAMPLE_OWNER\"\n            currency=\"GBP\"\n        />\n    )\n}\n```",
    "summary": "The excerpt exemplifies the implementation of the Salable Pricing Table web component within a Next.js application, showcasing how to define component properties like `globalGranteeId`, `owner`, and `currency`, thereby illustrating the broader context of using the pricing table's API and web components effectively.",
    "indexed_at": 1745322351.3716888
  },
  "excerpt_id_544e28aa2399ae7bd5c1e2f67d68f2a1": {
    "doc_id": "doc_ba6c417ffebbf0b31134a3f2fd8dedc9",
    "doc_order_index": 4,
    "excerpt": "m/success\"\n            globalCancelUrl=\"https://example.com/cancel\"\n            globalGranteeId=\"EXAMPLE_GRANTEE_ID\"\n            owner=\"EXAMPLE_OWNER\"\n            currency=\"GBP\"\n        />\n    )\n}\n```</TabItem>\n<TabItem value=\"nextjs-app\" label=\"Next.js App Router\">\n\n```tsx\n'use client';\n\nimport { defineCustomElements, SalablePricingTable } from '@salable/react-web-components';\n\ndefineCustomElements();\n\nexport default function SalablePricingTableDemo() {\n    return (\n        <SalablePricingTable\n            sessionToken=\"YOUR_SESSION_TOKEN\"\n            uuid=\"YOUR_PRICING_TABLE_UUID\"\n            globalSuccessUrl=\"https://example.com/success\"\n            globalCancelUrl=\"https://example.com/cancel\"\n            globalGranteeId=\"EXAMPLE_GRANTEE_ID\"\n            owner=\"EXAMPLE_OWNER\"\n            currency=\"GBP\"\n        />\n    )\n}\n```\n\n</TabItem>\n</Tabs>\n\n## Properties",
    "summary": "The excerpt provides a code snippet that demonstrates how to implement the Salable Pricing Table web component in a Next.js application, highlighting its essential properties and integration approach within the context of the broader documentation on using web components for managing pricing tables.",
    "indexed_at": 1745322351.3717399
  },
  "excerpt_id_ef01641492d489ead5f4ed24b22dc924": {
    "doc_id": "doc_ba6c417ffebbf0b31134a3f2fd8dedc9",
    "doc_order_index": 5,
    "excerpt": "Url=\"https://example.com/cancel\"\n            globalGranteeId=\"EXAMPLE_GRANTEE_ID\"\n            owner=\"EXAMPLE_OWNER\"\n            currency=\"GBP\"\n        />\n    )\n}\n```\n\n</TabItem>\n</Tabs>\n\n## Properties| Property                        | Attribute                 | Description                                                                                                                                               | Type                                 | Default     |\n|---------------------------------|---------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------|-------------|\n| `sessionToken` _(required)_     | `session-token`           | The generated token for this session from the Salable API                                                                                                 | `string`                             | `undefined` |\n| `uuid` _(required)_             | `uuid`                    | The uuid of the pricing table that you want to display.\n\n| `string`                             | `undefined` |\n| `owner`                         | `owner`                   | The ID of the entity who will own the subscription.\n\n| `string`                             | `undefined` |\n| `member`                        | `member`                  | The ID of the member who will manage the license.\n\nDeprecated, use owner instead.\n\n| `string`                             | `undefined` |\n| `globalCancelUrl` _(required)_  | `global-cancel-url`       | The URL to send users to if the transaction fails.\n\nMust be an absolute URL.\n\n| `string`                             | `undefined` |\n| `globalGranteeId` _(required)_  | `global-grantee-id`       | The unique identifier for the grantee for all plan checkouts links.\n\n| `string`                             | `undefined` |\n| `globalSuccessUrl` _(required)_ | `global-success-url`      | The URL to send users to after a successful purchase.\n\nMust be an absolute URL.",
    "summary": "The excerpt highlights the required properties and attributes for implementing a pricing table web component, emphasizing its integration with the Salable API, which is central to the broader context of using and customizing web components in applications.",
    "indexed_at": 1745322351.371788
  },
  "excerpt_id_3e5aff90a7d27611da426420fa021bf0": {
    "doc_id": "doc_ba6c417ffebbf0b31134a3f2fd8dedc9",
    "doc_order_index": 6,
    "excerpt": "\n\n| `string`                             | `undefined` |\n| `globalSuccessUrl` _(required)_ | `global-success-url`      | The URL to send users to after a successful purchase.\n\nMust be an absolute URL.| `string`                             | `undefined` |\n| `globalContactUrl`              | `global-contact-url`      | The URL for the \"Coming soon\" plan cta.\n\n| `string`                             | `undefined` |\n| `perPlanCancelUrls`             | `per-plan-cancel-urls`    | Configure cancelUrls per plan, string format `{'plan-uuid-one':'https://example.com/cancel-one','plan-uuid-two':'https://example.com/cancel-two'}`        | `string \\| { [x: string]: string; }` | `undefined` |\n| `perPlanGranteeIds`             | `per-plan-grantee-ids`    | Configure granteeIds per plan, string format `{'plan-uuid-one': 'granteeIdOne', 'plan-uuid-two': 'granteeIdTwo'}`                                         | `string \\| { [x: string]: string; }` | `undefined` |\n| `perPlanSuccessUrls`            | `per-plan-success-urls`   | Configure successUrls per plan, string format `{'plan-uuid-one': 'https://example.com/success-one' , 'plan-uuid-two': 'https://example.com/success-two'}` | `string \\| { [x: string]: string; }` | `undefined` |\n| `isCustomPricingTable`          | `is-custom-pricing-table` | If you provided the uuid of a custom pricing table set this to true                                                                                       | `boolean`                            | `false`     |\n| `customerEmail`                 | `customer-email`          | Pre-fills the customer email in Stripe checkout.\n\n| `string`                             | `undefined` |\n| `customerId`                    | `customer-id`             | The ID of an existing customer in your payment integration.\n\nThis pre-fills the email, card details, and postcode at checkout.\n\n| `string`                             | `undefined` |\n| `currency`                      | `currency`                | Uses the currency short name (e.g.\n\nUSD).",
    "summary": "The excerpt outlines key properties and their descriptions for configuring the Salable pricing table web component, which supports the broader context of the full document by providing detailed specifications for implementing the pricing functionality within web applications.",
    "indexed_at": 1745322351.371839
  },
  "excerpt_id_0ab876e01883ecefd90117ac472049ae": {
    "doc_id": "doc_ba6c417ffebbf0b31134a3f2fd8dedc9",
    "doc_order_index": 7,
    "excerpt": "ard details, and postcode at checkout.\n\n| `string`                             | `undefined` |\n| `currency`                      | `currency`                | Uses the currency short name (e.g.\n\nUSD).Required if pricing table contains paid plans                                                                    | `string`                             | `undefined` |\n| `promoCode`                     | `promo-code`              | Used to pre-fill the promo code in Stripe checkout.\n\nUse the promo code ID from Stripe dashboard.\n\nCustomers cannot edit this field during checkout.\n\n| `string`                             | `undefined` |\n| `allowPromoCode`                | `allow-promo-code`        | Enables the promo code field in Stripe checkout.\n\nAccepts 'true' or 'false'.\n\nCannot be used with promoCode.\n\n| `string`                             | `undefined` |\n| `automaticTax`                  | `automatic-tax`           | Automatically calculate tax on checkout based on the customer's location and your Stripe settings.\n\n| `string`                             | `undefined` |",
    "summary": "The excerpt provides specific property definitions for the Salable Pricing Table web component, illustrating how to configure essential parameters such as currency and promotional options, which are critical for users to effectively implement the pricing functionality highlighted in the broader pricing table documentation.",
    "indexed_at": 1745322351.371885
  },
  "excerpt_id_bdaf47c34544829246213081b5843311": {
    "doc_id": "doc_8aa15f8fceccb9c68176b9f38487586f",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 9\n---\n\n# Pricing Models\n\nSalable offers multiple **pricing models** that you can use for your product.\nThe **pricing model** is assigned on the plan level, so if you wish, you can\noffer more than one **pricing model** to your customers, depending on which plan\nthey select. You can decide which **pricing model** applies to a plan when you\n[**create the plan**](../plans/create-plan).\n\n## Flat Rate Model\n\nIf a plan uses the flat rate model, you specify a price and a billing cycle for\nthe plan, and the customer pays that price each billing cycle.\n\n## Usage-based Model\n\nWith the usage-based model, you charge your customers based on how much they use\nyour product during the billing cycle. When you create a plan, you specify which\nfeature to use as the basis for usage and the unit price. The customer's usage\nof that feature is monitored, and they are billed the appropriate amount at the\nend of their billing cycle.\n\n## Per-seat Model\n\nWith the per-seat model, your customer pays depending on how many licenses they\nuse, and the amount they pay per license is fixed. This makes it easy for them\nto understand their costs and budget accordingly. They can assign or unassign\nseats to users as they see fit, and the amount they are charged is automatically\nadjusted to match the number of seats active during the billing cycle.\n\n## Freemium\n\nOffer a free plan with the option of upgrading to paid plans.\n\n## Free trials\n\nAs part of any billing model, you can also offer your users free trials for a\nset number of days.",
    "summary": "The excerpt outlines various pricing models offered by Salable, which are integral to understanding how the company's flexible billing options can cater to different customer needs and enhance user engagement within the broader context of its service offerings.",
    "indexed_at": 1745322319.831001
  },
  "excerpt_id_680976a6fc3bada749f88e7d3b2ab7ed": {
    "doc_id": "doc_f014fb61e3e9b26aaa9f511e990de6fc",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# Add a Feature\n\nFeatures are the specific benefits, augmentations, or liberties that are\ndelivered by a product. The features a client gets depend on the plan they buy.\nWhile capabilities are the same in all plans, features are not.\n\nFeatures can be anything. They can be actual functionality in your app, access\nto a service, or a nontangible benefit. Each product can have an unlimited\nnumber of features.\n\n## Instructions\n\n1. Select **Products** from the navigation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Features** tab on the sidebar.\n4. Select **Add New Feature**.\n5. Complete the required parameter fields:",
    "summary": "The excerpt outlines the initial steps for adding a feature to a product, emphasizing the customizable nature of features based on different plans, which ties into the broader context of product configuration and user experience in the document.",
    "indexed_at": 1745322319.915498
  },
  "excerpt_id_e2c009bde3f9c48c2520232d0990c9fa": {
    "doc_id": "doc_f014fb61e3e9b26aaa9f511e990de6fc",
    "doc_order_index": 1,
    "excerpt": "gation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Features** tab on the sidebar.\n4. Select **Add New Feature**.\n5. Complete the required parameter fields:<table>\n      <thead>\n         <tr>\n            <th>Parameter</th>\n            <th>Details</th>\n            <th>Required</th>\n         </tr>\n      </thead>\n      <tbody>\n         <tr>\n            <td>Name</td>\n            <td>Name for reference within the Salable dashboard.</td>\n            <td>\u2705</td>\n         </tr>\n         <tr>\n            <td>Variable Name</td>\n            <td>Name used to reference the variable in the API.</td>\n            <td>\u2705</td>\n         </tr>\n         <tr>\n            <td>Feature Description</td>\n            <td>Text to be shown in tooltips. Limited to 50 characters.</td>\n            <td>\u274c</td>\n         </tr>\n         <tr>\n            <td>Value Type</td>\n            <td>\n            Choose an option from the drop-down, define the values and use the radio buttons to identify the default option.\n            <ul>\n               <li><b>Numerical:</b> With this option, a feature can have any numerical value. Select a number for the default value. You can also add an <em>Unlimited</em> option.</li>\n               <li><b>Text Options:</b> Create as many text options as you need. They will automatically be sorted into alphabetical order.</li>\n               <li><b>True/False:</b> Provide two options, <em>True</em>, or <em>False</em>.</li>\n            </ul>            \n            </td>\n            <td>\u2705</td>\n         </tr>\n         <tr>\n            <td>Visibility</td>\n            <td>\n            Choose whether to display the feature in marketing or not. This is set to <em>Public</em> by default.\n            <ul>\n               <li><b>Public:</b> Show the feature in marketing.</li>\n               <li><b>Private:</b> Do not show the feature in marketing.</li>\n            </ul>            \n            </td>\n            <td>\u2705</td>\n         </tr>\n      </tbody>\n   </table>\n\n6. Select **Create Feature**.\n\n:::note\n\nIf you change, add or remove features, remember to update your plans to keep up\nwith any changes.\n\n:::\n\n## Update Feature Order",
    "summary": "The excerpt details the step-by-step instructions for adding new features to a product, illustrating the broader context of product configuration and management within the document.",
    "indexed_at": 1745322319.915555
  },
  "excerpt_id_30cc79a13c79866d5507321347cb20a7": {
    "doc_id": "doc_f014fb61e3e9b26aaa9f511e990de6fc",
    "doc_order_index": 2,
    "excerpt": "/tr>\n      </tbody>\n   </table>\n\n6. Select **Create Feature**.\n\n:::note\n\nIf you change, add or remove features, remember to update your plans to keep up\nwith any changes.\n\n:::\n\n## Update Feature OrderThe order that features are displayed on the Features tab within your product\nare the order in which they are displayed on your pricing table. By default,\nthey are listed in the order they were created. You can change this order by dragging the features into the order you want them to display.",
    "summary": "The excerpt emphasizes the importance of updating plans whenever features are modified, and it details how to organize the presentation of features on the pricing table, which is crucial for effective product configuration and marketing strategy as outlined in the broader context of the document.",
    "indexed_at": 1745322319.915601
  },
  "excerpt_id_b672ed1c3e3680e80873b4a4ba2d3012": {
    "doc_id": "doc_54384eb63b480e070ea17a9c23cdad8e",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 7\n---\n\n# Deprecate a Capability\n\nIf you need to deprecate a capability from your product you can easily do that\nat any time.\n\n## Instructions\n\n1. Select **Products** from the navigation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Capabilities** tab on the sidebar.\n4. Select the **Trash Can Icon** next to the capability you want to deprecate.",
    "summary": "The excerpt serves as a direct reproduction of the section titled \"Deprecate a Capability\" in the full document, emphasizing the straightforward process for removing features from a product within the broader context of product management and configuration.",
    "indexed_at": 1745322319.920359
  },
  "excerpt_id_e6d45aa0665fc0645841e246e19a8aee": {
    "doc_id": "doc_ab16dbff5fd51b18728ac5192bed6a21",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 5\n---\n\n# Add a Pricing Table\n\nA pricing table allows you to display the various plans available for your\nproduct on one screen to allow easy comparison by your customer. A default\npricing table is automatically created for each of your products. The default\npricing table includes all plans with a _Plan Type_ of _Standard_ or _Coming\nSoon_.\n\nSalable's pricing table functionality enables you to design your pricing table,\nand it then generates the code that you need to display the pricing table. You\ncan copy the code in Vanilla JS or React.\n\n## Use the Default Pricing Table\n\nA default pricing table is automatically created for each of your products. The\ndefault pricing table displays all plans with a _Plan Type_ of _Standard_ or\n_Coming Soon_.\n\nYou can view the default pricing table by selecting the three dots under **Actions**. If you are happy with the default table, select the three dots under **Copy Code** and choose whether you want the React code or the Vanilla JS code for the pricing table. This copies the relevant code to your clipboard, and you can paste it where required\nfrom there.\n\n## Create a Pricing Table\n\nIf you want to display a pricing table that only includes specific plans,\nhighlights a particular plan, uses the dark theme, or uses a different colour\nscheme for the buttons, then you must create that pricing table. Follow these\ninstructions to create a pricing table.\n\n1. Select **Products** from the navigation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Pricing Tables** tab on the sidebar.\n4. Select **Create Pricing Table**.\n\n5. Complete the displayed fields.",
    "summary": "The excerpt outlines the process of adding and customizing a pricing table, which is a key functionality in the broader context of the document that provides guidance on how to effectively present product plans to customers for easy comparison.",
    "indexed_at": 1745322319.989206
  },
  "excerpt_id_be8cf126c7ebf16c60077549d0a3f3ce": {
    "doc_id": "doc_ab16dbff5fd51b18728ac5192bed6a21",
    "doc_order_index": 1,
    "excerpt": "ion menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Pricing Tables** tab on the sidebar.\n4. Select **Create Pricing Table**.\n\n5. Complete the displayed fields.| Field         | Details                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n   | ------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n   | Name          | Name of the pricing table for reference within the Salable dashboard.\n\nThis name is not visible to customers.\n\n|\n   | Add Plans     | Use this dropdown to select which plans you want to include in the pricing table.\n\n<br /><br />The plans are displayed in the order they are selected, but you can reorder them here by drag-and-dropping the plans in the required order.\n\n<br /><br />You can highlight a specific plan in your pricing table by selecting the <i>Featured</i> radio button for that plan.\n\nHighlighting a plan displays it to your customers with different styling to emphasise that plan.\n\n|\n   | Feature Order | If your plan has multiple features, you can order them as you wish.\n\n|\n\n6. Select **Create Pricing Table**.\n\nYou should see a notification telling you that your pricing table has been\ncreated.\n\n## Edit a Pricing Table",
    "summary": "The excerpt provides step-by-step instructions on creating a customizable pricing table, highlighting its integration within the broader context of the document, which emphasizes the overall functionality of Salable's pricing table feature.",
    "indexed_at": 1745322319.989262
  },
  "excerpt_id_2606a25588f8e8e2ee794116e597f0bd": {
    "doc_id": "doc_ab16dbff5fd51b18728ac5192bed6a21",
    "doc_order_index": 2,
    "excerpt": "multiple features, you can order them as you wish.\n\n|\n\n6. Select **Create Pricing Table**.\n\nYou should see a notification telling you that your pricing table has been\ncreated.\n\n## Edit a Pricing TableOnce you have created the pricing table, you are taken to the editor page for\nthat pricing table. You can also enter the editor page for a pricing table by\nselecting the three dots under **Edit** from the Actions menu on the _Pricing Tables_ page.\n\n:::note You cannot edit the default pricing table, like reordering the plans. The only way of removing a plan from the default pricing table is if you create or edit a plan and choose **No** on the **Show in the default pricing table?** section:::\n\nYou can use the editor to make changes to your pricing table. You can view any\nchanges you make in the preview pane once you click the **Update Pricing Table**\nbutton.",
    "summary": "The excerpt provides detailed instructions on editing and managing pricing tables within Salable, illustrating the broader context of customizing product offerings to enhance customer engagement and support efficient comparison of plans.",
    "indexed_at": 1745322319.989314
  },
  "excerpt_id_b28747c2bef3f56dc2ac6e37937d5fd5": {
    "doc_id": "doc_854ebdbc20f16b185567df0bde4ec064",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Add Currencies\n\nYou select the default currency when you\n[**Create a product**](./create-a-product.md). Once your product is set up, you\ncan add a currency or change the default currency for the product.\n\n## View Currencies Tab\n\n1. Select **Products** from the navigation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Currencies** tab on the sidebar.\n\n### Add a Currency\n\n1. Select **Add Currency**.\n2. Select the currency you want to add to your product.\n\n<!---\n### Remove a Currency\n\n1. Select the **Menu Icon** next to the currency you wish to remove.\n   ![product-currency-option](../imgs/product-currency-option.png \"Product Currency option\")\n2. Select **Remove**.\n--->\n\n### Change Default Currency\n\n1. Select the **Set Default** check mark button next to the currency you want to set as your default\n   currency.",
    "summary": "The excerpt provides detailed steps for adding or changing currencies for products, aligning with the broader context of managing product configurations within the full document.",
    "indexed_at": 1745322321.917525
  },
  "excerpt_id_e5317a8e62f9ae611a1f7844f27dbbd0": {
    "doc_id": "doc_fe5150bede327359016d880216d57b90",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Create a Product\n\nA product is an app or service that your customers are buying. In Salable your\nproduct contains the features and plans that you can offer your users.\n\nOrganizational accounts can have an unlimited number of products.\n\n## Instructions\n\n1. Select **Products** from the left-hand menu.\n2. Select **Create New Product**.\n3. Choose the desired **Product Name** for your new product.\n4. For the product to be a **Paid Product** simply check the box in the screen. If you want the product to be a **Free Product**, leave the box unchecked.\n5. If the product is a **Paid Product**, select the account name of the **Payment Integration** you wish to use for this product.\n\n:::caution\nPaid products cannot be converted to free products once created. However,\nyou can still offer free plans within a paid product.\n:::\n\n6. Select your preferred **Default Currency**.\n7. Select **Create Product**.\n\n:::tip\nIf you want, you can\n[**add additional currencies**](./add-remove-currencies.md) later.\n:::\n\nYour product now appears on the Products page. You can amend any of the details\nat any time. To do this select the **Menu icon** next to the product then select\n**Edit**.\n\nThe next step is to add [**Capabilities**](./add-capabilities),\n[**Features**](./add-feature), and [**Plans**](../plans/create-plan).",
    "summary": "The excerpt provides a step-by-step guide for creating a product in Salable, emphasizing the distinctions between paid and free products, which supports the broader context of managing customer offerings within organizational accounts.",
    "indexed_at": 1745322321.959691
  },
  "excerpt_id_26398496b4725d2ebb6afc8f67da70c0": {
    "doc_id": "doc_33770b2c0cfee782cf301d74217010d8",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Add Capabilities\n\nCapabilities define functionalities that are available across all plans. They\ncan be easily turned on and off without the need for an API call because they\nare part of the basic functionality of your product.\n\n:::note\n\nFor functionality that is available in some plans but not others, use\n[**Features**](./add-feature)\n\n:::\n\n## Instructions\n\n1. Select **Products** from the navigation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Capabilities** tab on the sidebar.\n4. Input a **Name** for the capability.\n   - There is a limit of 191 characters.\n5. Select **Add**.\n\n:::info\n\nYou can add new capabilities at any time, and you can also create **Capabilities** when creating [**Plans**](../plans/create-plan).\n\n:::",
    "summary": "The excerpt outlines the process of adding capabilities to a product, highlighting their role as essential, universally available functionalities, within the broader context of configuring product plans and features.",
    "indexed_at": 1745322321.985193
  },
  "excerpt_id_a8239cb71650f45a73ca9ee6f9267131": {
    "doc_id": "doc_a9d1a25dbffaf3c09a300be10f35c6c4",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 6\n---\n\n# Delete a Product\n\n:::info\n\nPaid products cannot be deleted, only free products can be deleted.\n\n:::\n\nDeleting a product is simple. Select **Products** from the left-hand menu. Then\nselect the three dotted **Menu icon** next to the product you wish to delete. Select\n**Delete**.",
    "summary": "The excerpt provides a clear and straightforward instruction on deleting products, reinforcing the broader context of product management outlined in the full document.",
    "indexed_at": 1745322322.050982
  },
  "excerpt_id_9a33a99f7264e4cca3eb424f6cfded53": {
    "doc_id": "doc_3765e23200652c2ef7cb4ec659c678a3",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# Edit a License\n\nSome of the parameters of the License can be updated in the Salable Dashboard.\nYou can update the grantee id and suspend a license. Making other changes is not\ncurrently possible. If you need to change something outside of these parameters,\nthe best course of action is to suspend the license and then\n[**issue a new**](./issue-free-license.md) one.\n\n### Update the Grantee ID\n\n1. Select **Products** from the navigation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Navigate to the **Licenses** tab\n4. [**Find the license**](./view-licenses.md) you are looking for.\n5. Select the license ID or select the pencil icon on the license ID.\n6. Select the **Grantee ID** field on the edit license page and update as\n   required.\n7. Select **Update License**\n\n### Suspend a License\n\nYou can suspend a license from the Salable Dashboard or use an\n[**API method**](https://docs.salable.app/api/v2#tag/Licenses/operation/cancelLicense).\n\n1. [**Find the license**](./view-licenses.md) you are looking for.\n2. Select **Suspend License** on the bin icon.\n\n:::caution Suspend Once you Suspend a license, you can't reactivate it.\nInstead, you need to create a new license with the required parameters.",
    "summary": "The excerpt outlines the specific steps for updating a license's grantee ID and suspending a license within the Salable Dashboard, which illustrates the limitations and procedures discussed in the broader document regarding license management.",
    "indexed_at": 1745322322.115381
  },
  "excerpt_id_d6f8663943e239a00e14d46ce038881f": {
    "doc_id": "doc_0036815ad88b1f742c38e632d4dc32da",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Issue a Free License\n\nIf you need to issue a free license to a customer, you can do that directly from\nyour organization's homepage. All you will need is your customer's email\naddress.\n\n## Instructions\n\n1. Select **Licenses** from the sidebar. Then select **Create New License**.\n2. The **Create License** sidebar will open. It has the following parameter:-\n   - **Grantee ID**: The identifier used to check if there is a valid license.\n   - **Licensee Email**: The email address for the customer receiving the free\n     license.\n   - **Product & Plan**: First select the product from the drop-down menu, then\n     the plan level.\n   - **Let Expire/Renew Forever**: For a free license, you will want to select\n     **Renew Forever**.\n3. Select **Create License**.",
    "summary": "The excerpt provides step-by-step instructions for issuing a free license, directly reflecting the main focus of the full document, which is to guide users in managing licenses effectively within their organization.",
    "indexed_at": 1745322322.1833842
  },
  "excerpt_id_15ef1834aa3a1da2af8e9952509255a2": {
    "doc_id": "doc_86fb1e472dd5c0b73a2ee411a14e1a62",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 5\n---\n\n# View Licenses\n\nThere are two options for viewing the licenses that you have issued using\nSalable. You can see the licenses for a specific product from the license tab of\nthat product's page. This will only show the licenses for that product.\n\nAlternatively, you can use the license section from the left-hand menu. In this\nmenu, you can see all the licenses that you have issued across all your\nproducts. You can search and filter this list to find the precise license you\nwant.\n\nThe best method will likely depend on how many licenses you have issued.",
    "summary": "The excerpt reiterates the options for viewing issued licenses in Salable, aligning with the full document's guidance on managing licenses efficiently based on the user's needs.",
    "indexed_at": 1745322322.2821581
  },
  "excerpt_id_edf36a481b1048696352d880c847800e": {
    "doc_id": "doc_6631e01166f556223ea20788176d6de3",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Issue an Evaluation License\n\nIf you need to issue an evaluation license to a customer, you can do that\ndirectly from your organization's homepage. All you will need is your customer's\nemail address.\n\n## Instructions\n\n1. Select **Licenses** from the sidebar. Then select **Create New License**.\n2. The **Create License** sidebar will open. It has the following parameter:-\n   - [**Grantee ID**](./grantee-ids.md): The identifier used to check if there\n     is a valid license.\n   - **Licensee Email**: The email address for the customer receiving the\n     evaluation license.\n   - **Product & Plan**: First select the product from the drop-down menu, then\n     the plan level.\n   - **Let Expire/Renew Forever**: For an evaluation license, you will want to\n     select **Let Expire**.\n3. Once you have completed the fields the Expiration Date Parameter appears. It\n   will default to the cycle time of the plan, but you can manually change it.\n4. Select **Create License**.",
    "summary": "The excerpt provides step-by-step instructions for issuing an evaluation license, which is a crucial process outlined in the full document for managing customer access to products and enhancing their trial experience.",
    "indexed_at": 1745322322.80427
  },
  "excerpt_id_a9b4a17e631a0468ea971fdd9105b1d3": {
    "doc_id": "doc_dee614d6454dd6c399a5ca3f7cffd86a",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Introduction To Plans\n\nPlans are the options you give your customers. Each plan can contain a different\nset of features, have an individual price, and a specific billing interval.\nPlans let you offer your customers the right level of value for their needs.\n\nProducts can add as many plans as you need to suit your needs.\n\nYou can share the details of your plans using our Pricing Tables, which you can\nembed into your website and app.",
    "summary": "The excerpt serves as an introductory overview of the concept of plans, emphasizing their role in providing tailored options and value to customers, which aligns with the broader context of the full document focusing on effective product offerings.",
    "indexed_at": 1745322322.805484
  },
  "excerpt_id_5fe5d153a20530106ecd1eab48fbc041": {
    "doc_id": "doc_32e5cfd1d0d2d4a3bb6bef62bc62885e",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Edit Features of a Plan\n\nPlans are differentiated by the features they offer. If you add or remove\nfeatures from your product it is important to review your plan settings.\n\n## Instructions\n\n1. Select **Products** from the navigation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Plans** tab.\n4. Select the **Edit Icon** next to the plan you wish to edit.\n5. Select the **Features** tab.\n6. Choose the settings you require for each feature. The options will vary based\n   on the _Value Type_ you assigned each feature.\n7. Select **Update Plan**.",
    "summary": "The excerpt serves as a direct guide for adjusting the features of a product plan, reflecting the broader context of product management and configuration outlined in the full document.",
    "indexed_at": 1745322322.834982
  },
  "excerpt_id_f867ef75edd7d7d3c434b36eb4078f99": {
    "doc_id": "doc_8062e41385321f26ac86711a5344af1e",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Create a Plan\n\nYou can add new plans to a product at any time.\n\n## Instructions",
    "summary": "The excerpt introduces the process of adding new plans to a product, which is a key component outlined in the broader document's detailed instructions for configuring product offerings.",
    "indexed_at": 1745322323.611346
  },
  "excerpt_id_ec35536b3d41d59d2de737f1e2874f82": {
    "doc_id": "doc_8062e41385321f26ac86711a5344af1e",
    "doc_order_index": 1,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Create a Plan\n\nYou can add new plans to a product at any time.\n\n## Instructions1.\n\nSelect **Products** from the navigation menu on the left-hand side.\n\n2.\n\nSelect the product you want to configure.\n\n3.\n\nSelect the **Plans** tab.\n\n4.\n\nSelect **Add Plan**.\n\n5.\n\nComplete the fields in the **Plan Labels** section:\n   - **Plan Name** - Name used in the Salable Dashboard.\n\n- **Plan Slug** - The Plan slug is how the plan will be referenced by our API and various SDKs.\n\n- **Plan Description** - Information shown in tooltips.\n\n6.\n\nSelect **Next**.\n\n7.\n\nComplete the fields in the **License Type** section:\n   - **What type of plan is this?\n\n** - There are three different types of plans.\n\nWhich option you choose changes the plan cycle options available.\n\n- **Standard** plans are your typical Basic, Pro, Premium, etc plans that customers can sign up for and contain pre-defined sets of features.\n\n- **Bespoke** plans are created for specific customers and contain custom feature sets and capabilities.\n\n- **Coming Soon** plans allow you to display plans on the pricing table a checkout link.\n\n- **How often does this subscription cycle?\n\n** - Select the time period from the drop-down.\n\nThe options depend on the plan type.\n\n- For _Coming Soon_ and _Standard_, the options are **Year** or **Month**.\n\n- For _Bespoke_ the options are **Year**, **Month** or **Day**.\n\n- Type or use the selector to choose an integer value.\n\n- **What type should each license have?\n\n** - Select the pricing model you are using for this plan.\n\nThe options are **Flat rate**, **Usage** or **Per seat**.\n\nYou can read more about these in the [**Pricing Models**](/docs/using-the-dashboard/pricing-models) article.\n\n- **Is this plan a free plan or a paid plan?\n\n** - Select if you'd like your Plan to be a **Paid Plan** or a **Free Plan**.\n\n- **Does this plan have a trial?\n\n** - Select Yes for the Plan to have a **Trial Period** attached to it.\n\nTrial periods are defined per day.\n\n- **Show in the default pricing table?",
    "summary": "The excerpt outlines the step-by-step instructions for creating a new plan within a product, illustrating the process involved in configuring subscription options and plan features as part of the broader documentation on product management.",
    "indexed_at": 1745322323.6114151
  },
  "excerpt_id_dcbbc112726c43262b223ebfe3ca030b": {
    "doc_id": "doc_8062e41385321f26ac86711a5344af1e",
    "doc_order_index": 2,
    "excerpt": " a **Free Plan**.\n\n- **Does this plan have a trial?\n\n** - Select Yes for the Plan to have a **Trial Period** attached to it.\n\nTrial periods are defined per day.\n\n- **Show in the default pricing table?** - You can here pick whether the Plan is to be shown in the default pricing table.\n\n8.\n\nSelect **Next**.\n\n9.\n\nComplete the fields in the **Assign Values** tab.\n\nYou must assign a\n   relevant value for this plan for each feature in your product.\n\n   If you selected **Usage** as the _License Type_ for the plan, you can specify\n   here which feature is the basis for usage billing by selecting the\n   appropriate radio button.\n\n10. Select **Next**.\n11. Complete the fields in the **Capabilities** tab. These are the capabilities you set up for your product. The **Plan Slug** will be added as a capability.\n12. Select **Create Plan**.\n\nThe plan is now shown in the Plans tab. To make changes to the plan, select the\n**Edit Icon** next to the plan.",
    "summary": "The excerpt outlines specific steps for creating a free plan within the broader context of configuring product plans, impacting how users can define and manage various subscription options in the Salable Dashboard.",
    "indexed_at": 1745322323.6114728
  },
  "excerpt_id_1c89a3caf8d5091ef21a456f714763dc": {
    "doc_id": "doc_a98aa8657b156af76057072123ad6932",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# Pricing Table\n\nTo sell your product to your customers, you need to tell them what plans you\noffer, what features are in each plan, and how much they cost. You can share\nthis information easily using our pricing tables.\n\n## Instructions\n\n1. Select **Products** from the navigation menu on the left-hand side.\n2. Select the product you want to configure.\n3. Select the **Pricing Table** tab.\n4. To see a preview of the pricing table, select **Preview in Browser** under **Actions**. You can see a preview of the pricing table on this page.\n5. If you want to copy the code of the pricing table, select **Copy React Code** or **Copy Vanilla JS Code** on the **Copy Code** tab.\n6. Paste the Pricing Table into your webpage or app.",
    "summary": "The excerpt illustrates specific steps for utilizing the pricing table feature as described in the full document, highlighting its role in effectively presenting product plans and pricing to customers.",
    "indexed_at": 1745322325.555298
  },
  "excerpt_id_e11844eab56f4bda5e94a1d6ea8a906c": {
    "doc_id": "doc_2ae24d8e1c716fdca3dafb0e263d9f75",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# API Overview\n\nSalable is designed to be a flexible tool to allow you to integrate your app\nwith your chosen payment provider easily. The advantage of using Salable is that\nyou can more easily make changes to your pricing structures, and you can offer\nmore options to your customers.\n\nOur APIs (Application Programming Interfaces) use HTTP endpoints that accept\nrequests with JSON arguments and return JSON responses. Authentication is via\nAPI key in the header.\n\nTo get up and running, you need to work through the following steps.\n\n1. Set up a [**Salable Account**](../getting-started/create-an-organization) and\n   Organization\n2. Connect your [**Stripe**](../payment-integration/add-stripe-to-salable) account to Salable or create a Salable payment integration\n3. Build your [**products**](../products/create-a-product) and\n   [**plans**](../plans/create-plan)\n4. Generate your [**API key**](../api-keys/generate-api-key)\n5. Make your first API call\n\nFor full details on our APIs please visit our\n[**API Documentation**](https://docs.salable.app/api/v2).",
    "summary": "The excerpt outlines the initial setup and functionality of Salable's APIs, emphasizing its flexibility in payment integration, which aligns with the broader context of providing a comprehensive guide for developers on utilizing the platform efficiently.",
    "indexed_at": 1745322325.558342
  },
  "excerpt_id_5f94c3a04c280fb20bcd425bb5880a08": {
    "doc_id": "doc_f221e1c5ebb4e2bf0aef6d149e9cf161",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Generate an API Key\n\nEvery request made to Salable requires an API key. Generating them is simple.\n\n## Instructions\n\n1. Select **Settings** from the left-hand navigation menu.\n2. Select the **API Keys** tab.\n3. Select **Create New API Key**\n4. Input an **API Key Name**. eg. License Check\n5. Pick the desired scopes for the API Key.\n6. If desired, set a expiry date for the API Key.\n7. Select **Create API Key**.\n\nThe API Key appears in the menu. You can easily copy it, by selecting the **Copy\nIcon**.",
    "summary": "The excerpt provides a step-by-step guide for generating an API key in Salable, which is essential for making requests in the broader context of the document's instructions on API usage and integration.",
    "indexed_at": 1745322325.6701272
  },
  "excerpt_id_7f2c8e47d35bb9218308b14f91edc663": {
    "doc_id": "doc_037607fe4f8884847513c0e03cc8d516",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 7\n---\n\n# Complete Your Setup\n\nThere are three more steps that need to be completed for your initial Salable\nsetup.\n\n1. Create an API key: You need this so that you can use the Salable dev tools.\n2. Set up a payment integration: Salable has its own payment integration, but it\n   also supports Stripe.\n3. Create a product: Provide details of the product you are providing to your\n   users.\n\nOnce these are complete you are ready to go. You can view these steps by\nselecting **Setup** from the left-hand menu.\n\nThis displays a window showing which steps have been completed, and providing\nlinks to help you complete each step.",
    "summary": "The excerpt outlines essential steps for the initial setup of Salable, directly aligning with the document's purpose of guiding users through the necessary preparations for utilizing the platform effectively.",
    "indexed_at": 1745322325.671006
  },
  "excerpt_id_6c8baf2d6c1051e163ac616bd0a35b3d": {
    "doc_id": "doc_779038c237b77ebd777288262b38d9a5",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Get All Products\n\nReturns a list of all the products created by your Salable organization\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}');\n\nconst products = await salable.products.getAll();\n```\n\n## Return Type\n\nFor more information about this request see our API documentation on [Product Object](https://docs.salable.app/api/v2#tag/Products/operation/getProducts)",
    "summary": "The excerpt provides a practical example of how to retrieve all products from a Salable organization, aligning with the full document's focus on API functionalities and usage.",
    "indexed_at": 1745322325.73745
  },
  "excerpt_id_8df36f78ea176c6bcbef6fd852df56e5": {
    "doc_id": "doc_726c145ea2d23110d6405f02b0199109",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 9\n---\n\n# Update Many Licenses\n\nThis method updates many Licenses with the values passed into the body of the request.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst updatedLicenses = await salable.licenses.updateMany([\n  { granteeId: 'userId_1', uuid: '4886d8c4-fbb0-4a68-bf28-2a640269b0f9' },\n  { granteeId: 'userId_2', uuid: '65157cf5-cad6-4528-ac13-e5e26733f730' },\n]);\n```\n\n## Parameters\n\n### updateManyLicensesParams(_required_)\n\n_Type:_ `UpdateManyLicenseInput[]`\n\n| Option    | Type   | Description                       | Required |\n| --------- | ------ | --------------------------------- | -------- |\n| granteeId | string | The new grantee ID value          | \u2705        |\n| uuid      | string | The UUID of the license to update | \u2705        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [licenses object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseByUuid)",
    "summary": "The excerpt provides a detailed example and method for updating multiple licenses in the Salable API, which supports the broader context of documentation aimed at guiding developers on efficiently managing license data within their applications.",
    "indexed_at": 1745322326.2232032
  },
  "excerpt_id_7f708cd18160447dd54fdd10c6e9203e": {
    "doc_id": "doc_24800785becf1d9323a066395c71b1ee",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 11\n---\n\n# Reactivate a Subscription\n\nThis method reactivates a subscription scheduled for cancellation before the billing period has passed.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.reactivateSubscription('9237877c-baae-46d0-b482-cb0147179e30');\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the subscription to be returned\n\n## Return Type\n\nReturns void",
    "summary": "The excerpt outlines the process for reactivating a subscription within the broader context of handling subscription management through the Salable node SDK, emphasizing the importance of maintaining active subscriptions within billing cycles.",
    "indexed_at": 1745322326.503102
  },
  "excerpt_id_a2a63168fefaa5ee74a7c9bfd596d64a": {
    "doc_id": "doc_23f7b4cbe21498e0855044e30dfbf12e",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 5\n---\n\n# Join an Organisation\n\nTo join an existing organisation, the organisation owner will need to\n[**send an invite**](./invite-your-team-to-salable). Once they have done this,\nyou will receive an email with a link. You may need to check your junk folder.\n\n1. Follow the link or select **Accept Invitation** in the email.\n2. Provide your name and choose a secure password.\n3. Click **Accept invite**.\n\nYour account is created and you are automatically added to the organisation that\nsent the invitation.",
    "summary": "The excerpt provides a step-by-step guide on how to join an organisation, which is a crucial process outlined in the broader document focused on onboarding and collaboration within the platform.",
    "indexed_at": 1745322326.547688
  },
  "excerpt_id_d96e80b895dea6915b51ebb69acff797": {
    "doc_id": "doc_58302d4d703ff49db12ebda094cbe410",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Get One Pricing Table\n\nReturns all necessary data on a display a pricing table.\n\n## Code Sample\n\n#### Required parameters\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst pricingTable = await salable.pricingTables.getOne('0c0ee2b7-2f3b-436b-8b4e-b21d0ddbf2a9', {\n  granteeId: 'grantee_1',\n  currency: 'USD'\n});\n```\n\n## Parameters\n\n##### pricingTableUuid (_required_)\n\n_Type:_ `string`\n\nThe `uuid` of the Pricing Table to build\n\n---\n\n#### options\n\n_Type:_ `{ granteeId: String, currency: String  }`\n\n| Option    | Type   | Description                                                                                                        | Required |\n| --------- | ------ | ------------------------------------------------------------------------------------------------------------------ | -------- |\n| granteeId | string | The unique identifier for the grantee                                                                              | \u274c        |\n| currency  | string | Uses the currency short name e.g. USD, defaults to the default currency on the Product which the Plan is linked to | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Pricing Table](https://docs.salable.app/api/v2#tag/Pricing-Tables/operation/getPricingTableByUuid)",
    "summary": "The excerpt provides a specific segment of the API documentation focused on retrieving a single pricing table, reflecting the broader context of the full document which serves as a comprehensive guide for developers using the Salable SDK.",
    "indexed_at": 1745322326.6070762
  },
  "excerpt_id_93d0cd6095f34cb94d3af52c681f6f6b": {
    "doc_id": "doc_aa5b19e5b795b67731854999107443da",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Introduction\n\nSalable is a platform that allows you to easily sell your app to your customers.\nNot only can you integrate a payment system within your app, but you can also\nset up different plans to suit your customer's needs. Salable is not\nplatform-specific, so you can use it no matter what your app is built to do, or\nwhere it does it.\n\nThrough Salable, you can :\n\n- Set up subscription plans.\n- Create multiple plans for a single product with customizable features.\n- Issue evaluation licenses to let customers try your product.\n- Change the price of your product.\n- Easily give licenses to individual users, a Trello or Miro board, or a whole\n  organisation.",
    "summary": "The excerpt highlights the core features of the Salable platform, emphasizing its versatility and customer-centric options for app monetization, which aligns with the broader context of enabling developers to effectively market and sell their applications.",
    "indexed_at": 1745322326.7400582
  },
  "excerpt_id_6e54175b7facf4c674d075679fc4ea9b": {
    "doc_id": "doc_f63275b3ac41b54c51b625e01ef5049d",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 8\n---\n\n# Support\n\nOur support team is always happy to help. If you need any assistance, simply\nsubmit a request through our\n[**support portal**](https://salable.atlassian.net/servicedesk/customer/portals)\nor send us an email at **<support@salable.app>**. You can also find us in [**Discord**](https://discord.com/invite/ddemxcdThC)\n\nYou can check the current status of Salable from the\n[**Salable status page**](https://salable.statuspage.io/). This page also\nprovides historical information regarding Salable's uptime and availability.",
    "summary": "The excerpt serves as a direct reiteration of the support information provided in the full document, emphasizing the availability of assistance and tools for users to monitor Salable's service status.",
    "indexed_at": 1745322326.805322
  },
  "excerpt_id_acea73938f6ace38d84b68497fd7b05a": {
    "doc_id": "doc_23c2c3d161839f6f5c73baf8e4d2fb7b",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Update Organisation Details\n\nAn organisation is automatically created when you create your account. You can\nupdate your organisation details at any time. To update your organisation\ndetails:\n\n1. Select **Org Settings** from the left-hand menu.\n2. Update your organisation details.\n3. Click **Save Changes**.",
    "summary": "The excerpt provides specific instructions for updating organisation details, which aligns with the broader context of managing account settings within the full document's guidance on enhancing user account functionality.",
    "indexed_at": 1745322326.834486
  },
  "excerpt_id_a3e10272ea78f4d7722234027bb8e4bc": {
    "doc_id": "doc_e322e19c1104a477ce486c9265da4167",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Create an Account\n\nAccounts are how you and your team access Salable. Each team member has their\nown account which they access using their email and a password they set up.\n\nTo create an account:\n\n1. Go to the [**Salable home page**](https://www.salable.app).\n2. Click the **Get Started Free** button.\n3. Enter your name, email address, and create a password, or simply sign up with a GitHub or Google account.\n4. Click on **Continue**.\n\n> **_NOTE:_** You will only need to verify your email address when not using a GitHub or Google sign up.\n\n5. Enter the Verification code sent to the email address you provided.\n6. Click **Verify**.",
    "summary": "The excerpt outlines the steps for creating an account on Salable, serving as a practical guide within the broader document focused on user onboarding and access procedures for the platform.",
    "indexed_at": 1745322326.908176
  },
  "excerpt_id_957a53aebe179fef047e927dd691f8e1": {
    "doc_id": "doc_9613f76164da2082e41d87ad603a2d70",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# Invite Your Team to Salable\n\nYou may need to give other members of your team access to your Salable\ndashboard. You can add as many team members as you need to your organisation.\n\n## Instructions\n\n1. Select the **Settings** from the bottom of the left-hand navigation menu.\n2. Select the **Team** tab.\n3. Select the **Invite Member** button.\n4. Enter your team member's email address.\n\nAn email is sent to the email address provided. From the email, your team member\ncan create their own account for Salable. Their account is automatically linked\nto your organisation.\n\nYou can view the status of invited team members by selecting **Settings** from\nthe left-hand menu and viewing the _Team_ tab. You can revoke an invite by\nclicking the menu icon for the relevant team member and selecting **Revoke\nInvite**.\n\nBy default, new members of your team will only have read access to your Salable\ninstance. You can read how to edit their permissions on the\n[**Manage Your Team**](../getting-started/manage-your-team#edit-permissions)\npage.",
    "summary": "The excerpt provides a step-by-step guide on inviting team members to access the Salable dashboard, highlighting functionality within the broader context of team collaboration and account management.",
    "indexed_at": 1745322327.413433
  },
  "excerpt_id_df8090e7aed9180a3275364203d78648": {
    "doc_id": "doc_270d609482d8e417896aa5db7c3f939f",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 6\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Update a license grantee\n\nUpdate the `granteeId` of the license to assign it to a new grantee.\n\n:::info\n\nIf you want to unassign the license, you can set the `granteeId` to `null`.\n\n:::\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\n\nconst updatedLicenses = await salable.licenses.updateMany([\n  { granteeId: 'new_userId_1', uuid: 'your-license-uuid' },\n  { granteeId: null, uuid: 'your-license-uuid' }, // this license will be unassigned\n]);\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XPUT\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  -d '[{ \"licenseUuid\": \"your-license-uuid\", \"granteeId\": \"new-user-id\" }, { \"licenseUuid\": \"your-license-uuid\", \"granteeId\": null }]'\n  'https://api.salable.app/licenses'\n```\n\n</TabItem>\n</Tabs>",
    "summary": "The excerpt provides specific code examples for updating license grantee information, illustrating a practical application of the broader documentation on license management within the Salable API.",
    "indexed_at": 1745322327.41414
  },
  "excerpt_id_fabc937abc8c4367253839f749f33317": {
    "doc_id": "doc_1605edeb9516187d602e9c8677f9ee79",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Get Pricing Table for a Product\n\nReturns all necessary data on a Product to be able to display a pricing table. Every active plan on the product will be added to the table in the sort order of free plans, paid plans price, and then coming soon plans.\n\n## Code Sample\n\n#### Required parameters\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}');\n\nconst pricingTable = await salable.products.getPricingTable('7827727d-6fa9-46e6-b865-172ccda6f5a4', {\n  granteeId: 'granteeid@email.com',\n});\n```\n\n## Parameters\n\n##### productUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Product to build the pricing table for\n\n---\n\n##### queryParams (_required_)\n\n_Type:_ `PricingTableParameters`\n\nBelow is the list of properties than can be used in the `queryParams` argument.\n\n| Parameter | Description                                                                                                       | Required |\n| --------- | ----------------------------------------------------------------------------------------------------------------- | -------- |\n| granteeId | The unique identifier for the grantee                                                                             | \u2705       |\n| currency  | Uses the currency short name e.g USD, defaults to the default currency on the product which the plan is linked to | \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Product Pricing Table Object](https://docs.salable.app/api/v2#tag/Products/operation/getProductPricingTable)",
    "summary": "The excerpt provides a detailed explanation and code sample for retrieving a product's pricing table, aligning with the broader context of the full document by offering developers the necessary information to implement this functionality using the Salable API.",
    "indexed_at": 1745322329.534274
  },
  "excerpt_id_413bf83a1f6433b1357024badf84fc52": {
    "doc_id": "doc_bc381e6e9cf433d976d198b65b04d444",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 6\n---\n\n# Get Currencies for a product\n\nReturns a list of all the currencies associated with a product\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}');\n\nconst currencies = await salable.products.getCurrencies('1df1f535-4b5c-4948-ac71-71c5e4d3f919');\n```\n\n## Parameters\n\n#### productUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Product\n\n## Return Type\n\nFor more information about this request see our API documentation on [Product Currency Object](https://docs.salable.app/api/v2#tag/Products/operation/getProductCurrencies)",
    "summary": "The excerpt provides a specific implementation example for retrieving currency information associated with a product, illustrating how developers can utilize the Salable API within the broader context of managing product-related data through the platform.",
    "indexed_at": 1745322329.604734
  },
  "excerpt_id_5054bb85ceb11e7cd95222d0fffc6476": {
    "doc_id": "doc_d77ecffc203938df962902c5687ab474",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Get One\n\nReturns the details of a single product.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst product = await salable.products.getOne('3fe29048-28bf-461c-8498-c42c3572359c');\n```\n\n## Parameters\n\n#### productUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Product to be returned\n\n---\n\n#### options\n\n_Type:_ `GetProductOptions`\n\n| Option | Type     | Description                                                                  | Required |\n| ------ | -------- | ---------------------------------------------------------------------------- | -------- |\n| expand | string[] | Specify which properties to expand. e.g. `{ expand: ['features', 'plans'] }` | \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Product Object](https://docs.salable.app/api/v2#tag/Products/operation/getProductByUuid)",
    "summary": "The excerpt provides a detailed code sample and explanation for the \"Get One\" API function, which aligns with the broader context of the full document by illustrating how to retrieve product details efficiently using the Salable SDK.",
    "indexed_at": 1745322330.267829
  },
  "excerpt_id_4084123f56be759c3a4de2c2abd2e01d": {
    "doc_id": "doc_3ccb7ba080a2031ccdddd39e67e04236",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# Get Plans for a Product\n\nReturns a list of all the plans associated with a product\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}');\n\nconst plans = await salable.products.getPlans('054788af-6f2c-4e7a-bc32-3747b6b0d2e6');\n```\n\n## Parameters\n\n#### productUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Product\n\n## Return Type\n\nFor more information about this request see our API documentation on [Plan Object](https://docs.salable.app/api/v2#tag/Products/operation/getProductPlans)",
    "summary": "The excerpt provides a code sample and explanation for retrieving plans associated with a product using the Salable API, reinforcing the full document's focus on API functionality for product management.",
    "indexed_at": 1745322330.3184268
  },
  "excerpt_id_3e7d435b3bee1520f4473a125ea800e1": {
    "doc_id": "doc_5ea178053c978686ddeb09c2dc231b0c",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 7\n---\n\n# Get Licenses for a Grantee ID\n\nReturns licenses for a grantee ID\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst licenses = await salable.licenses.getForGranteeId('da88805a-2802-4062-87d7-2b83ddf8e0ca', { expand: 'plan' });\n```\n\n## Parameters\n\n#### granteeId (_required_)\n\n_Type:_ `string`\n\nThe grantee ID of the licenses\n\n---\n\n#### options\n\n_Type:_ `{ expand: string[] }`\n\n| Option | Type   | Description                                                     | Required |\n| ------ | ------ | --------------------------------------------------------------- | -------- |\n| expand | string | Specify which properties to expand. e.g. `{ expand: ['plan'] }` | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [License Object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseByUuid)",
    "summary": "The excerpt provides a specific code example and detailed parameter information for retrieving licenses associated with a grantee ID, which aligns with the broader context of the API documentation aimed at guiding developers in effectively using the Salable SDK.",
    "indexed_at": 1745322334.823607
  },
  "excerpt_id_09329d7ae662ecf72d3d964190506555": {
    "doc_id": "doc_ffd3757b4d8967ff8d6ddbe8789cac22",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 10\n---\n\n# Check License\n\nRetrieves the capabilities the grantee(s) have access to.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst check = await salable.licenses.check({\n    productUuid: 'product1',\n    granteeIds: ['grantee_1', 'grantee_2'],\n});\n```\n\n## Parameters\n\n#### checkLicenseParams (_required_)\n\n_Type:_ `CheckLicenseInput`\n\n| Option               | Type     | Description                        | Required |\n| -------------------- | -------- | ---------------------------------- | -------- |\n| grantproductUuideeId | string   | The UUID of the product            | \u2705        |\n| granteeIds           | string[] | An array of grantee IDs            | \u2705        |\n| grace                | number   | Optional grace period to filter by | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [License Check Object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseCheck)",
    "summary": "The excerpt provides a detailed explanation and code sample for the \"Check License\" functionality, which is crucial for understanding how to verify the access capabilities of grantees within the broader context of the Salable API documentation.",
    "indexed_at": 1745322334.906445
  },
  "excerpt_id_38026b862e04409b6fbda7aa7728c287": {
    "doc_id": "doc_cdb328b73bfb2a05232b4162fa5d5f29",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 11\n---\n\n# Cancel License\n\nThis method will cancel an ad hoc License\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nawait salable.licenses.cancel('8ea5c243-7052-4906-acc5-a84690e2cad9');\n```\n\n## Parameters\n\n#### licenseUuid (_required_)\n\n_Type:_ `string`\n\n`uuid` of the License to be canceled\n\n## Return Type\n\nFor more information about this request see our API documentation on [cancel License](https://docs.salable.app/api/v2#tag/Licenses/operation/cancelLicense)",
    "summary": "The excerpt serves as a detailed example of the functionality and implementation of the \"Cancel License\" method within the broader context of the Salable API documentation, emphasizing how to programmatically cancel licenses using the provided code and parameters.",
    "indexed_at": 1745322335.0553422
  },
  "excerpt_id_4a229833547e95024c6779c45ca44d74": {
    "doc_id": "doc_271aa9e874e54f6a8c9b96c631584ada",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Create License\n\nThis method creates an ad hoc license\n\n## Code Sample\n\n### Create one\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst license = await salable.licenses.create({\n  planUuid: '60f4f073-f6df-43cf-b394-2d373802863d',\n  member: 'orgId_1234',\n  granteeId: 'userId_1',\n  status: 'ACTIVE',\n  endTime: '2025-07-06T12:00:00.000Z',\n});\n```\n\n## Parameters\n\n#### createAdHocLicenseParams (_required_)\n\n_Type:_ `CreateAdhocLicenseInput`\n\n| Option    | Type   | Description                                                                                                           | Required |\n| --------- | ------ | --------------------------------------------------------------------------------------------------------------------- | -------- |\n| planUuid  | string | The UUID of the plan associated with the license. The planUuid can be found on the Plan view in the Salable dashboard | \u2705        |\n| member    | string | The ID of the member who will manage the license.                                                                     | \u2705        |\n| granteeId | string | The grantee ID for the license.                                                                                       | \u274c        |\n| status    | string | The status of the created license, e.g. \"ACTIVE\" \"TRIALING\"                                                           | \u274c        |\n| endTime   | string | Provide a custom end time for the license; this will override the plan's default interval.                            | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [License Object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseByUuid)",
    "summary": "The excerpt details the process of creating an ad hoc license using the Salable SDK, which is a practical implementation highlighted in the broader context of the full document that provides guidelines on license management through API.",
    "indexed_at": 1745322335.17974
  },
  "excerpt_id_6076dda59bfdbe6622255d23b2c3a8fb": {
    "doc_id": "doc_9aff2a61e6e9e2e545670b9b7cadc896",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 8\n---\n\n# Update License\n\nThis method updates specific Licenses with the values passed into the body of the request.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst updatedLicense = await salable.licenses.update('e38f0e83-b82d-4f95-a374-6663061456c3', { granteeId: 'updated_grantee_id' });\n```\n\n## Parameters\n\n#### licenseUuid (_required_)\n\n_Type:_ `string`\n\nThe `uuid` of the license to be updated\n\n---\n\n#### updateLicenseParams (_required_)\n\n_Type:_ `{ granteeId: string }`\n\n| Option    | Type           | Description                                                                        | Required |\n| --------- | -------------- | ---------------------------------------------------------------------------------- | -------- |\n| granteeId | string or null | The new grantee ID for the license                                                 | \u2705       |\n| endTime   | string         | Custom DateTime string for the license which overrides the plan's default interval | \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [license object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseByUuid)",
    "summary": "The excerpt outlines the process for updating a license within the broader documentation of the Salable API, providing a code sample and parameters that ensure developers can effectively modify license records.",
    "indexed_at": 1745322335.258592
  },
  "excerpt_id_a78cd4046bc4c2cd90d128228e28893d": {
    "doc_id": "doc_8a63d2fe59a9b408f48ea0b9f8adea71",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 12\n---\n\n# Cancel many Licenses\n\nThis method will cancel many ad hoc Licenses\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nawait salable.licenses.cancelMany({uuids: ['c6b04b5b-3a5f-405d-af32-791912adfb53', 'ac4ff75d-714a-4eb3-8d3b-a34fe081c36a']});\n```\n\n## Parameters\n\n##### licenseUuids (_required_)\n\n_Type:_ `string[]`\n\n`uuid` array of the Licenses to be canceled\n\n## Return Type\n\nFor more information about this request see our API documentation on [cancel many Licenses](https://docs.salable.app/api/v2#tag/Licenses/operation/cancelLicenses)",
    "summary": "The excerpt illustrates a specific method for canceling multiple ad hoc licenses using the Salable API, aligning with the document's focus on providing practical API usage examples and parameters for developers.",
    "indexed_at": 1745322335.669315
  },
  "excerpt_id_56aa6c2f3a48e03ccbf832da08a273b0": {
    "doc_id": "doc_6c502313fdca19fb8a96216bfa5ed601",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Get Features\n\nReturns a list of all the Features associated with a Plan\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst plan = await salable.plans.getFeatures('003c917a-4c3a-4e67-8d36-adeb22281681');\n```\n\n## Parameters\n\n##### planUuid (_required_)\n\n_Type:_ `string`\n\nThe `uuid` of the Plan to return the Features from\n\n## Return Type\n\nFor more information about this request see our API documentation on [Plan Feature Object](https://docs.salable.app/api/v2#tag/Plans/operation/getPlanFeatures)",
    "summary": "The excerpt provides a detailed example of how to retrieve features associated with a specific plan using the Salable API, illustrating the practical application of the broader documentation on managing plans within the API framework.",
    "indexed_at": 1745322335.753558
  },
  "excerpt_id_e8114e81957601460a88df02adf09794": {
    "doc_id": "doc_8a512cfb7d98bc56b138fa7826e74c0c",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Get All Usage Records for a Grantee\n\nReturns a list of all the usage records for grantee's metered licenses\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst records = await salable.usage.getAllUsageRecords({\n  granteeId: 'grantee_1'\n});\n```\n\n## Parameters\n\n#### options (_required_)\n\n_Type:_ `GetLicenseOptions`\n\n| Option           | Type   | Description                                                                          | Required |\n|------------------|--------|--------------------------------------------------------------------------------------|----------|\n| granteeId        | string | The granteeId of the license                                                  | \u2705        |\n| type             | string | Filter by the type of usage record                                                   | \u274c        |\n| status           | string | Filter by the status of the license                                                  | \u274c        |\n| planUuid         | string | The UUID of the plan the license belongs to                                          | \u274c        |\n| subscriptionUuid | string | Filters usage records by their license's subscription                                | \u274c        |\n| sort             | string | Sorts usage records by createdAt field. Default (`'asc'`). Enum: `'asc'` \\| `'desc'` | \u274c        |\n| cursor           | string | Cursor value, used for pagination                                                    | \u274c        |\n| take             | string | The amount of licenses to fetch                                                      | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Usage Record Object](https://docs.salable.app/api/v2#tag/Usage/operation/getLicenseUsage)",
    "summary": "The excerpt directly provides a detailed description and code sample related to the process of retrieving all usage records for a grantee's metered licenses, which supports the broader context of API functionality outlined in the full document.",
    "indexed_at": 1745322336.5588439
  },
  "excerpt_id_af891ba93357fd6013d5bbd53f638736": {
    "doc_id": "doc_e1f6eb964750da076a5295a116d69fae",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Update Usage\n\nIncrements usage count on a License\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nawait salable.usage.updateLicenseUsage({\n  granteeId: 'grantee_1', \n  planUuid: 'bc4e485c-cdd6-4cd2-9d61-7d0f6a6ce53c', \n  increment: 1,\n  idempotencyKey: '63f37318-c5a5-4e56-b338-cadccc7162e7'\n});\n```\n\n## Parameters\n\n#### options (_required_)\n\n_Type:_ `UpdateLicenseUsageOptions`\n\n| Option         | Type   | Description                                     | Required |\n|----------------|--------|-------------------------------------------------|----------|\n| granteeId      | string | The granteeId of the license                    | \u2705        |\n| planUuid       | string | The UUID of the plan the license belongs to     | \u2705        |\n| increment      | string | The value to increment the usage on the license | \u2705        |\n| idempotencyKey | string | A unique key for idempotent requests            | \u2705        |\n\n## Return Type\n\nReturns void",
    "summary": "The excerpt provides a code sample and details on updating license usage, which illustrates the practical application of the API functionality discussed in the broader context of managing software licenses within the full document.",
    "indexed_at": 1745322337.0404632
  },
  "excerpt_id_8f56e428f951a352b3a5155a7b79b723": {
    "doc_id": "doc_b25a460fdb3aa820626ddb4567bc4ed4",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Get Current Usage Record for Grantee on Plan\n\nReturns the currency usage record for a metered license\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst records = await salable.usage.getCurrentUsageRecord({\n  granteeId: 'grantee_1', \n  planUuid: 'a155a63d-4391-4301-b335-8d9d977ebad1'\n});\n```\n\n## Parameters\n\n#### options (_required_)\n\n_Type:_ `CurrentUsageOptions`\n\n| Option         | Type   | Description                                     | Required |\n|----------------|--------|-------------------------------------------------|----------|\n| granteeId      | string | The granteeId of the license                    | \u2705        |\n| planUuid       | string | The UUID of the plan the license belongs to     | \u2705        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Usage Record Object](https://docs.salable.app/api/v2#tag/Usage/operation/getCurrentLicenseUsage)",
    "summary": "The excerpt illustrates a method for obtaining the current usage record for a specific grantee's metered license, fitting into the broader context by demonstrating how to interact with the Salable API to manage licensing data effectively.",
    "indexed_at": 1745322337.088143
  },
  "excerpt_id_fde1d0189eaa75074956787efcc59cec": {
    "doc_id": "doc_5ee1331eaaebe74e1c8b89b6d4453fa2",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 12\n---\n\n# Increment Subscription Seats\n\nAdds seats to a Subscription. Initially the seats will be unassigned. To assign granteeIds to the seats use the [update many](../licenses/update-many.md) method.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nawait salable.subscriptions.addSeats('d18642b3-6dc0-40c4-aaa5-6315ed37c744', { increment: 2 });\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Subscription\n\n#### Options (_required_)\n\n_Type:_ `{ increment: number, proration: string }`\n\n| Option    | Type   | Description                                                                                                                                                                                                        | Required |\n| --------- | ------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |\n| increment | number | The number of seats to be created                                                                                                                                                                                  | \u2705       |\n| proration | string | `create_prorations`: Will cause proration invoice items to be created when applicable (default). `none`: Disable creating prorations in this request. `always_invoice`: Always invoice immediately for prorations. | \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Seat Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/incrementSubscriptionSeats)",
    "summary": "The excerpt provides a specific implementation example and detailed parameter information for the \"Increment Subscription Seats\" feature discussed in the broader document, illustrating how to modify subscription capacities programmatically.",
    "indexed_at": 1745322337.097845
  },
  "excerpt_id_a4b8e11006d615b209673feede32f6c5": {
    "doc_id": "doc_4a14ceb8de35ac69f2f6db1542226f05",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 10\n---\n\n# Get a Subscription Payment Method\n\nReturns the payment method used to pay for a subscription.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.getPaymentMethod('07b3b494-a8f0-44f7-b051-add30c8c6002');\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the subscription\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Payment Method Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/getSubscriptionPaymentMethod)",
    "summary": "The excerpt provides a specific code example and parameters for retrieving the payment method associated with a subscription, aligning with the broader context of the full document which outlines the API's functionality for subscription management.",
    "indexed_at": 1745322339.927522
  },
  "excerpt_id_9f79e3a1bec25332acbb8c2bde410424": {
    "doc_id": "doc_8032ac9a9e73df91500d1451a45cf16a",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Get All Subscriptions\n\nReturns a list of all the subscriptions created by your Salable organization.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.getAll();\n```\n\n## Parameters\n\n#### options\n\n_Type:_ `GetSubscriptionOptions`\n\n| Option      | Type   | Description                                                             | Required |\n|-------------|--------|-------------------------------------------------------------------------|----------|\n| status      | string | The status of the subscription, e.g. \"ACTIVE\" \"CANCELED\"                | \u274c        |\n| email       | string | The email of who purchased the subscription                             | \u274c        |\n| owner       | string | The owner of the subscription                                           | \u274c        |\n| cursor      | string | Cursor value, used for pagination                                       | \u274c        |\n| take        | number | The amount of subscriptions to fetch. Default: `20`                     | \u274c        |\n| productUuid | string | Filter subscriptions by product                                         | \u274c        |\n| planUuid    | string | Filter subscriptions by plan                                            | \u274c        |\n| sort        | string | Sorts by expiryDate field. Default (`'asc'`). Enum: `'asc'` \\| `'desc'` | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/getSubscriptions)",
    "summary": "The excerpt provides a detailed overview of the \"Get All Subscriptions\" feature in the Salable API, which aligns with the broader context of the full document by outlining how to retrieve a comprehensive list of subscriptions created by an organization and the various options available for filtering and sorting that data.",
    "indexed_at": 1745322340.008085
  },
  "excerpt_id_eb980ddfe99dddb529d8107a56a3e090": {
    "doc_id": "doc_c7fff755381b5f590cb260babfe4d211",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 13\n---\n\n# Remove Subscription Seats\n\nRemove seats from a Subscription. Seats can only be removed if they are unassigned. To unassign seats use the [update many](../licenses/update-many.md) method to set the `granteeId` of each seat to `null`.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nawait salable.subscriptions.removeSeats('17830730-3214-4dda-8306-9bb8ae0e3a11', { decrement: 1 });\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Subscription\n\n#### Options (_required_)\n\n_Type:_ `RemoveSubscriptionSeatsOption`\n\n| Option    | Type   | Description                                                                                                                                                                                                        | Required |\n| --------- | ------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |\n| decrement | number | The number of seats to be created                                                                                                                                                                                  | \u2705       |\n| proration | string | `create_prorations`: Will cause proration invoice items to be created when applicable (default). `none`: Disable creating prorations in this request. `always_invoice`: Always invoice immediately for prorations. | \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Seat Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/decrementSubscriptionSeats)",
    "summary": "The excerpt provides detailed instructions on how to remove unassigned seats from a subscription, illustrating a specific functionality within the broader context of managing subscriptions and licenses in the Salable API documentation.",
    "indexed_at": 1745322343.50983
  },
  "excerpt_id_9e7d62a87ad119e8af876e0901542e69": {
    "doc_id": "doc_86eb41b9686ef642ee8a6e41e357a776",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 5\n---\n\n# Get Switchable Plans for a Subscribed User\n\nReturns the details of a single subscription.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.getSwitchablePlans('e0517f96-1ac0-4631-a52b-56ace9d1168c');\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the subscription\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/getSubscriptionUpdatablePlans)",
    "summary": "The excerpt illustrates how to retrieve specific subscription details using the Salable API, emphasizing its implementation and relevance within the broader context of managing subscription plans effectively.",
    "indexed_at": 1745322346.015042
  },
  "excerpt_id_8093f394b10c10fe8ec1e9608f9fe8ce": {
    "doc_id": "doc_3dfd34e5fb656835b8e739ab21adba88",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 6\n---\n\n# Cancel a Subscription\n\nCancels a Subscription with options for when it terminates.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nawait salable.subscriptions.cancel('ce8cc0cb-a180-4d90-985b-0890d5ac6cbb', { when: 'end' });\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Subscription to be canceled\n\n##### options (_required_)\n\n_Type:_ `CancelSubscriptionOptions`\n\n| Option | Type | Description                                                                                                    | Required |\n| ------ | ---- | -------------------------------------------------------------------------------------------------------------- | -------- |\n| when   | enum | `now`: Immediately cancels the Subscription. `end`: Cancels the Subscription at the end of it's billing period | \u2705       |\n\n## Return Type\n\nReturns void",
    "summary": "The excerpt provides a detailed explanation of how to cancel a subscription using the Salable API, emphasizing the available options for termination timing, which aligns with the full document's focus on subscription management features.",
    "indexed_at": 1745322346.015736
  },
  "excerpt_id_d9c1267809cd58cbd21415af67a458ab": {
    "doc_id": "doc_fcb540cb13f0785f04cd015eedfe2959",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 8\n---\n\n# Get a Customer Portal Link for a Subscription\n\nReturns the customer portal link for a subscription.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.getOne('a2188e78-2490-408e-93f6-35f829d05b49');\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the subscription to be returned\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Portal Link Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/getSubscriptionCustomerPortalLink)",
    "summary": "The excerpt provides a code snippet and details on retrieving a customer portal link for a subscription, illustrating a practical implementation of the API discussed in the broader document focused on subscription management.",
    "indexed_at": 1745322346.4666219
  },
  "excerpt_id_309cb05ad9ffc9790904eeb1293bc388": {
    "doc_id": "doc_e081fc69cb3564f5236fc5515a41e394",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 6\n---\n\n# Manage Your Team\n\nYou can manage your team by selecting **Settings** from the left-hand menu and\nviewing the _Teams_ tab. From here you can:\n\n- See all members of your team.\n- Invite people to join your team.\n- View the status of team members.\n- Revoke invitations of members in _PENDING_ status.\n- Edit permissions of team members.\n- Remove team members.\n\nYou can read more about inviting people to join your team and revoking\ninvitations [**here**](../getting-started/invite-your-team-to-salable.md).\n\n## Edit permissions\n\nBy default, new team members have read-only access to your Salable account. To\nedit their permissions:\n\n1. Select **Settings** from the left-hand menu.\n2. Select the _Teams_ tab.\n3. Select **Edit Permissions** on the user.\n4. Click the checkboxes for the permissions you want to grant to the team\n   member.\n\n> **_NOTE:_** You can toggle **Select All** to select and deselect all\n> permissions at once.\n\n5. Click **Update permissions**.\n\n## Remove a User\n\nTo remove a team member who no longer needs access to your Salable dashboard:\n\n1. Select **Settings** from the left-hand menu.\n2. Select the _Teams_ tab.\n3. Select **Remove Member**.\n4. A window displays asking you to confirm that you want to remove the team\n   member. Click **Remove Member**.",
    "summary": "The excerpt provides detailed instructions for managing team members within the Salable platform, reinforcing the broader context of fostering effective team collaboration and access control as outlined in the full document.",
    "indexed_at": 1745322348.430885
  },
  "excerpt_id_986393e22f5effe04fced6469538c6a8": {
    "doc_id": "doc_aa8c5dd19688bab753afb21af116c5bb",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Add existing Stripe account\n\nIf you already have a Stripe account, you can easily link it with Salable in\norder to accept payments.\n\n1. Select the **Settings** from the left-hand navigation menu.\n2. Select the **Payment Integrations** tab from the settings dropdown.\n3. On the **Payment Integrations** page, select the **Add Payment Integration** button on the top right of the page.\n4. Select _Stripe_ from the **Payment Providers** dropdown.\n5. Set the \"Account Name\", this is the name of the integration for internal\n   reference in the dashboard.\n6. Click \"Add Payment Integration\". You will now be redirected to Stripe to\n   complete the setup process.\n7. Login to Stripe using your existing credentials to link your account to\n   Salable.",
    "summary": "The excerpt provides a step-by-step guide on integrating an existing Stripe account with Salable, which is essential for users seeking to enable payment processing within the broader document's context of setting up payment options for the platform.",
    "indexed_at": 1745322348.54549
  },
  "excerpt_id_c260728e1de323aa7fe6e522b249a64f": {
    "doc_id": "doc_a8e1916cc8bb940d4c0163b97580e064",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\ndescription: What is Test Mode and how to enable it.\n---\n\n# What is Test Mode?\n\nTest Mode within Salable provides an environment where you have all the\nfunctionality that Salable offers, but any changes made in Test Mode do not\naffect your production environment.\n\nYou can create a product, test it, and then make any required changes, all while\nremaining in Test Mode. Once you're happy that everything works as expected, you\ncan convert it to a live product simply by clicking a button.\n\nAll of the functionality of Salable is available in Test Mode, so you can test\nthoroughly and be assured that the product behaves the way you want it to before\nconverting it to a live product.",
    "summary": "The excerpt outlines the features and benefits of Test Mode in Salable, emphasizing its role in allowing users to safely test and refine products without impacting the live environment, which aligns with the broader context of ensuring product reliability and user satisfaction within the full document.",
    "indexed_at": 1745322348.960386
  },
  "excerpt_id_84ba61a9cf0ed2192fe80412f2b0f2b3": {
    "doc_id": "doc_ea79edb81636553152ab8b1ee2fcfabb",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 7\n---\n\n# Get Capabilities\n\nReturns a list of all the capabilities associated with a product\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}');\n\nconst currencies = await salable.products.getCapabilities('cc5fcd03-cfd1-471e-819d-2193746f93dd');\n```\n\n## Parameters\n\n#### productUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Product\n\n## Return Type\n\nFor more information about this request see our API documentation on [Product Capability Object](https://docs.salable.app/api/v2#tag/Products/operation/getProductCapabilities)",
    "summary": "The excerpt provides a specific example of how to use the API to retrieve product capabilities, which aligns with the broader context of the full document that describes API functionalities and usage for managing products in the Salable system.",
    "indexed_at": 1745322349.017558
  },
  "excerpt_id_01f6a9a4eeb4c2758503ad40c871dba7": {
    "doc_id": "doc_9fb8ab9134578ad57f31f5fbe40cfd76",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Create Session\n\nThis methods creates a new session to use with the Salable web components\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst event = await salable.sessions.create({\n    scope: SessionScope.PricingTable,\n      metadata: {\n        productUuid: '3ab5c243-7052-4906-bdd5-a93500f2dbf0',\n      },\n});\n```\n\n## Parameters\n\n#### createSessionParams (_required_)\n\n_Type:_ `CreateSessionInput`\n\n| Option   | Type   | Description                                      | Required |\n| -------- | ------ | ------------------------------------------------ | -------- |\n| scope    | string | The component the created session will be used with | \u2705        |\n| metadata | object | Additional data needed for the session (varies by scope) | \u2705        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [License Object](https://docs.salable.app/api/v2#tag/Sessions/operation/createSession)",
    "summary": "The excerpt provides a detailed example and explanation of the \"Create Session\" method, which is essential for utilizing Salable web components, aligning directly with the broader context of the documentation by clarifying the session creation process through code and required parameters.",
    "indexed_at": 1745322351.418318
  },
  "excerpt_id_ddaf4e6518a73006b4437f10458e27ba": {
    "doc_id": "doc_752be29e7240fddce8bf591a2ff02bb0",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\n# Get One Event\n\nReturns a single event\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst event = await salable.events.getOne('431b0c60-a145-4ae4-a7e6-391761b018ba');\n```\n\n## Parameters\n\n#### eventUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the event\n\n## Return Type\n\nFor more information about this request see our API documentation on [Event Object](https://docs.salable.app/api/v2#tag/Events/operation/getEventByUuid)",
    "summary": "The excerpt provides a specific code implementation for retrieving a single event using the Salable API, illustrating a practical application of the API documentation outlined in the broader context.",
    "indexed_at": 1745322351.419026
  },
  "excerpt_id_ee6311eda1a74d2cb86e7774e2dda643": {
    "doc_id": "doc_f1fd538097534c1f21aac12d07eca67e",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Get a subscription's seats\n\nGet the list of seats that are on the provided subscription. One common usage of\nthis data is to show your users the list of people on their team.\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nconst params = {\n  subscriptionUuid: 'your-subscription-uuid',\n  status: 'active', // this can be any valid subscription status\n};\n\nconst response = await fetch(\n  'https://api.salable.app/licenses?' + new URLSearchParams(params),\n  {\n    headers: {\n      version: '2',\n      'x-api-key': 'your-salable-api-key',\n    },\n  }\n);\n\nconst subscriptionSeats = await response.json();\n```\n\n</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XGET\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  'https://api.salable.app/licenses?subscriptionUuid=your-subscription-uuid&status=active'\n```\n\n</TabItem>\n</Tabs>\n\n### Get seat count\n\nObtain the aggregate count of seats, as well as the amount that are assigned or\nunassigned. This data can be used in many ways, one common usage is to show your\nusers how many of their remaining seats are available to be filled.\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\nconst licenseCount = await api.licenses.getCount('your-subscription-uuid');\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XGET\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  'https://api.salable.app/licenses/count?subscriptionUuid=:subscriptionUuid'\n```\n\n</TabItem>\n</Tabs>",
    "summary": "The excerpt provides code snippets for retrieving subscription seat information and counts using the Salable API, illustrating practical applications of the broader context of managing user access and team composition within the full document.",
    "indexed_at": 1745322351.49738
  },
  "excerpt_id_58ff1c48dee01d0183a336f780b53149": {
    "doc_id": "doc_7714fc1d93d70cbcc3bac317c0f64ef1",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 5\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Manage seats\n\nAdd or remove seats from free plans or paid subscriptions.\n\n## Add seats\n\nThe process to add seats varies depending on whether it is a paid subscription\nor a free plan.\n\n### Free plan\n\nAdding seats to a free plan is done by\n[creating ad hoc licenses](create-an-adhoc-license) associated with the plan.\n\n### Paid subscription\n\nAll seats created are unassigned by default. If you want to assign them, you\nwill need to [update the licenses](./update-a-license.mdx).\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\nconst salable = new Salable('your-salable-api-key', 'v2');\nawait salable.subscriptions.addSeats('your-subscription-uuid', {\n  increment: 2,\n});\n```\n\n</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XPOST\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  -d '{ \"increment\": 2 }'\n  'https://api.salable.app/subscriptions/your-subscription-uuid/seats'\n```\n\n</TabItem>\n</Tabs>\n\n## Remove seats\n\nThe process to remove seats varies depending on whether it is a paid\nsubscription or a free license.\n\n:::info\n\nOnly [unassigned seats](update-a-license) can be removed.\n\n:::\n\n### Free plan\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\nawait salable.licenses.cancelMany({uuids: ['a-license-uuid', 'a-license-uuid']});\n```\n\n</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XDELETE\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  'https://api.salable.app/licenses/your-license-uuid'\n```\n\n</TabItem>\n</Tabs>\n\n### Paid subscription\n\n:::danger\n\nDo not modify subscriptions directly through Stripe, always manage them through\nthe Salable API/SDKs to avoid issues.\n\n:::\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">",
    "summary": "The excerpt provides instructions for managing seat additions and removals in free and paid plans within the broader context of subscription management using the Salable API, emphasizing the need for different processes and caution in modifications.",
    "indexed_at": 1745322351.499116
  },
  "excerpt_id_de8626e7234f5a3c62010de5ee420028": {
    "doc_id": "doc_7714fc1d93d70cbcc3bac317c0f64ef1",
    "doc_order_index": 1,
    "excerpt": " Paid subscription\n\n:::danger\n\nDo not modify subscriptions directly through Stripe, always manage them through\nthe Salable API/SDKs to avoid issues.\n\n:::\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\nawait salable.subscriptions.removeSeats('your-subscription-uuid', {\n  decrement: 2,\n});\n```",
    "summary": "The excerpt emphasizes the importance of managing subscription modifications through the Salable API/SDKs rather than directly through Stripe, highlighting a critical operational guideline within the broader context of seat management for paid subscriptions.",
    "indexed_at": 1745322351.499187
  },
  "excerpt_id_86be8ab4ad6523d59b9e1eaa9093323f": {
    "doc_id": "doc_7714fc1d93d70cbcc3bac317c0f64ef1",
    "doc_order_index": 2,
    "excerpt": "`js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\nawait salable.subscriptions.removeSeats('your-subscription-uuid', {\n  decrement: 2,\n});\n```</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XPUT\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  -d '{ \"decrement\": 2 }'\n  'https://api.salable.app/subscriptions/:subscriptionUuid/seats'\n```\n\n</TabItem>\n</Tabs>\n\n:::caution\n\nEnsure that the number of seats being removed doesn't take the number of active\nseats below the minimum set on the plan.\n\n:::",
    "summary": "The excerpt provides code examples for removing seats from subscriptions using the Salable API, illustrating the specific processes detailed in the broader context of managing seats for both free and paid plans.",
    "indexed_at": 1745322351.4992561
  },
  "excerpt_id_e030f342082b40970042b8abc1e01c3a": {
    "doc_id": "doc_6f08bb84bba73537f8055e7850347437",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 6\n---\n\n# Get Licenses for a Purchaser\n\nReturns licenses for a purchaser on a product\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst licenses = await salable.licenses.getForPurchaser({purchaser: 'purchaser_1', productUuid: 'e7682a81-dd25-4e09-9f64-eebd00194b38', status: 'ACTIVE'});\n```\n\n## Parameters\n\n#### getForPurchaserOptions (_required_)\n\n_Type:_ `GetPurchasersLicensesOptions`\n\n| Option      | Type   | Description                                | Required |\n| ----------- | ------ | ------------------------------------------ | -------- |\n| purchaser   | string | The purchaser of the licenses to fetch for | \u2705        |\n| productUuid | string | The UUID of the product                    | \u2705        |\n| status      | string | Filter by license status                   | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [License Object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseByUuid)",
    "summary": "The excerpt provides a specific code implementation for retrieving licenses for a purchaser, which exemplifies the broader context of the full document that outlines the API's functionality for managing and accessing product licenses.",
    "indexed_at": 1745322353.4968529
  },
  "excerpt_id_c937ac8df4a7f1b8d0b0e89836ddef97": {
    "doc_id": "doc_8edac995d48edc051c39d413c706e9b6",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Get All Licenses\n\nReturns a list of all the licenses created by your Salable organization\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst licenses = await salable.licenses.getAll();\n```\n\n## Parameters\n\n#### options\n\n_Type:_ `GetLicenseOptions`\n\n| Option           | Type   | Description                                                 | Required |\n| ---------------- |--------| ----------------------------------------------------------- | -------- |\n| status           | string | The status of the created license, e.g. \"ACTIVE\" \"TRIALING\" | \u274c        |\n| cursor           | string | Cursor value, used for pagination                           | \u274c        |\n| take             | number | The amount of licenses to fetch                             | \u274c        |\n| subscriptionUuid | string | The UUID of the subscription to filter by                   | \u274c        |\n| granteeId        | string | The grantee ID to filter by                                 | \u274c        |\n| planUuid         | string | The UUID of the plan to filter by                           | \u274c        |\n| productUuid      | string | The UUID of the product to filter by                        | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [License Object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseByUuid)",
    "summary": "The excerpt outlines the functionality for retrieving a list of licenses created by a Salable organization, which directly aligns with the broader context of the full document that details the Salable API's licensing management capabilities.",
    "indexed_at": 1745322353.5748632
  },
  "excerpt_id_2cd46a574579b7b43c3f957d890e1c25": {
    "doc_id": "doc_7e8cb51b658116c82fb03f36d94a398a",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Create Many Licenses\n\nThis method creates many ad hoc licenses\n\n## Code Sample\n\n### Create Many\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst license = await salable.licenses.createMany([\n  {\n    planUuid: 'fabdea7e-2a9a-4ed8-b3f6-20c029dcbacc',\n    member: 'orgId_1234',\n    granteeId: 'userId_1',\n    status: 'ACTIVE',\n    endTime: '2025-07-06T12:00:00.000Z',\n  },\n  {\n    planUuid: '2e2170a9-3750-4176-aaf3-ff1ef12e8f66',\n    member: 'orgId_1234',\n    granteeId: 'userId_2',\n    status: 'ACTIVE',\n    endTime: '2025-07-06T12:00:00.000Z',\n  }\n]);\n```\n\n## Parameters\n\n#### createManyAdHocLicenseParams (_required_)\n\n_Type:_ `CreateAdhocLicenseInput[]`\n\n| Option    | Type   | Description                                                                                                           | Required |\n| --------- | ------ | --------------------------------------------------------------------------------------------------------------------- | -------- |\n| planUuid  | string | The UUID of the plan associated with the license. The planUuid can be found on the Plan view in the Salable dashboard | \u2705        |\n| member    | string | The ID of the member who will manage the license.                                                                     | \u2705        |\n| granteeId | string | The grantee ID for the license.                                                                                       | \u274c        |\n| status    | string | The status of the created license, e.g. \"ACTIVE\" \"TRIALING\"                                                           | \u274c        |\n| endTime   | string | Provide a custom end time for the license; this will override the plan's default interval.                            | \u274c        |\n\n## Return Type",
    "summary": "The excerpt provides a detailed code example and parameters for the \"Create Many Licenses\" method, aligning with the broader context of the full document, which focuses on implementing and managing ad hoc licenses using the Salable API.",
    "indexed_at": 1745322353.599318
  },
  "excerpt_id_157af2fc7f3224cea8bd3bb2e3388abb": {
    "doc_id": "doc_7e8cb51b658116c82fb03f36d94a398a",
    "doc_order_index": 1,
    "excerpt": "                  | \u274c        |\n| endTime   | string | Provide a custom end time for the license; this will override the plan's default interval.                            | \u274c        |\n\n## Return TypeFor more information about this request see our API documentation on [License Object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseByUuid)",
    "summary": "The excerpt highlights the details of a specific parameter related to customizing the license end time, which is crucial for understanding the flexibility and control provided within the broader context of creating ad hoc licenses using the Salable API.",
    "indexed_at": 1745322353.599394
  },
  "excerpt_id_32de37d1a80dc9e7d7d4e084f7d62db2": {
    "doc_id": "doc_41402fd6b6e76598e31385761e49c87f",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 9\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Cancel a subscription\n\nYou can cancel a subscription with its associated `subscriptionUuid`.\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n:::info\n\nThe second argument to `subscriptions.cancel` represents when you want the\nsubscription to cancel.\n\n| When  | Description                                                |\n| ----- | ---------------------------------------------------------- |\n| `now` | Immediately cancels the Subscription                       |\n| `end` | Cancels the Subscription at the end of it's billing period |\n\n:::\n\n```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\nawait salable.subscriptions.cancel('your-subscription-uuid', { when: 'end' });\n```\n\n</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n:::info\n\nThe `when` query parameter represents when you want the subscription to cancel.\n\n| When  | Description                                                |\n| ----- | ---------------------------------------------------------- |\n| `now` | Immediately cancels the Subscription                       |\n| `end` | Cancels the Subscription at the end of it's billing period |\n\n:::\n\n```bash\ncurl\n  -XPUT\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  'https://api.salable.app/subscriptions/{subscriptionUuid}/cancel?when=end'\n```\n\n</TabItem>\n</Tabs>",
    "summary": "The excerpt provides specific implementation examples for canceling a subscription, highlighting options for immediate or end-of-billing-period cancellations, which aligns with the broader context of managing subscriptions effectively within the full document.",
    "indexed_at": 1745322355.600526
  },
  "excerpt_id_e7978adbb3dfe9da1d3d59b8ccdb7ae2": {
    "doc_id": "doc_9cd4fd0dfc714a166767f817cdc381da",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 7\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Upgrade/downgrade subscription\n\n### Change the plan\n\nUseful if you need to update the plan your user is on. For example, if they have\nupgraded or downgraded you would want to update the subscription to reflect\nthis.\n\n:::info\n\nIf the new plan has a higher minimum seat number than the number of active seats\non the current subscription, new seats are created when the subscription moves\nto the new plan. For example, if a subscription with ten active seats moves to a\nnew plan with a minimum seat number of fifteen, five new seats are created.\n\n:::\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\nconst changeSubscriptionPlan = await salable.subscriptions.changePlan(\n  'your-subscription-uuid',\n  {\n    planUuid: 'your-new-plan-uuid',\n    proration: 'create_prorations', // optional. see table below for more options\n  }\n);\n```\n\n| Value             | Description                                                                                            |\n| ----------------- | ------------------------------------------------------------------------------------------------------ |\n| create_prorations | Keeps the subscription's billing cycle start/end date and refunds for unused time on the previous plan |\n| always_invoice    | Changes the billing cycle start date to the current date and immediately invoices                      |\n| none              | Disables proration behaviour                                                                           |\n\n</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XPUT\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  -d '{ \"planUuid\": \"the-new-plan-uuid\" }'\n  'https://api.salable.app/subscriptions/{subscriptionUuid}/change-plan'\n```\n\n</TabItem>\n</Tabs>\n\n### Example scenarios",
    "summary": "The excerpt provides detailed instructions on updating subscription plans, illustrating both the code implementation for changing plans and example scenarios for upgrading or downgrading, thus fitting into the broader context of providing clear guidance for managing user subscriptions within the full-document.",
    "indexed_at": 1745322355.648073
  },
  "excerpt_id_a873e2cace623f12f690b112f35aa4f7": {
    "doc_id": "doc_9cd4fd0dfc714a166767f817cdc381da",
    "doc_order_index": 1,
    "excerpt": "r-salable-api-key'\n  -H 'version: v2'\n  -d '{ \"planUuid\": \"the-new-plan-uuid\" }'\n  'https://api.salable.app/subscriptions/{subscriptionUuid}/change-plan'\n```\n\n</TabItem>\n</Tabs>\n\n### Example scenariosAn example scenario for upgrading a grantee's subscription could be as follows:\n\n:::note Upgrade Example\n\nA customer has an annual subscription that began on March 4th and costs $180 per\nyear. On September 15th, they decide to upgrade their subscription to a more\nexpensive plan, which costs $240 per year. Their subscription is prorated as\nfollows:\n\n- Seven months (March 4th - October 3rd) on $180 plan: $15 \\* 7 = $105.\n- Five months (October 4th - March 3rd) on $240 plan: $20 \\* 5 = $100.\n- Total cost for annual subscription: $105 + $100 = $205.\n- The extra cost is the total cost minus the payment already made: $205 - $180 =\n  $25.\n- The customer is charged $25 to upgrade to the new plan for the remainder of\n  their subscription. This payment is taken at the start of their next billing\n  period, which is March 4th.\n\n:::\n\nAn example scenario for the downgrading of a grantee's subscription could look\nlike:\n\n:::note Downgrade Example\n\nA customer has an annual subscription that began on March 4th and costs $240 per\nyear. On September 15th, they decide to downgrade their subscription to a less\nexpensive plan that costs $180 per year. Their subscription is prorated as\nfollows:\n\n- Seven months (March 4th - October 3rd) on $240 plan: $20 \\* 7 = $140.\n- Five months (October 4th - March 3rd) on $180 plan: $15 \\* 5 = $75.\n- Total cost for annual subscription: $140 + $75 = $215.\n- Amount paid on March 4th minus the prorated total cost for the year: $240 -\n  $215 = $25.\n- The customer is refunded $25 to downgrade to the new plan for the remainder of\n  their subscription. This refund is processed at the start of their next\n  billing period, which is March 4th.\n\n:::",
    "summary": "The excerpt provides practical examples of subscription upgrades and downgrades that illustrate the prorated billing process described earlier in the document, demonstrating how to adjust subscription costs based on the timing and changes made to the user's plan.",
    "indexed_at": 1745322355.648242
  },
  "excerpt_id_5ebe47a66fffe70faec5fc051e3e9666": {
    "doc_id": "doc_ae8231d5a44525bdd19d6569eac65320",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 8\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Managing payment methods\n\n### Get subscriptions current payment method\n\nReturns details about the payment method associated with the specified\n`subscriptionUuid`\n\n:::info\n\nThis is a good way to get the last four digits of the user's card!\n\n:::\n\n<Tabs>\n\n<TabItem value=\"javascript-node\" label=\"Javascript/Node.js\">\n\n```js\nconst response = await fetch(\n  'https://api.salable.app/subscriptions/your-subscription-uuid/payment-method',\n  {\n    headers: {\n      version: '2',\n      'x-api-key': 'your-salable-api-key',\n    },\n  }\n);\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XGET\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  'https://api.salable.app/subscriptions/your-subscription-uuid/payment-method'\n```\n\n</TabItem>\n</Tabs>\n\n### Get an \"update payment method\" link\n\n<Tabs>\n<TabItem value=\"javascript-node\" label=\"JavaScript/Node.js\">\n\n```js\nconst response = await fetch(\n  'https://api.salable.app/subscriptions/your-subscription-uuid/updatepaymentlink',\n  {\n    headers: {\n      version: '2',\n      'x-api-key': 'your-salable-api-key',\n    },\n  }\n);\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XGET\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  'https://api.salable.app/subscriptions/your-subscription-uuid/updatepaymentlink'\n```\n\n</TabItem>\n</Tabs>",
    "summary": "The excerpt provides specific methods for managing payment options in a subscription context, illustrating practical implementation through code examples that align with the broader documentation on subscription management features.",
    "indexed_at": 1745322355.6899269
  },
  "excerpt_id_74b2b33402d8e1fd884f911b29d71f78": {
    "doc_id": "doc_ab08095062daff00524cc4bbe408d878",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# Get One License\n\nReturns a single license\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst license = await salable.licenses.getOne('dba43177-43a7-4639-9dba-7b0ff9fcee0a', { expand: 'plan' });\n```\n\n## Parameters\n\n#### licenseUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the license\n\n---\n\n#### options\n\n_Type:_ `{ expand: string[] }`\n\n| Option | Type     | Description                                                    | Required |\n| ------ | -------- | -------------------------------------------------------------- | -------- |\n| expand | string[] | Specify which properties to expand. e.g. `{ expand: ['plan' }` | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [License Object](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicenseByUuid)",
    "summary": "The excerpt provides a specific code implementation for retrieving a single license using the Salable API, which serves as a practical example supporting the broader context of the full document's focus on API usage and license management.",
    "indexed_at": 1745322355.695767
  },
  "excerpt_id_b48f747b61cda7dfebb331b0fdd6525d": {
    "doc_id": "doc_c7a0de2d14585f499e46ac96c973cac3",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 5\n---\n\n# Get Licenses Count\n\nThis method returns aggregate count number of Licenses.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst licenseCount = await salable.licenses.getCount({subscriptionUuid: '9eeabc1b-cffd-488c-b242-e1fc80c5fc0c', status: 'ACTIVE'});\n```\n\n## Parameters\n\n#### options\n\n_Type:_ `GetLicenseCountOptions`\n\n| Option           | Type   | Description              | Required |\n| ---------------- | ------ | ------------------------ | -------- |\n| subscriptionUuid | string | Filter by subscription   | \u274c        |\n| status           | string | Filter by license status | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [License count](https://docs.salable.app/api/v2#tag/Licenses/operation/getLicensesCount)",
    "summary": "The excerpt outlines the implementation details for the \"Get Licenses Count\" method, which is integral to the broader context of the full document as it provides developers with a practical guide for accessing license data through the Salable API.",
    "indexed_at": 1745322355.740526
  },
  "excerpt_id_af600649bc560ccce1729a149fdba460": {
    "doc_id": "doc_25e911e37dc6b1054596a1d77befdc65",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# Get Capabilities\n\nReturns a list of all the Capabilities associated with a Plan\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst plan = await salable.plans.getCapabilities('2141fada-4b65-477d-b369-afb24dea94e6');\n```\n\n## Parameters\n\n##### planUuid (_required_)\n\n_Type:_ `string`\n\nThe `uuid` of the Plan to return the Features from\n\n## Return Type\n\nFor more information about this request see our API documentation on [Plan Capability Object](https://docs.salable.app/api/v2#tag/Plans/operation/getPlanCapabilities)",
    "summary": "The excerpt provides a specific code implementation for retrieving capabilities associated with a plan, aligning with the broader document's focus on utilizing the Salable API to manage and interact with plans and their features.",
    "indexed_at": 1745322355.742126
  },
  "excerpt_id_7f87ff0498aeb70ea7aca8cc2f973a9d": {
    "doc_id": "doc_15cb42c894d711897c8e483fbd29120e",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 5\n---\n\n# Get Currencies\n\nReturns a list of all the Currencies associated with a Plan\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst plan = await salable.plans.getCurrencies('8494c276-ad2d-4341-bba0-f0fd416b7cec');\n```\n\n## Parameters\n\n##### planUuid (_required_)\n\n_Type:_ `string`\n\nThe `uuid` of the Plan to return the Currencies from\n\n## Return Type\n\nFor more information about this request see our API documentation on [Plan Currency Object](https://docs.salable.app/api/v2#tag/Plans/operation/getPlanCurrencies)",
    "summary": "The excerpt provides a detailed overview of fetching currency information associated with a specific plan using the Salable API, aligning with the broader document's goal of guiding users on accessing and utilizing various API functionalities.",
    "indexed_at": 1745322355.7886012
  },
  "excerpt_id_d979fc2428d484e09ae3b62b942d5968": {
    "doc_id": "doc_ff96e0d01c4085b39b6f74dd74143955",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 13\n---\n\n# Update Subscription\n\nUpdate properties on a subscription.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nawait salable.subscriptions.update('17830730-3214-4dda-8306-9bb8ae0e3a11', { owner: 'orgId_2' });\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Subscription\n\n#### Options (_required_)\n\n_Type:_ `UpdateSubscriptionInput`\n\n| Option    | Type   | Description                                     | Required |\n|-----------|--------|-------------------------------------------------|----------|\n| owner     | string | The ID of the entity that owns the subscription | \u274c        |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription update](https://docs.salable.app/api/v2#tag/Subscriptions/operation/updateSubscriptionByUuid)",
    "summary": "The excerpt provides a code sample and detailed explanations for updating a subscription, illustrating a practical application of the API outlined in the full document and emphasizing the functionality available for managing subscription properties within the broader API framework.",
    "indexed_at": 1745322358.991712
  },
  "excerpt_id_ec1e24d6abf45f4ac8ce371644a1ab4a": {
    "doc_id": "doc_45f938ed4ba2811ca0cc72d19fa3dba8",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Change a Subscription's Plan\n\nMove a Subscription to a new Plan. Proration behaviour can optionally be set.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst changeSubscriptionPlan = await salable.subscriptions.changePlan('e9e8c539-f2ef-451d-a072-bde07d066a03', {\n  planUuid: 'ce361df2-4555-4259-9349-84e046225d3d',\n});\n```\n\n## Parameters\n\n##### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Subscription that is being moved\n\n##### options (_required_)\n\n_Type:_ `SubscriptionsChangePlanOptions`\n\n| Option    | Type   | Description                                                                                                                                                                                                        | Required |\n| --------- | ------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |\n| planUuid  | string | The status of the subscription, e.g. \"ACTIVE\" \"CANCELED\"                                                                                                                                                           | \u2705       |\n| proration | string | `create_prorations`: Will cause proration invoice items to be created when applicable (default). `none`: Disable creating prorations in this request. `always_invoice`: Always invoice immediately for prorations. | \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/changeSubscriptionsPlan)",
    "summary": "The excerpt details the process for changing a subscription plan using the Salable API, which integrates with the broader documentation by providing practical code examples and parameter specifications essential for developers managing subscription services.",
    "indexed_at": 1745322359.0438771
  },
  "excerpt_id_9b3d27c8b2f0c8051e5675083946c3bb": {
    "doc_id": "doc_cea5d134444fa99c3a12079cb320f62e",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\n# Add Salable Payments\n\nAdding payment integration to Salable is simple. You just need to follow these\ninstructions and provide your business details when requested.\n\n:::tip\n\nYou can exit the onboarding flow at any time and return later by selecting\n\"Complete Onboarding\" from the Salable dashboard.\n\n:::\n\n1. Select the **Settings** from the left-hand navigation menu.\n2. Select the **Payment Integrations** tab from the settings dropdown.\n3. On the **Payment Integrations** page, select the **Add Payment Integration** button on the top right of the page.\n4. Select _Salable_ from the **Payment Providers** dropdown.\n5. Provide an **Account Name**. You should choose a name that helps you identify\n   this Salable Payment account within your Salable dashboard.\n6. Select **Add Payment Integration**.\n7. You will be redirected to complete the account setup on the Stripe onboarding.\n\n:::info\n\nThe payment integration is now fully configured and can be added to products\nwithin Salable.\n\n:::",
    "summary": "The excerpt provides a step-by-step guide on integrating payment options into the Salable platform, highlighting its straightforward nature within the broader context of enhancing user experience and product functionality in the full document.",
    "indexed_at": 1745322359.0917828
  },
  "excerpt_id_03a1e0b7542d58580d2e6e791794e576": {
    "doc_id": "doc_74e924f1dbaa5ee30ffb111c9136bf2f",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\ndescription: How to create a product using test mode.\n---\n\n# Using Test Mode\n\nAll of Salable's functionality is also offered within Test Mode. You can create\na product along with its capabilities, features, plans, and pricing tables. You\ncan create licenses and payment integrations. You can create webhooks and API\nkeys. This full functionality allows you to rest assured that the behavior you\nsee in Test Mode is replicated in your production environment.\n\n## Enable/Disable Test Mode\n\nYou can switch between Test Mode and Live Mode by clicking the toggle in the\nbottom left-hand menu.\n\nYou can tell if you are in test Mode as the Test Mode toggle is orange, and there\nis a TEST MODE indicator at the bottom of the page.\n\nYou can move back to Live Mode by clicking the toggle again to turn off Test\nMode.\n\n## Using Salable in Test Mode\n\nAs we've said, you can do everything in Test Mode that you can do in Live Mode.\nThe functionality is exactly the same. Simply follow the instructions provided\nin the topics in the left-hand menu just as you would if you were performing an\naction in Live Mode.\n\n## Copy a Test Mode product to Live Mode\n\nOnce you've completed your tests and you're satisfied that a product is ready to\nmove from Test Mode to Live Mode, all you have to do is go to the Products page\nand click on the menu icon for the product you want to move to Live Mode and\nthen select **Copy to live mode** from the menu displayed.\n\n:::note\n\nYou must have at least one payment integration configured in Live Mode when you\nmove a product to Live Mode. If you don't have a payment integration configured,\nSalable\n**[prompts you to create one](https://docs.salable.app/docs/category/payment-integration)**\nbefore it allows you to move a product to Live Mode.\n\nIf you have more than one payment integration configured, you'll be asked to\nselect which payment integration you want to use for the product.\n\n:::",
    "summary": "The excerpt details the functionality and seamless transition between Test Mode and Live Mode in Salable, illustrating how users can create and test products without risk before launching them in their production environment.",
    "indexed_at": 1745322359.2060559
  },
  "excerpt_id_87a28c46e9f8d42201e4cbdc6fde2ecd": {
    "doc_id": "doc_cc829c561d113608e5675db7797bb537",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 3\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# License check\n\nCheck whether a grantee is licensed to perform actions in your system.\n\nFeatures, capabilities, and plans that belong to your user are checkable.\n\n:::info Salable API V2 update\n\nThe `publicHash` and `capsHashed` properties have been removed and the `capabilities` and `capabilitiesEndDates` properties have been consolidated into a single `capabilities` property.\nThe `capabilities` contains an array of objects containing the name and expiration date of each capability / feature / plan \n\n:::\n\n<Tabs>\n<TabItem value=\"@salable/js\" label=\"@salable/js\">\n\n```js\nimport { getGrantee } from '@salable/js';\n\nconst { hasCapability } = await getGrantee({\n  apiKey: 'your-salable-api-key',\n  productUuid: 'your-products-uuid',\n  granteeId: 'your-grantees-id',\n});\n\n// Check for a capability\nconst isUserLicensedToPerformAction = hasCapability('acme-inc-whitelabelling');\n// or a feature\nconst isUserLicensedToPerformAction = hasCapability('csv-export');\n// or a plan\nconst isUserLicensedToPerformAction = hasCapability('pro');\n```\n\n</TabItem>\n\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\n\nconst { capabilities } = await salable.licenses.check({\n  productUuid: 'your-product-uuid',\n  granteeIds: ['your-grantees-id'],\n  grace: 3 // Optional: number of days grace period.\n});\nconst isUserLicensedToPerformAction = capabilities.includes((c) => {c.capability === 'your-capability-name'});\n```\n\n</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XGET\n  -H 'x-api-key: YOUR_SALABLE_API_KEY'\n  -H 'version: v2'\n  'https://api.salable.app/licenses/check?productUuid=YOUR_PRODUCT_UUID&granteeIds=your-grantees-id&grace=3'\n```\n\n</TabItem>\n</Tabs>\n\n:::tip Grace Period",
    "summary": "The excerpt provides essential details on how to check user licensing permissions in the Salable API, aligning with the broader document's focus on licensing management and capability verification in the system.",
    "indexed_at": 1745322359.4425862
  },
  "excerpt_id_7afe2e3cf72d8910689510b5002270c3": {
    "doc_id": "doc_cc829c561d113608e5675db7797bb537",
    "doc_order_index": 1,
    "excerpt": "-key: YOUR_SALABLE_API_KEY'\n  -H 'version: v2'\n  'https://api.salable.app/licenses/check?productUuid=YOUR_PRODUCT_UUID&granteeIds=your-grantees-id&grace=3'\n```\n\n</TabItem>\n</Tabs>\n\n:::tip Grace PeriodIf the customer's payment fails, and you would like to give them a grace period\nto rectify this \u2014 you can use the optional `grace` parameter to extend the\nlicense capability check by a specified number of days.\n\nThis is not currently supported on `@salable/js`.\n\n:::\n\n### Verifying Signatures\n\nSignatures can be verified using the `signature` and `capabilities` from the license check and your organisations public key\n\n:::tip ECDSA Encryption and Signatures\n\nWe use **ECDSA cryptography** to generate signatures for license checks. Signatures are signed with a **private key** (which we keep **encrypted** on our end) and can be verified using your organisations **public key**\n\n:::\n\n> NOTE: You can request license-check signatures to be encoded in the P1363 encoding using the \"sigEncode=P1363\" query string in the request \n- The P1363 encoding allows for signature verification on web browsers\n\nSignature verification examples:\n\n<Tabs>\n<TabItem value=\"@salable/js\" label=\"@salable/js\">\n\n```js\n\nimport { verifyLicenseCheck } from '@salable/js';\n\nvar isValid = await verifyLicenseCheck({\n  publicKey: 'your_public_key',\n  signature: 'license_check_signature',\n  payload: 'license_check_payload'\n});\n\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"Javascript\">",
    "summary": "The excerpt elaborates on the process of verifying signatures for license checks by utilizing cryptographic methods, aligning with the broader context of ensuring user capabilities and license validity within the Salable API documentation.",
    "indexed_at": 1745322359.442671
  },
  "excerpt_id_532dad11736e05ba4a1c64103447a997": {
    "doc_id": "doc_cc829c561d113608e5675db7797bb537",
    "doc_order_index": 2,
    "excerpt": "lid = await verifyLicenseCheck({\n  publicKey: 'your_public_key',\n  signature: 'license_check_signature',\n  payload: 'license_check_payload'\n});\n\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"Javascript\">```js\n<script>\n\n  // Utility Functions\n  function importPublicKey(publicKeyPem) {\n    const pemContents = publicKeyPem.replace(/-{5}.*?-{5}|\\s/gm, '');\n\n    const binaryDerString = window.atob(pemContents);\n    const binaryDer = stringToArrayBuffer(binaryDerString);\n\n    return window.crypto.subtle.importKey(\n      \"spki\",\n      binaryDer,\n      {\n        name: \"ECDSA\",\n        namedCurve: \"P-256\",\n      },\n      true,\n      [\"verify\"],\n    );\n  }\n\nfunction stringToArrayBuffer(str) {\n  const buf = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction hexStringToUint8Array(hexString: string) {\n  const result = new Uint8Array(hexString.length / 2);\n  for (let i = 0; i < hexString.length; i += 2) {\n    result[i / 2] = parseInt(hexString.substring(i, i + 2), 16);\n  }\n  return result;\n}\n\nasync function verifyLicenseCheck(yourPublicKey, signature, capabilities) {\n  const publicKey = await importPublicKey(yourPublicKey);\n  const rawSignature = hexStringToUint8Array(signature);\n\n  return await window.crypto.subtle.verify(\n    {\n      name: 'ECDSA',\n      hash: { name: 'SHA-256' }\n    },\n    publicKey,\n    rawSignature.buffer,\n    new TextEncoder().encode(capabilities)\n  );\n}\n\n</script>\n```",
    "summary": "The excerpt details the implementation of a function to verify license checks using ECDSA signatures, illustrating a specific application of the broader context of license management and capability validation within the full document.",
    "indexed_at": 1745322359.442722
  },
  "excerpt_id_c86ecb351ccf24d58f2c79a30fdee31d": {
    "doc_id": "doc_cc829c561d113608e5675db7797bb537",
    "doc_order_index": 3,
    "excerpt": " window.crypto.subtle.verify(\n    {\n      name: 'ECDSA',\n      hash: { name: 'SHA-256' }\n    },\n    publicKey,\n    rawSignature.buffer,\n    new TextEncoder().encode(capabilities)\n  );\n}\n\n</script>\n```</TabItem>\n</Tabs>",
    "summary": "The excerpt details the verification process of license checks using ECDSA cryptography, a crucial aspect of the broader document's focus on ensuring that grantees are properly licensed to access specific capabilities within a system.",
    "indexed_at": 1745322359.4427671
  },
  "excerpt_id_d9e1d76334e0264800ec30320373ba71": {
    "doc_id": "doc_b80a6a2fa30cb0553e474f948a5f2f86",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 1\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Taking payments\n\nCheckout links offer the quickest and simplest way to accept payments from your\nusers.\n\n<Tabs>\n<TabItem value=\"js\" label=\"JavaScript\">\n\n```js\nimport { getCheckoutLink } from '@salable/js'\n\nconst { checkoutUrl } = await getCheckoutLink({\n  apiKey: 'your-salable-api-key',\n  planUuid: 'your-salable-plans-uuid',\n  successUrl: 'https://your.app/payment-success'\n  cancelUrl: 'https://your.app/payment-cancelled',\n  granteeId: 'your-grantees-id',\n  member: 'your-purchasers-id',\n  // \ud83d\udc47 optional, the shortname of the currency to be used - defaults to\n  // product-wide default currency.\n  currency: 'EUR',\n  // \ud83d\udc47 optional, if you're using per-seat billing - this will be the number of\n  // seats purchased. Defaults to plans minimum seat count.\n  quantity: 10,\n})\n\n// Now you are free to present this `checkoutLink` to your user however you see\n// fit.\n```\n\n</TabItem>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\n// Don't forget to: npm install @salable/node-sdk\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\n\nconst { checkoutUrl } = await salable.plans.getCheckoutLink('your-plan-uuid', {\n  successUrl: 'https://example.com/success',\n  cancelUrl: 'https://your.app/cancel',\n  granteeId: 'your-grantees-id',\n  member: 'your-purchasers-id',\n  // \ud83d\udc47 optional, the shortname of the currency to be used - defaults to\n  // product-wide default currency.\n  currency: 'EUR',\n  // \ud83d\udc47 optional, if you're using per-seat billing - this will be the number of\n  // seats purchased. Defaults to plans minimum seat count.\n  quantity: 10,\n});\n```\n\n</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n:::info Optional parameters\n\n`currency` is the shortname of the currency you want to use at checkout, this\ndefaults to the currency set on the product.",
    "summary": "The excerpt details code snippets for creating checkout links in various programming environments, illustrating a practical application of the broader document's focus on efficiently implementing payment solutions through Salable's API.",
    "indexed_at": 1745322359.444569
  },
  "excerpt_id_a7f38285bcc08f3f1997ec2068c4c4ab": {
    "doc_id": "doc_b80a6a2fa30cb0553e474f948a5f2f86",
    "doc_order_index": 1,
    "excerpt": "</TabItem>\n\n<TabItem value=\"curl\" label=\"cURL\">\n\n:::info Optional parameters\n\n`currency` is the shortname of the currency you want to use at checkout, this\ndefaults to the currency set on the product.`quantity` is the number of seats you want to sell if you're using a per-seat\nbilling model, it will default to the minimum seat count set on the plan.\n\n:::\n\n```bash\ncurl\n  -XGET\n  -H 'x-api-key: YOUR_SALABLE_API_KEY'\n  -H 'version: v2'\n  'https://api.salable.app/plans/your-plan-uuid/checkoutLink?successUrl=https%3A%2F%2Fyour.app%2Fsuccess&cancelUrl=https%3A%2F%2Fyour.app%2Fcancel&granteeId=your-grantees-id&member=your-purchasers-id'\n```\n\n</TabItem>\n</Tabs>\n\n:::tip For per-seat plans\n\nOn successful payment, the first seat will be assigned to the `granteeId`\nprovided - the rest will be unassigned.\n\nTo assign the rest of the seats, you can\n[update the licenses.](./update-a-license.mdx)\n\n:::",
    "summary": "The excerpt provides detailed information on optional parameters for configuring checkout links in different programming contexts, illustrating how these options enhance user experience and flexibility within the broader context of accepting payments through the Salable API.",
    "indexed_at": 1745322359.4446669
  },
  "excerpt_id_ec8853c4684794f440831d669649c3b8": {
    "doc_id": "doc_e923120a623c69d44261bc208d618996",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Get Checkout Link\n\nReturns the checkout link for a plan. This endpoint will only work for paid Plans.\n\n## Code Sample\n\n#### Required parameters\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst checkoutLink = await salable.plans.getCheckoutLink('1de11022-ef14-4e22-94e6-c5b0652e497f', {\n  cancelUrl: 'https://example.com/cancel',\n  successUrl: 'https://example.com/success',\n  granteeId: 'userId-1',\n  member: 'orgId_1',\n});\n```\n\n#### Customer details\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}');\n\nconst checkoutLink = await salable.plans.getCheckoutLink('15914694-5ff1-40d7-8ccb-7acc00586508', {\n  cancelUrl: 'https://example.com/cancel',\n  successUrl: 'https://example.com/success',\n  granteeId: 'userId-1',\n  member: 'orgId_1',\n  customerEmail: 'person@company.com',\n});\n```\n\n## Parameters\n\n#### planUuid (_required_)\n\n_Type:_ `string`\n\nThe `uuid` of the Plan to get the checkout link from\n\n#### options (_required_)\n\n_Type:_ `GetPlanCheckoutOptions`\n\nQuery parameters to be passed in to the checkout config",
    "summary": "The excerpt details the process of obtaining a checkout link for a paid plan using the Salable API, illustrating specific parameters and their usage, which aligns with the broader context of the full document by providing a practical code sample and clarifying the functionality of the API endpoint.",
    "indexed_at": 1745322399.24114
  },
  "excerpt_id_c7ede61793c23fd3416361ade4773f19": {
    "doc_id": "doc_e923120a623c69d44261bc208d618996",
    "doc_order_index": 1,
    "excerpt": "required_)\n\n_Type:_ `string`\n\nThe `uuid` of the Plan to get the checkout link from\n\n#### options (_required_)\n\n_Type:_ `GetPlanCheckoutOptions`\n\nQuery parameters to be passed in to the checkout config| **Parameter** | **Type** | **Description**                                                                                                                                                                           | **Required** |\n|:--------------|:---------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------:|\n| successUrl    | string   | The URL to send users if they have successfully completed a purchase                                                                                                                      |      \u2705       |\n| cancelUrl     | string   | The URL to send users to if the transaction fails.\n\n|      \u2705       |\n| granteeId     | string   | Value to use as granteeId on Plan                                                                                                                                                         |      \u2705       |\n| member        | string   | The purchaser of the license                                                                                                                                                              |      \u2705       |\n| owner         | string   | The ID of the entity who will own the subscription.\n\nDefault is the value given to member.\n\n|      \u274c       |\n| promoCode     | string   | Enables the promo code field in Stripe checkout.\n\nCannot be used with promoCode.\n\n|      \u274c       |\n| currency      | string   | Shortname of the currency to be used in the checkout.\n\nThe currency must be added to the plan's product in Salable.\n\nIf not specified, it defaults to the currency selected on the product.\n\n|      \u274c       |\n| quantity      | string   | Only applicable for per seat plans.\n\nSet the amount of seats the customer pays for in the checkout.",
    "summary": "The excerpt outlines the required parameters and options necessary to generate a checkout link for a subscription plan, highlighting its role within the broader documentation on API functionality for managing plan purchases.",
    "indexed_at": 1745322399.2412548
  },
  "excerpt_id_b70787affc67ce541e7d959da486303e": {
    "doc_id": "doc_e923120a623c69d44261bc208d618996",
    "doc_order_index": 2,
    "excerpt": " it defaults to the currency selected on the product.\n\n|      \u274c       |\n| quantity      | string   | Only applicable for per seat plans.\n\nSet the amount of seats the customer pays for in the checkout.|      \u274c       |\n| customerEmail | string   | Pre fills email for checkout customer                                                                                                                                                     |      \u274c       |\n| automaticTax  | string   | Automatically calculate tax on checkout based on customers location and your Stripe settings.\n\n|      \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Plan checkout link](https://docs.salable.app/api/v2#tag/Plans/operation/getPlanCheckoutLink)",
    "summary": "The excerpt provides details about optional parameters in the API documentation for obtaining a checkout link, highlighting the features available to customize the checkout experience within the broader context of paid plans management.",
    "indexed_at": 1745322399.241311
  },
  "excerpt_id_310437ff88c214d922e257631db6a72d": {
    "doc_id": "doc_a6649837e310c283d6736f78b1115255",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 7\n---\n\n# Get a Subscription Update Payment Link\n\nReturns the update payment link for a specific subscription.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.getPortalLink('4264d425-697c-4b65-b189-0e747050bfff');\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the subscription\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Payment Link Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/getSubscriptionUpdatePaymentLink)",
    "summary": "The excerpt provides a specific code implementation for retrieving an update payment link for a subscription, illustrating the practical usage of the API discussed in the broader context of the full document.",
    "indexed_at": 1745322399.4770508
  },
  "excerpt_id_0605f5987dc662b127cbcde1ca896ece": {
    "doc_id": "doc_8ad50625b8645ff05b801039385642b7",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 4\n---\n\n# Get Subscription Invoices\n\nReturns a list of invoices for a subscription.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.getInvoices('5fa0fbfa-5fbf-4fee-b286-ed1cb25379f9');\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the subscription\n\n#### options\n\n_Type:_ `GetAllInvoicesOptions`\n\n| Option      | Type   | Description                                         | Required |\n|-------------|--------|-----------------------------------------------------| -------- |\n| cursor      | string | Cursor value, used for pagination                   | \u274c       |\n| take        | number | The amount of subscriptions to fetch. Default: `10` | \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Invoice Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/getSubscriptionInvoices)",
    "summary": "The excerpt provides a specific code example and details on fetching subscription invoices, exemplifying the practical implementation of the broader documentation on managing subscriptions within the Salable API.",
    "indexed_at": 1745322399.555292
  },
  "excerpt_id_75226dd1c0681dee658c82abefbedb30": {
    "doc_id": "doc_bf466e3c70dc263a59ee76b068a53c92",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 9\n---\n\n# Get Cancel Subscription Link\n\nReturns a link to cancel a specific subscription.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.getCancelSubscriptionLink('ecc6868e-3ba5-4f10-b955-5dd46beb9602');\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the subscription\n\n## Return Type\n\nFor more information about this request see our API documentation on [Cancel Subscription Link Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/getSubscriptionCancelLink)",
    "summary": "The excerpt provides a specific implementation example from the full document that details how to retrieve a cancellation link for a subscription using the Salable API, illustrating the practical application of the documented API functionality.",
    "indexed_at": 1745322399.687027
  },
  "excerpt_id_43aad08feabcefa292e03d2681262e0b": {
    "doc_id": "doc_f177a261a9f3621fbcd45c9236c17ff6",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 5\n---\n\n# Get Features for a product\n\nReturns a list of all the features associated with a product\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}');\n\nconst features = await salable.products.getFeatures('0d300ac7-0fc1-44de-8ee0-5089683b22c2');\n```\n\n## Parameters\n\n#### productUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the Product\n\n## Return Type\n\nFor more information about this request see our API documentation on [Product Feature Object](https://docs.salable.app/api/v2#tag/Products/operation/getProductFeatures)",
    "summary": "The excerpt provides a code sample and description for retrieving product features, which is a specific implementation detail that fits into the larger context of the document on using the Salable API for product management.",
    "indexed_at": 1745322401.714937
  },
  "excerpt_id_cb965cbdb5538866a79f985d89308954": {
    "doc_id": "doc_f16fada25d885ee09639700d7e626580",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Create an ad hoc license\n\nAd hoc licenses are used for free plans or if you want to grant a specific\ncustomer free access to a paid plan. In this case, you can create an ad hoc\nlicense to bypass payment/subscription.\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\nconst salable = new Salable('your-salable-api-key', 'v2');\n\nconst license = await salable.licenses.create([\n  {\n    planUuid: 'your-plan-uuid',\n    member: 'orgId_1234',\n    granteeId: 'userId-1',\n  },\n  {\n    planUuid: 'your-plan-uuid',\n    member: 'orgId_1234',\n    granteeId: 'userId-2',\n  },\n]);\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XPOST\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  -d '[{ \"planUuid\": \"a-plan-uuid\", \"granteeId\": \"a-user-id\", \"member\": \"a-user-id\" }, { \"planUuid\": \"a-plan-uuid\", \"granteeId\": \"a-user-id\", \"member: \"a-user-id\"}]'\n  'https://api.salable.app/licenses'\n\n```\n\n</TabItem>\n</Tabs>",
    "summary": "The excerpt provides code examples for creating ad hoc licenses using Node.js and cURL, directly illustrating the broader document's focus on facilitating license management for users needing to grant temporary or free access to paid plans.",
    "indexed_at": 1745322401.7928262
  },
  "excerpt_id_a019e4a9249294b3ee673d179bd32d72": {
    "doc_id": "doc_e616534ac77b2a2d7283bebecab4aef5",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 2\n---\n\n# Get One Subscription\n\nReturns the details of a single subscription.\n\n## Code Sample\n\n```typescript\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('{{API_KEY}}', 'v2');\n\nconst subscription = await salable.subscriptions.getOne('2694ae7b-8b0e-4954-b7eb-ceceb583a79b');\n```\n\n## Parameters\n\n#### subscriptionUuid (_required_)\n\n_Type:_ `string`\n\nThe UUID of the subscription to be returned\n\n---\n\n#### options\n\n_Type:_ `GetSubscriptionOptions`\n\n| Option | Type     | Description                                                      | Required |\n| ------ | -------- | ---------------------------------------------------------------- | -------- |\n| expand | string[] | Specify which properties to expand. e.g. `{ expand: 'product' }` | \u274c       |\n\n## Return Type\n\nFor more information about this request see our API documentation on [Subscription Object](https://docs.salable.app/api/v2#tag/Subscriptions/operation/getSubscriptionByUuid)",
    "summary": "The excerpt provides a code sample and detailed explanation of the \"Get One Subscription\" API call, which forms part of the broader documentation aimed at helping developers interact with subscription data using the Salable SDK.",
    "indexed_at": 1745322401.838948
  },
  "excerpt_id_f45958815097879415986e68ae21cbba": {
    "doc_id": "doc_85e5b01a5a4eea3840999f77d349fc27",
    "doc_order_index": 0,
    "excerpt": "---\nsidebar_position: 10\n---\n\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n# Cancel a license\n\nLicenses can be cancelled with their UUIDs.\n\n<Tabs>\n<TabItem value=\"node\" label=\"Node.js\">\n\n```js\nimport { Salable } from '@salable/node-sdk';\n\nconst salable = new Salable('your-salable-api-key', 'v2');\n\n// cancel a single license\nawait salable.licenses.cancel('your-license-uuid');\n\n// cancel many licenses at once\nawait salable.licenses.cancelMany({uuids: [\n  'your-license-uuid-1',\n  'your-license-uuid-2',\n]});\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"cURL\">\n\n```bash\ncurl\n  -XPOST\n  -H 'x-api-key: your-salable-api-key'\n  -H 'version: v2'\n  -d '{ \"uuids\": [\"your-license-uuid-1\", \"your-license-uuid-2\"] }'\n  'https://api.salable.app/licenses/cancel'\n```\n\n</TabItem>\n</Tabs>",
    "summary": "The excerpt provides code examples for canceling licenses via API, which illustrates the practical implementation of the broader topic of license management discussed in the full document.",
    "indexed_at": 1745322401.978276
  },
  "excerpt_id_1447c9ad088ee587d295240cee723646": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 0,
    "excerpt": "openapi: 3.0.0\ninfo:\n  title: Salable API\n  version: v2\n  description: |\n    # Salable API\n    \n    Salable is a comprehensive solution tailored for SaaS businesses, streamlining the design and management of pricing models, subscriptions, and licensing.\n    \n    This documentation is designed to guide you through integrating with Salable's features via our REST API.\n\n    ## HTTP Endpoints\n    \n     - Use HTTP endpoints to access different features.\n     - Send requests using JSON and receive JSON responses.\n    \n    ## Authentication\n\n    Secure your requests by sending your api key on the `x-api-key` request header for authentication. Or, if the endpoint supports it, a session token with the correct scope sent on the `Authorization` request header.\n    \n    The API Key can be created in the Salable dashboard. Select only the scopes you need will to access. If you're using this in combination with our SDKs be sure to only select read only scopes.\n\n    > NOTE: If you'd like to use test mode via the API, make sure to use an API key generated in test mode (prefixed with `test_`).\n\n    ## Quick Start\n    \n    To get up and running, you need to work through the following steps.\n    \n    - Set up a Salable Account and Organization\n    - Connect Stripe to Salable (You can skip this for a free product)\n    - Build your products and plans\n    - Generate your API key\n    - Make your first API call with the request header \"version\" set to \"v2\" \n    \n    ## HTTP Status Codes\n\n    We use standard HTTP status codes for both success and failure responses.",
    "summary": "The excerpt provides an overview of the Salable API's functionality, specifically highlighting its integration for managing pricing models, subscriptions, and licensing, thus setting a foundational context for understanding the detailed API operations and endpoints described in the broader documentation.",
    "indexed_at": 1745322772.659034
  },
  "excerpt_id_7f5459c7889a5aa990fe3da8c8f562de": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 1,
    "excerpt": " your API key\n    - Make your first API call with the request header \"version\" set to \"v2\" \n    \n    ## HTTP Status Codes\n\n    We use standard HTTP status codes for both success and failure responses.| HTTP Code | What it means                                                                                                                                           |\n    | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | 200       | The request was successful and the action has been completed.                                                                                           |\n    | 201       | This will be sent for the successful completion of POST requests and indicates that the new item was created, eg. a new license.                        |\n    | 204       | The request was successful, no content to returned.                                                                                                     |\n    | 206       | The request was partially successful.                                                                                                                   |\n    | 400       | There was a request validation error and the request couldn't be completed.                                                                             |\n    | 401       | There was an authentication problem. If you get this error you should make sure your API key is included in the `x-api-key` header. Or, your session token is valid for the endpoint being requested and it has not expired.                     |\n    | 403       | There was an authorisation issue. If you get this error you should check your API key has the correct scopes and that you're in the right organisation  |\n    | 404       | The request couldn't be completed as the requested resource(s) doesn't exist.                                                                           |\n    | 500       | A problem on our side. If you experience one of these errors, reach out to us and we will help.                                                         |",
    "summary": "The excerpt outlines key elements of the Salable API's authentication and error handling mechanisms, which are crucial for users to successfully integrate and interact with the API, aligning with the broader documentation's goal of facilitating effective API usage for managing subscriptions and licenses.",
    "indexed_at": 1745322772.6617851
  },
  "excerpt_id_dc525bd2329c111af82010ba09911981": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 2,
    "excerpt": "                           |\n    | 500       | A problem on our side. If you experience one of these errors, reach out to us and we will help.                                                         |servers:\n  - url: https://api.salable.app\n\ncomponents:\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      name: x-api-key\n      in: header\n    sessionToken:\n      type: sessionToken\n      name: Authorization\n      in: header\n\n  parameters:\n    VersionHeader:\n      in: header\n      name: version\n      required: true\n      description: The version of the api.\n      schema:\n        type: string\n        enum:\n          - v2\n\n    UniqueKey:\n      in: header\n      name: unique-key\n      required: true\n      description: A unique key for idempotent requests\n      schema:\n        type: string\n\n    ProductUuidPathParam:\n      in: path\n      name: productUuid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the product.\n\n    ProductUuidQueryParam:\n      in: query\n      name: productUuid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the product.\n\n    PlanUuidPathParam:\n      in: path\n      name: planUuid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the plan.\n\n    EventUuidPathParam:\n      in: path\n      name: eventUuid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the event.\n\n    SubscriptionUuidPathParam:\n      in: path\n      name: subscriptionUuid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the subscription.\n\n    SubscriptionUuidQueryParam:\n      in: query\n      name: subscriptionUuid\n      schema:\n        type: string\n      description: The unique identifier for the subscription.\n\n    LicenseUuidPathParam:\n      in: path\n      name: licenseUuid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the license.",
    "summary": "The excerpt outlines API error handling for HTTP 500 responses, indicating server-side issues that may require user assistance, and is part of a broader documentation that details the integration and operational parameters of the Salable API for managing pricing, subscriptions, and licenses.",
    "indexed_at": 1745322772.661848
  },
  "excerpt_id_26ee33b64d7eaeb6b7e74cb1eeaacc3b": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 3,
    "excerpt": "or the subscription.\n\n    LicenseUuidPathParam:\n      in: path\n      name: licenseUuid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the license.PricingTableUuidPathParam:\n      in: path\n      name: pricingTableUuid\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the pricingTable.\n\n    PurchaserQueryParam:\n      in: query\n      name: purchaser\n      required: true\n      description: An identifier for the owner of the license.\n      schema:\n        type: string\n\n    LicenseStatusQueryParam:\n      name: status\n      in: query\n      description: The status of the licenses.\n      required: false\n      schema:\n        type: string\n        enum:\n          - active\n          - canceled\n          - evaluation\n          - scheduled\n          - trialing\n          - inactive\n\n    SubscriptionStatusQueryParam:\n      name: status\n      in: query\n      description: The status of the subscription.\n      required: false\n      schema:\n        type: string\n        enum:\n          - active\n          - canceled\n          - paused\n          - trialing\n          - deleted\n          - past_due\n          - incomplete\n\n    SubscriptionEmailQueryParam:\n      name: email\n      in: query\n      description: The email of who purchased the subscription.\n      required: false\n      schema:\n        type: string\n\n    UsageStatusQueryParam:\n      in: query\n      name: status\n      required: false\n      description: Filter by the status of the license\n      schema:\n        type: string\n\n    UsageTypeQueryParam:\n      in: query\n      name: type\n      required: false\n      description: Filter by the type of usage record\n      schema:\n        type: string\n\n    UsagePlanUuidQueryParam:\n      in: query\n      name: planUuid\n      required: false\n      description: The uuid of the plan the license belongs to.\n      schema:\n        type: string\n\n    UsageSubscriptionUuidQueryParam:\n      in: query\n      name: subscriptionUuid\n      required: false\n      schema:\n        type: string\n        format: uuid\n      description: Filters usage records by their license's subscription.",
    "summary": "The excerpt provides details about how to specify parameters related to licenses and subscriptions in API calls, which is essential for users to effectively manage their subscription and license data within the broader context of the Salable API documentation, enabling streamlined integration and usage of these services.",
    "indexed_at": 1745322772.661897
  },
  "excerpt_id_aeed752a0854093562fcab1a2782b1b3": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 4,
    "excerpt": "am:\n      in: query\n      name: subscriptionUuid\n      required: false\n      schema:\n        type: string\n        format: uuid\n      description: Filters usage records by their license's subscription.UsageSortQueryParam:\n      in: query\n      name: sort\n      required: false\n      schema:\n        type: string\n        default: asc\n        enum:\n          - asc\n          - desc\n      description: Sorts usage records by createdAt field.\n\n    UsagePlanUuidRequiredQueryParam:\n      in: query\n      name: planUuid\n      required: true\n      description: The uuid of the plan the license belongs to.\n      schema:\n        type: string\n\n    UsageGranteeIdRequiredQueryParam:\n      in: query\n      name: granteeId\n      required: true\n      description: The granteeId of the license belongs.\n      schema:\n        type: string\n\n    CursorQueryParam:\n      name: cursor\n      in: query\n      description: A unique identifier for the last item of one page to get the next page. This will be either the `first` or `last` property from the previous response. No cursor is required on the first request.\n      required: false\n      schema:\n        type: string\n\n    CursorTakeQueryParam:\n      name: take\n      in: query\n      description: The number of records to take before or after cursor. A positive or negative in the range of -100 to 100. Use a number below 0 to take the previous records before the cursor.\n      required: false\n      schema:\n        type: string\n        default: \"20\"\n\n    GraceQueryParam:\n      name: grace\n      in: query\n      description: The number of days to add to the capabilitiesEndDates. Values of <=0 will return an error.\n      schema:\n        type: integer\n        minimum: 1\n        format: int\n\n    GranteeIdPathParam:\n      in: path\n      name: granteeId\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the grantee.\n\n    GranteeIdQueryParam:\n      in: query\n      name: granteeId\n      schema:\n        type: string\n      description: The unique identifier for the grantee.",
    "summary": "The excerpt provides detailed parameters for querying usage records and filtering based on grantee and subscription IDs, contextualizing its relevance to the broader API documentation by outlining essential features for managing and retrieving licensing usage data within the Salable platform.",
    "indexed_at": 1745322772.661942
  },
  "excerpt_id_8e922faee94e3720b6c80829911b9849": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 5,
    "excerpt": "ion: The unique identifier for the grantee.\n\n    GranteeIdQueryParam:\n      in: query\n      name: granteeId\n      schema:\n        type: string\n      description: The unique identifier for the grantee.GranteeIdQueryParamRequired:\n      in: query\n      name: granteeId\n      schema:\n        type: string\n      required: true\n      description: The unique identifier for the grantee.\n\n    GranteeIdPricingTableQueryParamRequired:\n      in: query\n      name: granteeId\n      schema:\n        type: string\n      required: false\n      description: The unique identifier for the grantee.\n\n    GranteeIdsQueryParam:\n      in: query\n      name: granteeIds\n      description: Comma-separated unique identifiers of the grantees\n      required: true\n      style: form\n      explode: false\n      example: \"123,456\"\n      schema:\n        type: string\n\n    SuccessUrlQueryParamRequired:\n      in: query\n      name: successUrl\n      description: The URL to send users to if they successfully complete a purchase. It must be an absolute URL.\n      schema:\n        type: string\n        format: uri\n      required: true\n\n    GlobalSuccessUrlQueryParam:\n      in: query\n      name: globalSuccessUrl\n      description: The URL to send users to if they successfully complete a purchase of any plan. It must be an absolute URL.\n      schema:\n        type: string\n        format: uri\n      required: true\n\n    CancelUrlQueryParamRequired:\n      in: query\n      name: cancelUrl\n      description: The URL to send users to if the transaction fails. It must be an absolute URL.\n      schema:\n        type: string\n        format: uri\n      required: true\n\n    GlobalCancelUrlQueryParam:\n      in: query\n      name: globalCancelUrl\n      description: The URL to send users to if the transaction fails for any plan purchase. It must be an absolute URL.\n      schema:\n        type: string\n        format: uri\n      required: true\n\n    MemberQueryParamRequired:\n      in: query\n      name: member\n      description: The ID of the member who will manage the license.\n      schema:\n        type: string\n      required: true",
    "summary": "The excerpt provides detailed information about various query parameters related to grantee identification and success/cancellation URLs, which are essential for integrating with the Salable API's licensing and subscription management features within the broader context of facilitating efficient user transactions and license management in the comprehensive SaaS solution.",
    "indexed_at": 1745322772.66199
  },
  "excerpt_id_546bf9e2829fb44f8bceb9060b941373": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 6,
    "excerpt": "red: true\n\n    MemberQueryParamRequired:\n      in: query\n      name: member\n      description: The ID of the member who will manage the license.\n      schema:\n        type: string\n      required: trueSuccessUrlQueryParam:\n      in: query\n      name: successUrl\n      description: The URL to send users to if they successfully complete a purchase. It must be an absolute URL.\n      schema:\n        type: string\n        format: uri\n\n    CancelUrlQueryParam:\n      in: query\n      name: cancelUrl\n      description: The URL to send users to if the transaction fails. It must be an absolute URL.\n      schema:\n        type: string\n        format: uri\n\n    MemberQueryParam:\n      in: query\n      name: member\n      description: The ID of the member who will manage the license.\n      schema:\n        type: string\n\n    PromoCodeQueryParam:\n      in: query\n      name: promoCode\n      description: Used to pre-fill the promo code in Stripe checkout, use the promo code ID from the Stripe dashboard. Customers cannot edit this field during checkout. If you prefer to allow customers to enter the promo code themselves, use allowPromoCode instead.\n      schema:\n        type: string\n\n    AllowPromoCodeQueryParam:\n      in: query\n      name: allowPromoCode\n      description: Enables the promo code field in Stripe checkout. Cannot be used with promoCode.\n      schema:\n        type: string\n        enum:\n          - true\n          - false\n\n    CustomerEmailQueryParam:\n      in: query\n      name: customerEmail\n      description: Pre-fills the customer email in Stripe checkout\n      schema:\n        type: string\n        format: email\n\n    CustomerIdQueryParam:\n      in: query\n      name: customerId\n      description: The ID of an existing customer in your payment integration. This will pre-fill the email, card details and postcode at checkout.\n      schema:\n        type: string\n\n    CurrencyQueryParam:\n      in: query\n      name: currency\n      description: Uses the currency short name e.g. USD, defaults to the default currency on the Product which the Plan is linked to.\n      schema:\n        type: string",
    "summary": "The excerpt provides detailed parameters related to managing licenses and payment processes within the broader context of the Salable API documentation, which emphasizes streamlined integration for SaaS pricing models and subscription management.",
    "indexed_at": 1745322772.662039
  },
  "excerpt_id_5afa71a81cc3e66a0712156e8358e372": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 7,
    "excerpt": "in: query\n      name: currency\n      description: Uses the currency short name e.g. USD, defaults to the default currency on the Product which the Plan is linked to.\n      schema:\n        type: stringAutomaticTaxQueryParam:\n      in: query\n      name: automaticTax\n      description: Automatically calculate tax on checkout based on customers location and your Stripe settings.\n      schema:\n        type: string\n\n    QuantityQueryParam:\n      in: query\n      name: quantity\n      description: Set the amount of seats a customer will pay for in the checkout. This value cannot be lower than the Plan's minimum seat amount. (Only available on per seat plans)\n      schema:\n        type: string\n\n    ChangeQuantityQueryParam:\n      in: query\n      name: changeQuantity\n      description: Allows the customer to set how many seats they will purchase in the checkout but will not be able to go below the plan's minimum seat amount. (Only available on per seat plans)\n      schema:\n        type: string\n\n    RequirePaymentMethodQueryParam:\n      in: query\n      name: requirePaymentMethod\n      description: Setting this value to 'false' means that users can start a Stripe trial without providing a payment method upfront. Payment method will always be required if a subscription has no trial period.\n      schema:\n        type: string\n        enum:\n          - true\n          - false\n        default: true\n\n    ExpandPlanQueryParam:\n      in: query\n      name: expand\n      style: form\n      explode: false\n      required: false\n      description: Additional properties to expand the plan's relations as comma separated values eg `expand=currencies,features`\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - capabilities\n            - capabilities.capability\n            - features\n            - features.feature\n            - features.enumValue\n            - currencies\n            - currencies.currency",
    "summary": "The excerpt outlines specific query parameters related to currency, taxation, and seat quantity for Stripe checkout processes within the Salable API, providing details essential for customizing subscription purchases, thus connecting these features to the broader context of the document's focus on managing pricing models and subscriptions for SaaS businesses.",
    "indexed_at": 1745322772.6620889
  },
  "excerpt_id_e10ea143ebb22deb97ff87ec309791a6": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 8,
    "excerpt": "  - capabilities\n            - capabilities.capability\n            - features\n            - features.feature\n            - features.enumValue\n            - currencies\n            - currencies.currencyExpandProductQueryParams:\n      in: query\n      name: expand\n      style: form\n      explode: false\n      description: Additional properties to expand the product's relations as comma separated values eg `expand=plans,features`\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - features\n            - features.featureEnumOptions\n            - capabilities\n            - currencies\n            - currencies.currency\n            - organisationPaymentIntegration\n            - plans\n            - plans.capabilities\n            - plans.features\n            - plans.features.feature\n            - plans.features.enumValue\n            - plans.currencies\n            - plans.currencies.currency\n\n    ExpandSubscriptionQueryParams:\n      in: query\n      name: expand\n      description: Specify the resource fields to expand as comma separated values eg `expand=product,customer`\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - product\n            - product.organisationPaymentIntegration\n            - product.currencies\n            - plan.currencies\n            - customer\n\n    ExpandGetAllSubscriptionQueryParams:\n      in: query\n      name: expand\n      description: Specify the resource fields to expand as comma separated values eg `expand=product,plan`\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - product\n            - plan\n\n    CancelWhenQueryParam:\n      in: query\n      name: when\n      description: Decides when the subscription should be canceled, either now or at the end of the subscription period\n      required: true\n      schema:\n        type: string\n        enum:\n          - now\n          - end",
    "summary": "The excerpt details specific query parameters for expanding relationships and attributes of products and subscriptions within the Salable API, highlighting the flexibility in retrieving comprehensive data about features, capabilities, and subscription relations, which aligns with the broader goal of providing a robust API for managing SaaS pricing and licensing.",
    "indexed_at": 1745322772.662132
  },
  "excerpt_id_e641edc1cfd6a00298605ef35f2ad243": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 9,
    "excerpt": "ides when the subscription should be canceled, either now or at the end of the subscription period\n      required: true\n      schema:\n        type: string\n        enum:\n          - now\n          - endschemas:\n    Product:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          deprecated: true\n          type: string\n        description:\n          type: string\n          nullable: true\n        logoUrl:\n          type: string\n          nullable: true\n        displayName:\n          type: string\n          nullable: true\n        organisation:\n          type: string\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - DEPRECATED\n          example: ACTIVE\n        paid:\n          type: boolean\n        organisationPaymentIntegrationUuid:\n          type: string\n          format: uuid\n        paymentIntegrationProductId:\n          type: string\n          nullable: true\n        appType:\n          type: string\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: boolean",
    "summary": "The excerpt detailing the subscription cancellation options illustrates the API's functionality to manage subscription lifecycles, which is a core component of the Salable API's purpose of providing comprehensive subscription management for SaaS businesses.",
    "indexed_at": 1745322772.662179
  },
  "excerpt_id_a0fec7d8127f726de8c00070d4b3778f": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 10,
    "excerpt": "d:\n          type: string\n          nullable: true\n        appType:\n          type: string\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: booleanPlan:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          deprecated: true\n          type: string\n        description:\n          type: string\n          nullable: true\n        displayName:\n          type: string\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - DEPRECATED\n            - DRAFT\n            - REVISION\n            - SCHEDULED\n            - COMING_SOON\n          example: ACTIVE\n        isTest:\n          type: boolean\n        trialDays:\n          type: integer\n          nullable: true\n        evaluation:\n          type: boolean\n        evalDays:\n          type: integer\n        organisation:\n          type: string\n        visibility:\n          type: string\n        licenseType:\n          type: string\n        perSeatAmount:\n          type: integer\n        interval:\n          type: string\n        length:\n          type: integer\n        active:\n          type: boolean\n        planType:\n          type: string\n        pricingType:\n          type: string\n        environment:\n          type: string\n        paddlePlanId:\n          deprecated: true\n          type: string\n          nullable: true\n        productUuid:\n          type: string\n          format: uuid\n        salablePlan:\n          type: boolean\n        updatedAt:\n          type: string\n          format: date-time\n\n    Capability:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n          nullable: true\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - DEPRECATED\n        productUuid:\n          type: string\n          format: uuid\n        updatedAt:\n          type: string\n          format: date-time",
    "summary": "The excerpt provides details about the properties and schema definitions for the \"Plan\" and \"Capability\" objects, illustrating their role within the Salable API framework for managing products and subscriptions in SaaS businesses, as outlined throughout the broader documentation.",
    "indexed_at": 1745322772.662229
  },
  "excerpt_id_292ab6a210a5d658e3c94cd9b3e02c1a": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 11,
    "excerpt": "g\n          enum:\n            - ACTIVE\n            - DEPRECATED\n        productUuid:\n          type: string\n          format: uuid\n        updatedAt:\n          type: string\n          format: date-timeFeature:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n          nullable: true\n        displayName:\n          type: string\n        variableName:\n          type: string\n          nullable: true\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - DEPRECATED\n          example: ACTIVE\n        visibility:\n          type: string\n        valueType:\n          type: string\n        defaultValue:\n          type: string\n        showUnlimited:\n          type: boolean\n        productUuid:\n          type: string\n          format: uuid\n        updatedAt:\n          type: string\n          format: date-time\n        sortOrder:\n          type: integer\n\n    OrganisationPaymentIntegration:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        organisation:\n          type: string\n        integrationName:\n          type: string\n        accountName:\n          type: string\n        accountData:\n          type: object\n        accountId:\n          type: string\n          nullable: true\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: boolean\n\n    Currency:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        shortName:\n          type: string\n          example: USD\n        longName:\n          type: string\n          example: United States Dollar\n        symbol:\n          type: string\n          example: $",
    "summary": "The excerpt provides a detailed schema for features and their related attributes within the Salable API, highlighting how features are categorized and tracked, which aligns with the broader context of the full document by establishing a structured framework for managing product capabilities in the API's subscription and licensing models.",
    "indexed_at": 1745322772.66227
  },
  "excerpt_id_b3702b4a6eec716cc2f6a2c6e81779a1": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 12,
    "excerpt": "   shortName:\n          type: string\n          example: USD\n        longName:\n          type: string\n          example: United States Dollar\n        symbol:\n          type: string\n          example: $ProductPricingTable:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n          nullable: true\n        logoUrl:\n          type: string\n          nullable: true\n        displayName:\n          type: string\n          nullable: true\n        organisation:\n          type: string\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - DEPRECATED\n          example: ACTIVE\n        paid:\n          type: boolean\n        paymentIntegrationProductId:\n          type: string\n          nullable: true\n        appType:\n          type: string\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: boolean\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/Feature'\n        currencies:\n          type: array\n          items:\n            type: object\n            properties:\n              productUuid:\n                type: string\n                format: uuid\n              currencyUuid:\n                type: string\n                format: uuid\n              defaultCurrency:\n                type: boolean\n                example: true\n              currency:\n                $ref: '#/components/schemas/Currency'\n        plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/PricingTablePlan'",
    "summary": "The excerpt provides a detailed specification of currency attributes within the broader context of the Salable API documentation, which outlines the comprehensive features and functionalities for managing pricing, subscriptions, and licensing for SaaS businesses.",
    "indexed_at": 1745322772.6623309
  },
  "excerpt_id_7661720ce3af8e047797addb307a930b": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 13,
    "excerpt": "mple: true\n              currency:\n                $ref: '#/components/schemas/Currency'\n        plans:\n          type: array\n          items:\n            $ref: '#/components/schemas/PricingTablePlan'PricingTablePlan:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n          nullable: true\n        displayName:\n          type: string\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - DEPRECATED\n          example: ACTIVE\n        isTest:\n          type: boolean\n        trialDays:\n          type: integer\n          nullable: true\n        evaluation:\n          type: boolean\n        evalDays:\n          type: integer\n        organisation:\n          type: string\n        visibility:\n          type: string\n        licenseType:\n          type: string\n        perSeatAmount:\n          type: integer\n        interval:\n          type: string\n        length:\n          type: integer\n        active:\n          type: boolean\n        planType:\n          type: string\n        pricingType:\n          type: string\n        environment:\n          type: string\n        paddlePlanId:\n          deprecated: true\n          type: string\n          nullable: true\n        productUuid:\n          type: string\n          format: uuid\n        salablePlan:\n          type: boolean\n        updatedAt:\n          type: string\n          format: date-time\n        grantee:\n          type: object\n          nullable: true\n          properties:\n            isLicensed:\n              type: boolean\n            isSubscribed:\n              type: boolean\n        currencies:\n          type: array\n          items:\n            $ref: '#/components/schemas/Currency'\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/Feature'",
    "summary": "The excerpt details the structure and attributes of the `PricingTablePlan` schema, which is essential for the broader context of the Salable API as it outlines how products and their respective plans are organized and managed within the API, enhancing the overall understanding of API interactions for pricing and licensing in SaaS businesses.",
    "indexed_at": 1745322772.662373
  },
  "excerpt_id_13d42e3fe4431a3658dbaa6390d835e4": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 14,
    "excerpt": "cies:\n          type: array\n          items:\n            $ref: '#/components/schemas/Currency'\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/Feature'Event:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        type:\n          type: string\n          enum:\n            - Create seats\n            - Remove seats\n            - Change plan\n            - Update usage\n            - Cancel subscription\n        organisation:\n          type: string\n        status:\n          type: string\n          enum:\n            - retrying\n            - pending\n            - success\n            - failed\n            - incomplete\n        isTest:\n          type: boolean\n        retries:\n          type: integer\n        errorMessage:\n          type: string\n          nullable: true\n        errorCode:\n          type: string\n          nullable: true\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time",
    "summary": "The excerpt illustrates the structure of event-related data and its associated properties within the context of the broader Salable API documentation, emphasizing the system's capability to handle changes and updates to subscription management processes like seat allocation and usage tracking.",
    "indexed_at": 1745322772.6624131
  },
  "excerpt_id_41813e2a0a63e0ce47cd087b95c18944": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 15,
    "excerpt": "  errorCode:\n          type: string\n          nullable: true\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-timeSubscription:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        productUuid:\n          type: string\n          format: uuid\n        planUuid:\n          type: string\n          format: uuid\n        organisation:\n          type: string\n        paymentIntegrationSubscriptionId:\n          type: string\n        type:\n          type: string\n          enum:\n            - salable\n            - stripe_existing\n        quantity:\n          type: integer\n          minimum: 1\n        email:\n          type: string\n          nullable: true\n          format: email\n        expiryDate:\n          type: string\n          format: date-time\n        lineItemIds:\n          type: array\n          nullable: true\n          items:\n            type: string\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - CANCELED\n            - PAUSED\n            - TRIALING\n            - DELETED\n            - PAST_DUE\n            - INCOMPLETE_EXPIRED\n            - INCOMPLETE\n            - UNPAID\n          example: ACTIVE\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: boolean\n        cancelAtPeriodEnd:\n          type: boolean",
    "summary": "The excerpt defining subscription properties is integral to the broader Salable API documentation, as it outlines the essential data structure and attributes needed to manage subscriptions effectively within the API, facilitating the overall subscription management process for SaaS businesses.",
    "indexed_at": 1745322772.662461
  },
  "excerpt_id_f8e5fc5e3a3f5c8426ad00577c7a565c": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 16,
    "excerpt": "ype: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: boolean\n        cancelAtPeriodEnd:\n          type: booleanSessionCreateInvoiceRequest:\n      type: object\n      title: Invoice\n      properties:\n        scope:\n          type: string\n          enum: \n            - web-components:invoices\n          description: The component the created session will be used with\n        metadata:\n          type: object\n          required:\n            - subscriptionUuid\n          properties:\n            subscriptionUuid:\n              type: string\n              description: The subscription UUID to show the invoices for\n      required:\n        - scope\n        - metadata\n      example:\n        scope: web-components:invoices\n        metadata:\n          subscriptionUuid: 570c87ca-d415-4415-99ba-57abca146a81\n        \n    SessionCreatePricingTableRequest:\n      type: object\n      title: Pricing Table\n      properties:\n        scope:\n          type: string\n          enum: \n            - web-components:pricing-table\n          description: The component the created session will be used with\n        metadata:\n          type: object\n          oneOf:\n            - title: Product UUID\n              properties:\n                productUuid:\n                  type: string\n                  description: The product UUID to show the default pricing table for\n              required: productUuid\n\n            - title: Pricing Table UUID\n              properties:\n                pricingTableUuid:\n                  type: string\n                  description: The pricing table UUID to show\n              required: pricingTableUuid\n      required:\n        - scope\n        - metadata\n      example:\n        scope: web-components:pricing-table\n        metadata:\n          productUuid: a1212e6b-eef0-41d1-9071-ead207fc7d9b",
    "summary": "The excerpt details the structure and requirements for two specific components of the Salable API, namely \"SessionCreateInvoiceRequest\" and \"SessionCreatePricingTableRequest,\" which are part of the broader context aimed at assisting SaaS businesses in managing invoicing and pricing table sessions through REST API interactions.",
    "indexed_at": 1745322772.6625128
  },
  "excerpt_id_9ea08cbd413ec425f4f5f9eb74bb1858": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 17,
    "excerpt": "ingTableUuid\n      required:\n        - scope\n        - metadata\n      example:\n        scope: web-components:pricing-table\n        metadata:\n          productUuid: a1212e6b-eef0-41d1-9071-ead207fc7d9bSessionCreateCheckoutRequest:\n      type: object\n      title: Checkout\n      properties:\n        scope:\n          type: string\n          enum: \n            - web-components:checkout\n          description: The component the created session will be used with\n        metadata:\n          type: object\n          required:\n            - planUuid\n          properties:\n            planUuid:\n              type: string\n              description: The plan UUID to render a checkout component for\n      required:\n        - scope\n        - metadata\n      example:\n        scope: web-components:checkout\n        metadata:\n          planUuid: 040e46e4-ae69-4013-8b2a-0b5f17cbc51a\n\n    LicenseCreateRequest:\n      type: object\n      properties:\n        planUuid:\n          type: string\n          format: uuid\n          description: |\n            The UUID of the plan associated with the license.\n            The `planUuid` can be found on the Plan view in the Salable dashboard.\n        member:\n          type: string\n          description: The ID of the member who will manage the license.\n        granteeId:\n          type: string\n          nullable: true\n          description: The grantee ID for the license.\n        status:\n          type: string\n          nullable: true\n          enum:\n            - ACTIVE\n            - TRIALING\n          example: ACTIVE\n        endTime:\n          type: string\n          format: date-time\n          description: Provide a custom end time for the license; this will override the plan's default interval.\n        cancelAtPeriodEnd:\n          type: boolean\n          description: If set to true the license will not renew once the endTime date has passed.\n      required:\n        - planUuid\n        - member\n      example:\n        planUuid: 2fbdf7df-cb91-4104-ab75-de2db68db742\n        member: memberId_123456\n        granteeId: userId_123456\n        status: ACTIVE\n        endTime: 2025-07-06T12:00:00.000Z",
    "summary": "The excerpt details the structure and requirements for creating a checkout session and a license within the Salable API, highlighting how these functionalities integrate into the broader context of managing products, plans, and subscriptions essential for SaaS businesses.",
    "indexed_at": 1745322772.662561
  },
  "excerpt_id_a2081f1929b982759b423b9e6f1d90b7": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 18,
    "excerpt": "\n      example:\n        planUuid: 2fbdf7df-cb91-4104-ab75-de2db68db742\n        member: memberId_123456\n        granteeId: userId_123456\n        status: ACTIVE\n        endTime: 2025-07-06T12:00:00.000ZCreateManyLicensesRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseCreateRequest'\n      example:\n        - planUuid: 2fbdf7df-cb91-4104-ab75-de2db68db742\n          member: memberId_123456\n          granteeId: userId_123456\n          endTime: 2025-07-06T12:00:00.000Z\n        - planUuid: 31b83d94-26cd-415b-b46d-d17287e12be9\n          member: memberId_789101\n          granteeId: null\n          endTime: 2025-07-06T12:00:00.000Z\n        - planUuid: 31b83d94-26cd-415b-b46d-d17287e12be9\n          member: memberId_789101\n          granteeId: null\n          endTime: 2025-07-06T12:00:00.000Z\n\n    LicenseUpdateRequest:\n      type: object\n      properties:\n        granteeId:\n          type: string\n          nullable: true\n          description: The grantee ID for the license.\n        endTime:\n          type: string\n          format: date-time\n          description: Provide a custom end time for the license; this will override the plan's default interval.\n      required:\n        - uuid\n      example:\n        granteeId: userId_123456\n        endTime: 2025-07-06T12:00:00.000Z\n\n    UpdateManyLicensesRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseUpdateRequest'\n      example:\n        - uuid: 2fbdf7df-cb91-4104-ab75-de2db68db742\n          granteeId: userId_123456\n        - uuid: 31b83d94-26cd-415b-b46d-d17287e12be9\n          endTime: 2025-07-06T12:00:00.000Z\n        - uuid: 75fb6d73-b9b1-427f-bfbe-563741ce049e\n          granteeId: null\n          endTime: 2025-07-06T12:00:00.000Z",
    "summary": "The excerpt provides example data structures for creating and updating licenses within the Salable API, illustrating how to specify details like plan UUIDs, member IDs, grantee IDs, and end times, thereby offering practical guidance for users to interact with the licensing management features outlined in the broader API documentation.",
    "indexed_at": 1745322772.662602
  },
  "excerpt_id_ed15282d717d6166fcb39ad94076c541": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 19,
    "excerpt": "83d94-26cd-415b-b46d-d17287e12be9\n          endTime: 2025-07-06T12:00:00.000Z\n        - uuid: 75fb6d73-b9b1-427f-bfbe-563741ce049e\n          granteeId: null\n          endTime: 2025-07-06T12:00:00.000ZLicense:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        productUuid:\n          type: string\n          format: uuid\n        planUuid:\n          type: string\n          format: uuid\n        subscriptionUuid:\n          type: string\n          nullable: true\n          format: uuid\n        cancelAtPeriodEnd:\n          type: boolean\n          description: Only applicable to ad hoc licenses. If the license belongs to a subscription use the cancelAtPeriodEnd property on the subscription instead.\n        granteeId:\n          type: string\n          nullable: true\n        purchaser:\n          type: string\n        email:\n          type: string\n          nullable: true\n        name:\n          type: string\n          nullable: true\n        paymentService:\n          type: string\n        type:\n          type: string\n        capabilities:\n          type: array\n          items:\n            $ref: '#/components/schemas/Capability'\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - CANCELED\n            - EVALUATION\n            - SCHEDULED\n            - TRIALING\n            - INACTIVE\n          example: ACTIVE\n        metadata:\n          type: object\n          nullable: true\n          additionalProperties: true\n          properties:\n            granteeId:\n              type: string\n              nullable: true\n            purchaser:\n              type: string\n              nullable: false\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: boolean",
    "summary": "The excerpt illustrates the structure and properties of a License object within the Salable API, providing key information related to license management that is essential for developers integrating subscription-based features for SaaS products, as outlined throughout the broader documentation.",
    "indexed_at": 1745322772.662644
  },
  "excerpt_id_9516a99c40383674c2274db86035bea6": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 20,
    "excerpt": "able: true\n            purchaser:\n              type: string\n              nullable: false\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: booleanLicenseCount:\n      type: object\n      properties:\n        count:\n          type: integer\n          description: Total count of licenses.\n        assigned:\n          type: integer\n          description: Count of assigned licenses.\n        unassigned:\n          type: integer\n          description: Count of unassigned licenses.\n\n    LicenseByPurchaser:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n          nullable: true\n        email:\n          type: string\n          format: email\n          nullable: true\n        subscriptionUuid:\n          type: string\n          format: uuid\n          nullable: true\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - CANCELED\n            - EVALUATION\n            - SCHEDULED\n            - TRIALING\n            - INACTIVE\n          example: ACTIVE\n        granteeId:\n          type: string\n        paymentService:\n          type: string\n        purchaser:\n          type: string\n          format: email\n        type:\n          type: string\n        productUuid:\n          type: string\n          format: uuid\n        planUuid:\n          type: string\n          format: uuid\n        capabilities:\n          type: array\n          items:\n            $ref: '#/components/schemas/Capability'\n        metadata:\n          type: string\n          nullable: true\n        startTime:\n          type: string\n          format: date-time\n        endTime:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        isTest:\n          type: boolean\n        product:\n          $ref: '#/components/schemas/Product'\n        plan:\n          $ref: '#/components/schemas/Plan'\n        subscription:\n          nullable: true\n          allOf:\n            - $ref: '#/components/schemas/Subscription'",
    "summary": "The excerpt details the structure and attributes related to license management within the Salable API, highlighting essential license properties and metrics, thereby contextualizing its role in facilitating subscription and licensing workflows for SaaS businesses as outlined in the broader API documentation.",
    "indexed_at": 1745322772.6626859
  },
  "excerpt_id_aec59c84e38b8bb0a72122b3e79c8052": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 21,
    "excerpt": "nents/schemas/Product'\n        plan:\n          $ref: '#/components/schemas/Plan'\n        subscription:\n          nullable: true\n          allOf:\n            - $ref: '#/components/schemas/Subscription'LicenseCheck:\n      type: object\n      properties:\n        capabilities:\n          type: array\n          items:\n            type: object\n            properties:\n              capability:\n                type: string\n                example: test_capability\n              expiry:\n                type: string\n                format: date-time\n                example: \"2024-07-09T20:08:26.685Z\"\n          description: List of capabilities\n          example: [\n            { capability: 'capability_one', expiry: 2024-07-09T20:08:26.685Z },\n            { capability: 'capability_two', expiry: 2024-07-09T20:08:26.685Z },\n            { capability: 'test_plan', expiry: 2024-07-09T20:08:26.685Z }\n          ]\n        signature:\n          type: string\n          description: Signature\n          example: \"3044022004f243b5bb524689498537ff6bf865d847b8f6c6f65db687036814281fe4c1cc022043e645238050c587b6a79343a4acad58a925d3fbf3ba914d2f4c38a1f8439993\"\n\n    LicenseCurrentUsage:\n      type: object\n      properties:\n        unitCount:\n          type: integer\n          example: 0\n        updatedAt:\n          type: string\n          format: date-time\n          example: \"2024-07-09T20:08:26.685Z\"",
    "summary": "The excerpt details the structure of LicenseCheck and LicenseCurrentUsage within the Salable API documentation, illustrating how these components are essential for managing and verifying subscription capabilities and usage data in the broader context of facilitating pricing models, subscriptions, and licensing for SaaS businesses.",
    "indexed_at": 1745322772.66274
  },
  "excerpt_id_9372e24bc34dbf7191b5152899bc4fb2": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 22,
    "excerpt": "ct\n      properties:\n        unitCount:\n          type: integer\n          example: 0\n        updatedAt:\n          type: string\n          format: date-time\n          example: \"2024-07-09T20:08:26.685Z\"LicenseUsageRecord:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        unitCount:\n          type: integer\n          example: 0\n        type:\n          type: string\n          enum:\n            - recorded\n            - final\n            - current\n        recordedAt:\n          type: string\n          format: date-time\n          nullable: true\n          example: \"2024-07-09T20:08:26.685Z\"\n        resetAt:\n          type: string\n          format: date-time\n          nullable: true\n          description: Determined by license's plan interval + length. Only applicable for ad hoc licenses without a subscription. If the license belongs to a subscription this value will always be null.\n          example: \"2024-07-09T20:08:26.685Z\"\n        planUuid:\n          type: string\n          format: uuid\n        licenseUuid:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n          example: \"2024-07-09T20:08:26.685Z\"\n        updatedAt:\n          type: string\n          format: date-time\n          example: \"2024-07-09T20:08:26.685Z\"",
    "summary": "The excerpt detailing the `LicenseUsageRecord` object outlines how individual usage data for licenses\u2014including counts and timestamps\u2014integrates within the broader API documentation, emphasizing the management and reporting of usage under the Salable API system for SaaS businesses.",
    "indexed_at": 1745322772.6627998
  },
  "excerpt_id_4ce077a690e06fe23daada90c307e546": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 23,
    "excerpt": "pe: string\n          format: date-time\n          example: \"2024-07-09T20:08:26.685Z\"\n        updatedAt:\n          type: string\n          format: date-time\n          example: \"2024-07-09T20:08:26.685Z\"PlanFeature:\n      type: object\n      properties:\n        planUuid:\n          type: string\n          format: uuid\n        featureUuid:\n          type: string\n          format: uuid\n        value:\n          type: string\n          example: \"-1\"\n        enumValueUuid:\n          type: string\n          format: uuid\n          nullable: true\n        isUnlimited:\n          type: boolean\n          example: true\n        isUsage:\n          type: boolean\n          example: false\n        pricePerUnit:\n          type: number\n          nullable: true\n        minUsage:\n          type: number\n          nullable: true\n        maxUsage:\n          type: number\n          nullable: true\n        updatedAt:\n          type: string\n          format: date-time\n          example: \"2023-02-07T14:44:37.433Z\"\n        feature:\n          $ref: '#/components/schemas/Feature'\n        enumValue:\n          nullable: true\n          allOf:\n            - $ref: '#/components/schemas/EnumValue'\n\n    EnumValue:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          example: \"1955081b-204d-4d2a-9c4c-dc042498c2d9\"\n        name:\n          type: string\n          example: \"xxxxx\"\n        featureUuid:\n          type: string\n          format: uuid\n          example: \"78720bed-dcc7-4dd6-8dad-336ef552d41d\"\n        updatedAt:\n          type: string\n          format: date-time\n          example: \"2023-11-16T10:41:57.633Z\"\n\n    PlanCurrency:\n      type: object\n      properties:\n        planUuid:\n          type: string\n          format: uuid\n        currencyUuid:\n          type: string\n          format: uuid\n        price:\n          type: number\n          example: 1000\n        paymentIntegrationPlanId:\n          type: string\n          example: 'plan_NJVQSbjdHWJUSC'\n        currency:\n          $ref: '#/components/schemas/Currency'",
    "summary": "The excerpt detailing properties of the `PlanFeature`, `EnumValue`, and `PlanCurrency` schemas illustrates the structured way in which the Salable API manages and presents complex data about subscription plans, emphasizing the integration of pricing, features, and their specifications within the broader context of a comprehensive SaaS billing solution facilitated by the Salable API.",
    "indexed_at": 1745322772.662849
  },
  "excerpt_id_23065bf6bbd2623f9f9fc906460b3f70": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 24,
    "excerpt": "type: number\n          example: 1000\n        paymentIntegrationPlanId:\n          type: string\n          example: 'plan_NJVQSbjdHWJUSC'\n        currency:\n          $ref: '#/components/schemas/Currency'PlanCapability:\n      type: object\n      properties:\n        planUuid:\n          type: string\n          format: uuid\n        capabilityUuid:\n          type: string\n          format: uuid\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2023-02-07T14:44:37.433Z'\n        capability:\n          $ref: '#/components/schemas/Capability'",
    "summary": "The excerpt outlines the structure and properties of a plan capability within the Salable API, emphasizing its integration with various elements such as currency, plan UUID, and capability details, which reflects the API's comprehensive framework for managing SaaS pricing models, subscriptions, and licensing in the broader context of the full document.",
    "indexed_at": 1745322772.662907
  },
  "excerpt_id_591961ae8bc9634e2c292997a16088d5": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 25,
    "excerpt": "  format: uuid\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2023-02-07T14:44:37.433Z'\n        capability:\n          $ref: '#/components/schemas/Capability'StripeInvoice:\n      type: object\n      properties:\n        first:\n          type: string\n          example: in_xxxx\n        last:\n          type: string\n          example: in_xoxo\n        hasMore:\n          type: boolean\n          example: true\n        data:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: in_xxxx\n              object:\n                type: string\n                example: invoice\n              account_country:\n                type: string\n                example: GB\n              account_name:\n                type: string\n                example: salable.app\n              account_tax_ids:\n                type: string\n                nullable: true\n              amount_due:\n                type: integer\n                format: int32\n                example: 0\n              amount_paid:\n                type: integer\n                format: int32\n                example: 0\n              amount_remaining:\n                type: integer\n                format: int32\n                example: 0\n              amount_shipping:\n                type: integer\n                format: int32\n                example: 0\n              application:\n                type: string\n                example: ca_xxxx\n              application_fee_amount:\n                type: string\n                nullable: true\n              attempt_count:\n                type: integer\n                format: int32\n                example: 0\n              attempted:\n                type: boolean\n                example: true\n              auto_advance:\n                type: boolean\n                example: false\n              automatic_tax:\n                type: object\n                properties:\n                  enabled:\n                    type: boolean\n                    example: false\n                  status:\n                    type: string\n                    nullable: tru",
    "summary": "The excerpt provides a detailed structure of specific data types used in the Salable API documentation, illustrating how components like invoices and capabilities are defined and managed within the broader context of the API's functionality for pricing models, subscriptions, and licensing for SaaS businesses.",
    "indexed_at": 1745322772.662951
  },
  "excerpt_id_9a24a50a506ac799b7d4bcfa18511367": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 26,
    "excerpt": "properties:\n                  enabled:\n                    type: boolean\n                    example: false\n                  status:\n                    type: string\n                    nullable: true\n              billing_reason:\n                type: string\n                example: subscription_cycle\n              charge:\n                type: string\n                nullable: true\n              collection_method:\n                type: string\n                example: charge_automatically\n              created:\n                type: integer\n                format: int32\n                example: 1694521666\n              currency:\n                type: string\n                example: usd\n              custom_fields:\n                type: string\n                nullable: true\n              customer:\n                type: string\n                example: cus_NlwjXMq7KBOOR2\n              customer_address:\n                type: object\n                properties:\n                  city:\n                    type: string\n                    nullable: true\n                  country:\n                    type: string\n                    example: GB\n                  line1:\n                    type: string\n                    nullable: true\n                  line2:\n                    type: string\n                    nullable: true\n                  postal_code:\n                    type: string\n                    example: NR13 6UN\n                  state:\n                    type: string\n                    nullable: true\n              customer_email:\n                type: string\n                example: customer@company.com\n              customer_name:\n                type: string\n                example: A NAME\n              customer_phone:\n                type: string\n                nullable: true\n              customer_shipping:\n                type: string\n                nullable: true\n              customer_tax_exempt:\n                type: string\n                example: none\n              customer_tax_ids:\n                type: array\n                items:\n                  type: string\n                  nullable: true\n              default_payment_method:\n       ",
    "summary": "The excerpt details the properties related to customer information and billing within the context of the Salable API's subscription management features, highlighting how customer data is structured and utilized in billing processes for subscriptions.",
    "indexed_at": 1745322772.6629992
  },
  "excerpt_id_553ef68bcb5301348217820a3bb94336": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 27,
    "excerpt": "e: none\n              customer_tax_ids:\n                type: array\n                items:\n                  type: string\n                  nullable: true\n              default_payment_method:\n                type: string\n                nullable: true\n              default_source:\n                type: string\n                nullable: true\n              default_tax_rates:\n                type: array\n                items:\n                  type: string\n                  nullable: true\n              description:\n                type: string\n                nullable: true\n              discount:\n                type: string\n                nullable: true\n              discounts:\n                type: array\n                items:\n                  type: string\n                  nullable: true\n              due_date:\n                type: string\n                nullable: true\n              effective_at:\n                type: integer\n                format: int32\n                example: 1694525662\n              ending_balance:\n                type: integer\n                format: int32\n                example: -11\n              footer:\n                type: string\n                nullable: true\n              from_invoice:\n                type: string\n                nullable: true\n              hosted_invoice_url:\n                type: string\n                example: https://invoice.stripe.com/i/acct_1MopGcQQTaDeHd2t/live_YWNjdF8xTW9wR2NRUVRhRGVIZDJ0LF9PY2xEM2tYSWVGYnhhbGI3YlRabzRyYXBJZDF1RTE0LDg3MDM4MDY00200n3ctI3Pm?s=ap\n              invoice_pdf:\n                type: string\n                example: https://pay.stripe.com/invoice/acct_1MopGcQQTaDeHd2t/live_YWNjdF8xTW9wR2NRUVRhRGVIZDJ0LF9PY2xEM2tYSWVGYnhhbGI3YlRabzRyYXBJZDF1RTE0LDg3MDM4MDY00200n3ctI3Pm/pdf?s=ap\n              last_finalization_error:\n                type: string\n                nullable: true\n              latest_revision:\n                type: string\n                nullable: true\n              lines:\n                type: object\n                properties:\n                  object:\n                    type: string\n                    example: list\n                  data:\n                    type:",
    "summary": "The excerpt provides details on the structure and properties of invoice-related data within the Salable API, illustrating how such details integrate into broader functionalities for managing subscriptions and financial transactions in a SaaS context as outlined in the full-document.",
    "indexed_at": 1745322772.66305
  },
  "excerpt_id_f1dcb93ed8b77e9ef129049c39b2b89f": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 28,
    "excerpt": "\n                type: object\n                properties:\n                  object:\n                    type: string\n                    example: list\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                          example: il_1NpVh0QQTaDeHd2tKCrxg01G\n                        object:\n                          type: string\n                          example: line_item\n                        amount:\n                          type: integer\n                          format: int32\n                          example: -61\n                        amount_excluding_tax:\n                          type: integer\n                          format: int32\n                          example: -61\n                        currency:\n                          type: string\n                          example: usd\n                        description:\n                          type: string\n                          example: Unused time on Warm up calculator 2 after 12 Sep 2023\n                        discount_amounts:\n                          type: array\n                          items:\n                            type: string\n                            nullable: true\n                        discountable:\n                          type: boolean\n                          example: false\n                        discounts:\n                          type: array\n                          items:\n                            type: string\n                            nullable: true\n                        invoice_item:\n                          type: string\n                          example: ii_1NpVh0QQTaDeHd2tmqwlLPwv\n                        livemode:\n                          type: boolean\n                          example: true\n                        metadata:\n                          type: object\n                          properties: { }\n                        period:\n                          type: object\n                          properties:\n                            end:\n                              type: integ",
    "summary": "The excerpt details the structure of a response for retrieving invoice line items within the Salable API, illustrating how financial data related to products and services is organized and managed, which is essential for effective subscription billing and reporting in the broader context of the API\u2019s capabilities for handling SaaS business operations.",
    "indexed_at": 1745322772.663106
  },
  "excerpt_id_6e08170f25211b887436970d3fc7ed73": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 29,
    "excerpt": " properties: { }\n                        period:\n                          type: object\n                          properties:\n                            end:\n                              type: integer\n                              format: int32\n                              example: 1713962996\n                            start:\n                              type: integer\n                              format: int32\n                              example: 1694521666\n                        plan:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                              example: plan_NkBTWal7D8noOb\n                            object:\n                              type: string\n                              example: plan\n                            active:\n                              type: boolean\n                              example: true\n                            aggregate_usage:\n                              type: string\n                              nullable: true\n                            amount:\n                              type: integer\n                              format: int32\n                              example: 99\n                            amount_decimal:\n                              type: string\n                              example: \"99\"\n                            billing_scheme:\n                              type: string\n                              example: per_unit\n                            created:\n                              type: integer\n                              format: int32\n                              example: 1681934120\n                            currency:\n                              type: string\n                              example: usd\n                            interval:\n                              type: string\n                              example: year\n                            interval_count:\n                              type: integer\n                              format: int32\n                              example: 1\n                            livemode:\n                              type: boolea",
    "summary": "The excerpt provides detailed specifications of a billing plan within the Salable API, illustrating key attributes such as pricing structure and billing intervals, which are essential for understanding how subscriptions are managed and billed in the broader context of the API's functionality for handling SaaS business models.",
    "indexed_at": 1745322772.663164
  },
  "excerpt_id_f72de382d2f8ee7e3885cd1c45362b97": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 30,
    "excerpt": "                     type: integer\n                              format: int32\n                              example: 1\n                            livemode:\n                              type: boolean\n                              example: true\n                            metadata:\n                              type: object\n                              properties: { }\n                            nickname:\n                              type: string\n                              example: Pro\n                            product:\n                              type: string\n                              example: prod_NkBLSrAcR0yFKA\n                            tiers_mode:\n                              type: string\n                              nullable: true\n                            transform_usage:\n                              type: string\n                              nullable: true\n                            trial_period_days:\n                              type: string\n                              nullable: true\n                            usage_type:\n                              type: string\n                              example: licensed\n                        price:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                              example: plan_NkBTWal7D8noOb\n                            object:\n                              type: string\n                              example: price\n                            active:\n                              type: boolean\n                              example: true\n                            billing_scheme:\n                              type: string\n                              example: per_unit\n                            created:\n                              type: integer\n                              format: int32\n                              example: 1681934120\n                            currency:\n                              type: string\n                              example: usd\n                            custom_unit_amount:\n                              type: string\n                      ",
    "summary": "The excerpt detailing various properties of a pricing plan fits into the broader context of the Salable API documentation by illustrating the specific attributes and structure of plans, which are crucial for implementing pricing models and managing subscriptions effectively in a SaaS business.",
    "indexed_at": 1745322772.663212
  },
  "excerpt_id_66dba50ee12718a86cdc1d136f146b1c": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 31,
    "excerpt": "\n                              type: string\n                              example: usd\n                            custom_unit_amount:\n                              type: string\n                              nullable: true\n                            livemode:\n                              type: boolean\n                              example: true\n                            lookup_key:\n                              type: string\n                              nullable: true\n                            metadata:\n                              type: object\n                              properties: { }\n                            nickname:\n                              type: string\n                              example: Pro\n                            product:\n                              type: string\n                              example: prod_NkBLSrAcR0yFKA\n                            recurring:\n                              type: object\n                              properties:\n                                aggregate_usage:\n                                  type: string\n                                  nullable: true\n                                interval:\n                                  type: string\n                                  example: year\n                                interval_count:\n                                  type: integer\n                                  format: int32\n                                  example: 1\n                                trial_period_days:\n                                  type: string\n                                  nullable: true\n                                usage_type:\n                                  type: string\n                                  example: licensed\n                            tax_behavior:\n                              type: string\n                              example: unspecified\n                            tiers_mode:\n                              type: string\n                              nullable: true\n                            transform_quantity:\n                              type: string\n                              nullable: true\n                            type:\n              ",
    "summary": "The excerpt provides specific schema definitions related to product pricing, including details such as currency, billing behavior, and usage types, which are essential for implementing and managing pricing models within the broader context of the Salable API's functionalities for SaaS businesses.",
    "indexed_at": 1745322772.663255
  },
  "excerpt_id_2a288d213011152a702ad1023fbb23c8": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 32,
    "excerpt": " nullable: true\n                            transform_quantity:\n                              type: string\n                              nullable: true\n                            type:\n                              type: string\n                              example: recurring\n                            unit_amount:\n                              type: integer\n                              format: int32\n                              example: 99\n                            unit_amount_decimal:\n                              type: string\n                              example: \"99\"\n                        proration:\n                          type: boolean\n                          example: true\n                        proration_details:\n                          type: object\n                          properties:\n                            credited_items:\n                              type: object\n                              nullable: true\n                              properties:\n                                invoice:\n                                  type: string\n                                  example: in_1P8ggrDC45Z3guyuDOWAkWUy\n                                invoice_line_items:\n                                  type: array\n                                  items:\n                                    type: string\n                                    example: il_1N0QjLQQTaDeHd2twY3fnTJz\n                        quantity:\n                          type: integer\n                          format: int32\n                          example: 1\n                        subscription:\n                          type: string\n                          example: sub_xxxx\n                        subscription_item:\n                          type: string\n                          example: si_NlwjmwWIcCnR0r\n                        tax_amounts:\n                          type: array\n                          items:\n                            type: string\n                            nullable: true\n                        tax_rates:\n                          type: array\n                          items:\n                            type: string\n                            nullable: tr",
    "summary": "The excerpt provides a detailed description of the pricing model, including various parameters like proration and unit amounts, which are essential for understanding the billing structure and subscription management capabilities outlined in the broader context of the Salable API documentation.",
    "indexed_at": 1745322772.663313
  },
  "excerpt_id_86f7f994692e668da939abf6bdd64677": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 33,
    "excerpt": "llable: true\n                        tax_rates:\n                          type: array\n                          items:\n                            type: string\n                            nullable: true\n                        type:\n                          type: string\n                          example: invoiceitem\n                        unit_amount_excluding_tax:\n                          type: string\n                          example: \"-61\"\n                  has_more:\n                    type: boolean\n                    example: false\n                  total_count:\n                    type: integer\n                    format: int32\n                    example: 3\n                  url:\n                    type: string\n                    example: /v1/invoices/in_xxxx/lines\n              livemode:\n                type: boolean\n                example: true\n              metadata:\n                type: object\n                properties: { }\n              next_payment_attempt:\n                type: string\n                nullable: true\n              number:\n                type: string\n                example: C29E5E45-0014\n              on_behalf_of:\n                type: string\n                nullable: true\n              paid:\n                type: boolean\n                example: true\n              paid_out_of_band:\n                type: boolean\n                example: false\n              payment_intent:\n                type: string\n                nullable: true\n              payment_settings:\n                type: object\n                properties:\n                  default_mandate:\n                    type: string\n                    nullable: true\n                  payment_method_options:\n                    type: object\n                    nullable: true\n                    properties:\n                      acss_debit:\n                        type: string\n                        nullable: true\n                      bancontact:\n                        type: string\n                        nullable: true\n                      card:\n                        type: object\n                        properties:\n                          request_three_d_secure:\n",
    "summary": "The excerpt elaborates on the detailed structure and parameters for managing invoices within the Salable API, contributing to the broader context by showcasing the robust features available for subscription and payment management that enhance user experience for SaaS businesses.",
    "indexed_at": 1745322772.663363
  },
  "excerpt_id_aecd89cee2523c6280f6e76d501f92b4": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 34,
    "excerpt": "e: string\n                        nullable: true\n                      card:\n                        type: object\n                        properties:\n                          request_three_d_secure:\n                            type: string\n                      customer_balance:\n                        type: string\n                        nullable: true\n                      konbini:\n                        type: string\n                        nullable: true\n                      sepa_debit:\n                        type: string\n                        nullable: true\n                      us_bank_account:\n                        type: string\n                        nullable: true\n                  payment_method_types:\n                    type: string\n                    nullable: true\n              period_end:\n                type: integer\n                format: int32\n                example: 1694521666\n              period_start:\n                type: integer\n                format: int32\n                example: 1682340596\n              post_payment_credit_notes_amount:\n                type: integer\n                format: int32\n                example: 0\n              pre_payment_credit_notes_amount:\n                type: integer\n                format: int32\n                example: 0\n              quote:\n                type: string\n                nullable: true\n              receipt_number:\n                type: string\n                nullable: true\n              rendering:\n                type: string\n                nullable: true\n              rendering_options:\n                type: string\n                nullable: true\n              shipping_cost:\n                type: string\n                nullable: true\n              shipping_details:\n                type: string\n                nullable: true\n              starting_balance:\n                type: integer\n                format: int32\n                example: 0\n              statement_descriptor:\n                type: string\n                nullable: true\n              status:\n                type: string\n                example: paid\n              status_transitions:\n                type: object",
    "summary": "The excerpt detailing various attributes of a payment method within the broader Salable API documentation illustrates the integrated financial functionalities of the API, highlighting its support for different payment options and transaction details essential for managing subscriptions and licenses effectively within SaaS business models.",
    "indexed_at": 1745322772.6634262
  },
  "excerpt_id_5be8ee65f617fbdda55811498eb94708": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 35,
    "excerpt": "             type: string\n                nullable: true\n              status:\n                type: string\n                example: paid\n              status_transitions:\n                type: object\n                properties:\n                  finalized_at:\n                    type: integer\n                    format: int32\n                    example: 1694525662\n                  marked_uncollectible_at:\n                    type: string\n                    nullable: true\n                  paid_at:\n                    type: integer\n                    format: int32\n                    example: 1694525662\n                  voided_at:\n                    type: string\n                    nullable: true\n              subscription:\n                type: string\n                example: sub_xxxx\n              subscription_details:\n                type: object\n                properties:\n                  metadata:\n                    type: object\n                    properties:\n                      granteeId:\n                        type: string\n                        example: user_2OsDX3m32lz850HSrdWurEVZkmU\n                      member:\n                        type: string\n                        example: example-member-123\n              subtotal:\n                type: integer\n                format: int32\n                example: -11\n              subtotal_excluding_tax:\n                type: integer\n                format: int32\n                example: -11\n              tax:\n                type: string\n                nullable: true\n              test_clock:\n                type: string\n                nullable: true\n              total:\n                type: integer\n                format: int32\n                example: -11\n              total_discount_amounts:\n                type: array\n                items:\n                  type: string\n                  nullable: true\n              total_excluding_tax:\n                type: integer\n                format: int32\n                example: -11\n              total_tax_amounts:\n                type: array\n                items:\n                  type: string\n                  nullable: true\n              tr",
    "summary": "The excerpt provides detailed specifications for payment-related properties and statuses that are crucial for understanding the invoicing process within the broader context of the Salable API, which focuses on facilitating subscription management and billing for SaaS businesses.",
    "indexed_at": 1745322772.6634681
  },
  "excerpt_id_0445f247b05816e0bff80bd0e5c12785": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 36,
    "excerpt": " int32\n                example: -11\n              total_tax_amounts:\n                type: array\n                items:\n                  type: string\n                  nullable: true\n              transfer_data:\n                type: string\n                nullable: true\n              webhooks_delivered_at:\n                type: integer\n                format: int32\n                example: 1694521667",
    "summary": "The excerpt provided outlines specific data fields, including examples, related to the invoice structure within the Salable API, highlighting how it integrates into managing billing and subscription processes detailed throughout the full document.",
    "indexed_at": 1745322772.663507
  },
  "excerpt_id_e2bc61a602c7edf4e0b82e7938a2c515": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 37,
    "excerpt": "r_data:\n                type: string\n                nullable: true\n              webhooks_delivered_at:\n                type: integer\n                format: int32\n                example: 1694521667SubscriptionUpdatablePlan:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n        description:\n          type: string\n          nullable: true\n        displayName:\n          type: string\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - CANCELED\n            - PAUSED\n            - TRIALING\n            - DELETED\n            - PAST_DUE\n            - INCOMPLETE_EXPIRED\n            - INCOMPLETE\n            - UNPAID\n          example: ACTIVE\n        isTest:\n          type: boolean\n        trialDays:\n          type: integer\n          nullable: true\n        evaluation:\n          type: boolean\n        evalDays:\n          type: integer\n        organisation:\n          type: string\n        visibility:\n          type: string\n        licenseType:\n          type: string\n        perSeatAmount:\n          type: integer\n        interval:\n          type: string\n        length:\n          type: integer\n        active:\n          type: boolean\n        planType:\n          type: string\n        pricingType:\n          type: string\n        environment:\n          type: string\n        paddlePlanId:\n          deprecated: true\n          type: string\n          nullable: true\n        productUuid:\n          type: string\n          format: uuid\n        salablePlan:\n          type: boolean\n        updatedAt:\n          type: string\n          format: date-time\n        currencies:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanCurrency'\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanFeature'",
    "summary": "The excerpt defines the structure and properties of the `SubscriptionUpdatablePlan` schema, which is crucial for managing subscription features and statuses within the broader context of the Salable API, enabling users to effectively integrate, track, and handle various subscription plans and their attributes in a SaaS environment.",
    "indexed_at": 1745322772.663556
  },
  "excerpt_id_bec94aa703c289fd51df9950f46b6864": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 38,
    "excerpt": "        type: array\n          items:\n            $ref: '#/components/schemas/PlanCurrency'\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlanFeature'PricingTable:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n          example: xxxxx\n        status:\n          type: string\n          enum:\n            - ACTIVE\n            - DEPRECATED\n          example: ACTIVE\n        title:\n          type: string\n          nullable: true\n        text:\n          type: string\n          nullable: true\n        theme:\n          type: string\n          example: light\n        featureOrder:\n          type: string\n          example: default\n        productUuid:\n          type: string\n          format: uuid\n        customTheme:\n          type: string\n          nullable: true\n        featuredPlanUuid:\n          type: string\n          format: uuid\n          nullable: true\n        updatedAt:\n          type: string\n          format: date-time\n          example: 2023-10-03T09:50:57.308Z\n        features:\n          type: array\n          items:\n            type: object\n            properties:\n              pricingTableUuid:\n                type: string\n                format: uuid\n              featureUuid:\n                type: string\n                format: uuid\n              sortOrder:\n                type: integer\n                format: int32\n                example: 0\n              updatedAt:\n                type: string\n                format: date-time\n                example: 2023-10-03T09:50:57.308Z\n              feature:\n                type: object\n                properties:\n                  uuid:\n                    type: string\n                    format: uuid\n                  name:\n                    type: string\n                    example: feature one\n                  description:\n                    type: string\n                    example: Feature description\n                  displayName:\n                    type: string\n                    example: Boolean Feature Display Name\n                  variableName:\n                    type: s",
    "summary": "The excerpt outlines the structure of a Pricing Table, detailing its properties, including associated currencies and features, thus providing essential information for developers integrating these elements into the broader Salable API documentation aimed at managing pricing models for SaaS businesses.",
    "indexed_at": 1745322772.6636019
  },
  "excerpt_id_1c04b1c5e30972f3289d5a41f2049659": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 39,
    "excerpt": "eature description\n                  displayName:\n                    type: string\n                    example: Boolean Feature Display Name\n                  variableName:\n                    type: string\n                    example: feature_one\n                  status:\n                    type: string\n                    enum:\n                      - ACTIVE\n                      - DEPRECATED\n                    example: ACTIVE\n                  visibility:\n                    type: string\n                    example: public\n                  valueType:\n                    type: string\n                    example: boolean\n                  defaultValue:\n                    type: string\n                    example: \"false\"\n                  showUnlimited:\n                    type: boolean\n                    example: false\n                  productUuid:\n                    type: string\n                    format: uuid\n                  updatedAt:\n                    type: string\n                    format: date-time\n                    example: 2023-10-03T09:50:54.288Z\n                  sortOrder:\n                    type: integer\n                    format: int32\n                    example: 0\n                  featureEnumOptions:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        uuid:\n                          type: string\n                          format: uuid\n                        name:\n                          type: string\n                          example: xxxxx\n                        featureUuid:\n                          type: string\n                          format: uuid\n                        updatedAt:\n                          type: string\n                          format: date-time\n                          example: 2023-10-03T09:50:56.422Z\n        product:\n          type: object\n          properties:\n            uuid:\n              type: string\n              format: uuid\n            name:\n              type: string\n              example: Sample Product\n            description:\n              type: string\n              example: This is a sample",
    "summary": "The excerpt provides detailed specifications for the features of products within the Salable API, illustrating how they can be utilized in the broader context of managing products, plans, and subscriptions for SaaS businesses through the API.",
    "indexed_at": 1745322772.6636522
  },
  "excerpt_id_1c13b52ff77353471ab9c278f922f502": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 40,
    "excerpt": "             format: uuid\n            name:\n              type: string\n              example: Sample Product\n            description:\n              type: string\n              example: This is a sample product for testing purposes\n            logoUrl:\n              type: string\n              example: https://example.com/logo.png\n            displayName:\n              type: string\n              example: Sample Product\n            organisation:\n              type: string\n              example: test-org\n            status:\n              type: string\n              enum:\n                - ACTIVE\n                - DEPRECATED\n              example: ACTIVE\n            paid:\n              type: boolean\n              example: false\n            paymentIntegrationProductId:\n              type: string\n              nullable: true\n            appType:\n              type: string\n              example: CUSTOM\n            updatedAt:\n              type: string\n              format: date-time\n              example: 2023-10-03T09:50:54.288Z\n            isTest:\n              type: boolean\n              example: false\n            features:\n              type: array\n              items:\n                type: object\n                properties:\n                  uuid:\n                    type: string\n                    format: uuid\n                  name:\n                    type: string\n                    example: feature one\n                  description:\n                    type: string\n                    example: Feature description\n                  displayName:\n                    type: string\n                    example: Boolean Feature Display Name\n                  variableName:\n                    type: string\n                    example: feature_one\n                  status:\n                    type: string\n                    enum:\n                      - ACTIVE\n                      - DEPRECATED\n                    example: ACTIVE\n                  visibility:\n                    type: string\n                    example: public\n                  valueType:\n                    type: string\n                    example: boolean\n                  defaultValue:\n               ",
    "summary": "The excerpt details the structure of a product object within the Salable API, fitting into the broader context of the document by providing foundational information necessary for managing products, which is integral to the API's functionality for SaaS businesses in handling pricing, subscriptions, and licensing.",
    "indexed_at": 1745322772.6636999
  },
  "excerpt_id_ec9f622ee2d2176c35a71edec7fa7d34": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 41,
    "excerpt": "     type: string\n                    example: public\n                  valueType:\n                    type: string\n                    example: boolean\n                  defaultValue:\n                    type: string\n                    example: \"false\"\n                  showUnlimited:\n                    type: boolean\n                    example: false\n                  productUuid:\n                    type: string\n                    format: uuid\n                  updatedAt:\n                    type: string\n                    format: date-time\n                    example: 2023-10-03T09:50:54.288Z\n                  sortOrder:\n                    type: integer\n                    format: int32\n                    example: 0\n                  featureEnumOptions:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        uuid:\n                          format: uuid\n                          type: string\n                        name:\n                          type: string\n                          example: xxxxx\n                        featureUuid:\n                          type: string\n                          format: uuid\n                        updatedAt:\n                          type: string\n                          format: date-time\n                          example: 2023-10-03T09:50:56.422Z\n            currencies:\n              type: array\n              items:\n                type: object\n                properties:\n                  productUuid:\n                    type: string\n                    format: uuid\n                  currencyUuid:\n                    type: string\n                    format: uuid\n                  defaultCurrency:\n                    type: boolean\n                    example: true\n                  currency:\n                    type: object\n                    properties:\n                      uuid:\n                        type: string\n                        format: uuid\n                      shortName:\n                        type: string\n                        example: GBP\n                      longName:\n                        typ",
    "summary": "The excerpt provides technical specifications for product features and currencies, underscoring the API's role in facilitating the management of product attributes and internationalization within the broader context of the Salable API documentation focused on SaaS pricing, licensing, and subscription management.",
    "indexed_at": 1745322772.6637409
  },
  "excerpt_id_f773342d97bc7f5f7350eac9c2b3518f": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 42,
    "excerpt": "                     format: uuid\n                      shortName:\n                        type: string\n                        example: GBP\n                      longName:\n                        type: string\n                        example: Pound Sterling\n                      symbol:\n                        type: string\n                        example: \u00a3\n        plans:\n          type: array\n          items:\n            type: object\n            properties:\n              planUuid:\n                type: string\n                format: uuid\n              pricingTableUuid:\n                type: string\n                format: uuid\n              sortOrder:\n                type: integer\n                format: int32\n                example: 0\n              updatedAt:\n                type: string\n                format: date-time\n                example: 2023-10-03T09:50:57.308Z\n              plan:\n                type: object\n                properties:\n                  uuid:\n                    type: string\n                    format: uuid\n                  name:\n                    type: string\n                    example: Free Plan Name\n                  description:\n                    type: string\n                    example: Free Plan description\n                  displayName:\n                    type: string\n                    example: Free Plan Display Name\n                  status:\n                    type: string\n                    enum:\n                      - ACTIVE\n                      - DEPRECATED\n                      - DRAFT\n                      - REVISION\n                      - SCHEDULED\n                      - COMING_SOON\n                    example: ACTIVE\n                  isTest:\n                    type: boolean\n                    example: false\n                  trialDays:\n                    type: integer\n                    format: int32\n                    example: 7\n                    nullable: true\n                  evaluation:\n                    type: boolean\n                    example: false\n                  evalDays:\n                    type: integer\n                    format: int32\n                    example: 14\n           ",
    "summary": "The excerpt provides detailed specifications for currency and plan properties within the Salable API documentation, which aligns with the broader context of managing pricing models and subscriptions crucial for SaaS businesses utilizing the Salable API.",
    "indexed_at": 1745322772.6637938
  },
  "excerpt_id_705dce653f2c9226ed4a8be4b289581b": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 43,
    "excerpt": "            type: boolean\n                    example: false\n                  evalDays:\n                    type: integer\n                    format: int32\n                    example: 14\n                  organisation:\n                    type: string\n                    example: test-org\n                  visibility:\n                    type: string\n                    example: public\n                  licenseType:\n                    type: string\n                    example: licensed\n                  perSeatAmount:\n                    type: integer\n                    format: int32\n                    example: 1\n                  interval:\n                    type: string\n                    example: month\n                  length:\n                    type: integer\n                    format: int32\n                    example: 1\n                  active:\n                    type: boolean\n                    example: true\n                  planType:\n                    type: string\n                    example: standard\n                  pricingType:\n                    type: string\n                    example: paid\n                  environment:\n                    type: string\n                    example: dev\n                  paddlePlanId:\n                    deprecated: true\n                    type: string\n                    nullable: true\n                  productUuid:\n                    type: string\n                    format: uuid\n                  salablePlan:\n                    type: boolean\n                    example: false\n                  isSubscribed:\n                    type: boolean\n                  updatedAt:\n                    type: string\n                    format: date-time\n                    example: 2023-10-03T09:50:55.253Z\n                  capabilities:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        planUuid:\n                          type: string\n                          format: uuid\n                        capabilityUuid:\n                          type: string\n                          format: uuid\n                      ",
    "summary": "The provided excerpt details the attributes of a plan object within the Salable API, illustrating the customizable options available for SaaS businesses to define their subscription offerings, thereby reinforcing the document's overall aim to facilitate effective pricing and licensing management through an integrated API.",
    "indexed_at": 1745322772.663836
  },
  "excerpt_id_b5b087e2945918c40faadd1bcef0b6d2": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 44,
    "excerpt": "        type: string\n                          format: uuid\n                        capabilityUuid:\n                          type: string\n                          format: uuid\n                        updatedAt:\n                          type: string\n                          format: date-time\n                          example: 2023-10-03T09:50:57.155Z\n                        capability:\n                          type: object\n                          properties:\n                            uuid:\n                              type: string\n                              format: uuid\n                            name:\n                              type: string\n                              example: test_capability\n                            description:\n                              type: string\n                              example: Capability description\n                            status:\n                              type: string\n                              enum:\n                                - ACTIVE\n                                - DEPRECATED\n                              example: ACTIVE\n                            productUuid:\n                              type: string\n                              format: uuid\n                            updatedAt:\n                              type: string\n                              format: date-time\n                              example: 2023-10-03T09:50:54.288Z\n                  features:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        planUuid:\n                          type: string\n                          format: uuid\n                        featureUuid:\n                          type: string\n                          format: uuid\n                        value:\n                          type: string\n                          example: xxxxx\n                        enumValueUuid:\n                          type: string\n                          format: uuid\n                        isUnlimited:\n                          type: boolean\n                          example: false\n                        isUsage:\n   ",
    "summary": "The excerpt outlines the structure and attributes of capabilities and their relationship to plans within the Salable API, which supports the broader context of managing subscriptions, products, and features for SaaS businesses through a comprehensive and integrated API.",
    "indexed_at": 1745322772.663887
  },
  "excerpt_id_2703d4708f21fd100dfa3bb784effc38": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 45,
    "excerpt": "string\n                          format: uuid\n                        isUnlimited:\n                          type: boolean\n                          example: false\n                        isUsage:\n                          type: boolean\n                          example: true\n                        pricePerUnit:\n                          type: integer\n                          format: int32\n                          example: 10\n                        minUsage:\n                          type: integer\n                          format: int32\n                          example: 1\n                        maxUsage:\n                          type: integer\n                          format: int32\n                          example: 100\n                        updatedAt:\n                          type: string\n                          format: date-time\n                          example: 2023-10-03T09:50:55.253Z\n                        feature:\n                          type: object\n                          properties:\n                            uuid:\n                              type: string\n                              format: uuid\n                            name:\n                              type: string\n                              example: feature one\n                            description:\n                              type: string\n                              example: Feature description\n                            displayName:\n                              type: string\n                              example: Boolean Feature Display Name\n                            variableName:\n                              type: string\n                              example: feature_one\n                            status:\n                              type: string\n                              enum:\n                                - ACTIVE\n                                - DEPRECATED\n                              example: ACTIVE\n                            visibility:\n                              type: string\n                              example: public\n                            valueType:\n                              type: string\n                              example:",
    "summary": "The excerpt provides a detailed schema for defining plan features within the Salable API, illustrating how features are categorized and managed in the broader context of the API's functionalities for pricing models, subscriptions, and SaaS integrations.",
    "indexed_at": 1745322772.663928
  },
  "excerpt_id_0e6dd63a0e60c2461612a94879366617": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 46,
    "excerpt": "                     type: string\n                              example: public\n                            valueType:\n                              type: string\n                              example: boolean\n                            defaultValue:\n                              type: string\n                              example: \"false\"\n                            showUnlimited:\n                              type: boolean\n                              example: false\n                            productUuid:\n                              type: string\n                              format: uuid\n                            updatedAt:\n                              type: string\n                              format: date-time\n                              example: 2023-10-03T09:50:54.288Z\n                            sortOrder:\n                              type: integer\n                              format: int32\n                              example: 0\n                        enumValue:\n                          type: object\n                          properties:\n                            uuid:\n                              type: string\n                              format: uuid\n                            name:\n                              type: string\n                              example: xxxxx\n                            featureUuid:\n                              type: string\n                              format: uuid\n                            updatedAt:\n                              type: string\n                              format: date-time\n                              example: 2023-10-03T09:50:55.253Z\n                  currencies:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        planUuid:\n                          type: string\n                          format: uuid\n                        currencyUuid:\n                          type: string\n                          format: uuid\n                        price:\n                          type: integer\n                          format: int32\n                          example: 500\n                        pay",
    "summary": "The excerpt provides detailed specifications of plan features, including attributes like visibility, value type, and pricing-related properties, which align with the broader context of the Salable API documentation focused on managing and integrating pricing models, subscriptions, and licenses for SaaS businesses.",
    "indexed_at": 1745322772.663969
  },
  "excerpt_id_2b6ebae3ea5f78b51e60c8c8a1f18330": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 47,
    "excerpt": "          format: uuid\n                        price:\n                          type: integer\n                          format: int32\n                          example: 500\n                        paymentIntegrationPlanId:\n                          type: string\n                          example: plan_OkaQpjaIjoUVYz\n                        currency:\n                          type: object\n                          properties:\n                            uuid:\n                              type: string\n                              format: uuid\n                            shortName:\n                              type: string\n                              example: GBP\n                            longName:\n                              type: string\n                              example: Pound Sterling\n                            symbol:\n                              type: string\n                              example: \u00a3",
    "summary": "The excerpt provides specifications for a plan's currency attributes within the broader context of the Salable API documentation, which details the setup and management of pricing models and associated functionalities for SaaS businesses.",
    "indexed_at": 1745322772.6640158
  },
  "excerpt_id_64dbb0cbbe0a51014756d6b6a9a0cd89": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 48,
    "excerpt": "              type: string\n                              example: Pound Sterling\n                            symbol:\n                              type: string\n                              example: \u00a3Permission:\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n        description:\n          type: string\n          nullable: true\n        dependencies:\n          type: array\n          items:\n            type: string\n\n    PermissionCreateRequest:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n        description:\n          type: string\n        dependencies:\n          type: array\n          items:\n            type: string\n\n    PermissionUpdateRequest:\n      type: object\n      properties:\n        value:\n          type: string\n        type:\n          type: string\n        description:\n          type: string\n        dependencies:\n          type: array\n          items:\n            type: string\n\n    Role:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'\n\n    RoleCreateRequest:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: string\n\n    RoleUpdateRequest:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: string\n\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        role:\n          $ref: '#/components/schemas/Role'\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'",
    "summary": "The excerpt details the data structures and schemas related to permissions and roles within the Salable API, highlighting how they are crucial for managing access control in the broader context of the API's functionalities for pricing, subscription, and license management for SaaS businesses.",
    "indexed_at": 1745322772.6640692
  },
  "excerpt_id_9068a90fd80f17ef9e8179b4ecc4f666": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 49,
    "excerpt": "  name:\n          type: string\n        role:\n          $ref: '#/components/schemas/Role'\n        permissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Permission'UserCreateRequest:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        role:\n          type: string\n        permissions:\n          type: array\n          items:\n            type: string\n\n    UserUpdateRequest:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        role:\n          type: string\n        permissions:\n          $ref: '#/components/schemas/AddRemoveByUuid'\n\n    AddRemoveByUuid:\n      type: object\n      properties:\n        add:\n          type: array\n          items:\n            type: string\n          nullable: true\n        remove:\n          type: array\n          items:\n            type: string\n          nullable: true\n\n    StripePaymentMethod:\n      type: object\n      properties:\n        id:\n          type: string\n        object:\n          type: string\n        billing_details:\n          $ref: '#/components/schemas/StripeBillingDetails'\n        card:\n          $ref: '#/components/schemas/StripeCard'\n        created:\n          type: integer\n        customer:\n          type: string\n        livemode:\n          type: boolean\n        metadata:\n          type: object\n        type:\n          type: string\n\n    StripeBillingDetails:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/StripeAddress'\n        email:\n          type: string\n        name:\n          type: string\n        phone:\n          type: string\n          nullable: true\n\n    StripeAddress:\n      type: object\n      properties:\n        city:\n          type: string\n          nullable: true\n        country:\n          type: string\n        line1:\n          type: string\n          nullable: true\n        line2:\n          type: string\n          nullable: true\n        postal_code:\n          type: string\n        state:\n          type: string\n          nullable: true",
    "summary": "The excerpt details the structure for user creation and updates within the broader context of the Salable API documentation, which provides a comprehensive overview of managing user roles and permissions in relation to the API's functionalities for SaaS businesses.",
    "indexed_at": 1745322772.664129
  },
  "excerpt_id_d4f2fa832d56ba402288c090c5b8e6be": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 50,
    "excerpt": "tring\n          nullable: true\n        line2:\n          type: string\n          nullable: true\n        postal_code:\n          type: string\n        state:\n          type: string\n          nullable: trueStripeCard:\n      type: object\n      properties:\n        brand:\n          type: string\n        checks:\n          $ref: '#/components/schemas/StripeChecks'\n        country:\n          type: string\n        exp_month:\n          type: integer\n        exp_year:\n          type: integer\n        fingerprint:\n          type: string\n        funding:\n          type: string\n        generated_from:\n          type: string\n          nullable: true\n        last4:\n          type: string\n        networks:\n          $ref: '#/components/schemas/StripeNetworks'\n        three_d_secure_usage:\n          $ref: '#/components/schemas/StripeThreeDSecureUsage'\n        wallet:\n          type: string\n          nullable: true\n\n    StripeChecks:\n      type: object\n      properties:\n        address_line1_check:\n          type: string\n          nullable: true\n        address_postal_code_check:\n          type: string\n        cvc_check:\n          type: string\n\n    StripeNetworks:\n      type: object\n      properties:\n        available:\n          type: array\n          items:\n            type: string\n        preferred:\n          type: string\n          nullable: true\n\n    StripeThreeDSecureUsage:\n      type: object\n      properties:\n        supported:\n          type: boolean\n\n    CheckoutCreateSubscriptionRequest:\n      type: object\n      properties:\n        planUuid:\n          type: string\n        email:\n          type: string\n        member:\n          type: string\n        granteeId:\n          type: string\n        currency:\n          type: string\n      required:\n        - planUuid\n        - email\n        - member\n        - granteeId\n\n    CheckoutCreateIntentRequest:\n      type: object\n      properties:\n        planUuid:\n          type: string\n        email:\n          type: string\n        member:\n          type: string\n        granteeId:\n          type: string\n        currency:\n          type: string\n      required:\n        - planUuid\n        - email\n        - member\n        - granteeId",
    "summary": "The excerpt provides a detailed schema description of the Stripe payment integration components within the Salable API, which is pertinent to the broader context of the comprehensive API document aimed at facilitating the integration and management of pricing models, subscriptions, and licenses for SaaS businesses.",
    "indexed_at": 1745322772.664188
  },
  "excerpt_id_a842dcf0a2bc31150f8009b20e0265ac": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 51,
    "excerpt": "ember:\n          type: string\n        granteeId:\n          type: string\n        currency:\n          type: string\n      required:\n        - planUuid\n        - email\n        - member\n        - granteeIdCheckoutCreateSubscriptionResponse:\n      type: object\n      properties:\n        clientSecret:\n          type: string\n\n    CheckoutCreateIntentResponse:\n      type: object\n      properties:\n        clientSecret:\n          type: string\n\n    EventResponse:\n      type: object\n      properties:\n        eventUuid:\n          type: string\n          format: uuid\n\n    CursorPaginationLicensesResponse:\n      type: object\n      properties:\n        first:\n          type: string\n          format: uuid\n          nullable: true\n        last:\n          type: string\n          format: uuid\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/License'\n\n    CursorPaginationLicensesUsageRecordsResponse:\n      type: object\n      properties:\n        first:\n          type: string\n          format: uuid\n          nullable: true\n        last:\n          type: string\n          format: uuid\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/LicenseUsageRecord'\n\n    CursorPaginationSubscriptionsResponse:\n      type: object\n      properties:\n        first:\n          type: string\n          format: uuid\n          nullable: true\n        last:\n          type: string\n          format: uuid\n          nullable: true\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n\ntags:\n  - name: Products\n    description: Operations related to products.\n  - name: Plans\n    description: Operations related to plans.\n  - name: Pricing Tables\n    description: Operations related to pricing tables.\n  - name: Subscriptions\n    description: Operations related to licenses.\n  - name: Licenses\n    description: Operations related to licenses.\n  - name: Usage\n    description: Operations related to usage.\n  - name: Events\n    description: Operations related to events.\n  - name: Checkout\n    description: Operations related to checkout.",
    "summary": "The excerpt provides details on the API response schemas related to subscription management and licensing, illustrating how these elements integrate into the broader Salable API framework designed to support SaaS businesses in managing products, pricing, and user access.",
    "indexed_at": 1745322772.6642299
  },
  "excerpt_id_ffdde0a632ed26ba3a670f270c3f6d11": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 52,
    "excerpt": "enses.\n  - name: Usage\n    description: Operations related to usage.\n  - name: Events\n    description: Operations related to events.\n  - name: Checkout\n    description: Operations related to checkout.paths:\n  /products:\n    get:\n      summary: Get products\n      operationId: getProducts\n      description: Retrieves a list of all products\n      tags:\n        - Products\n      security:\n        - apiKey: [ \"products:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n      responses:\n        '200':\n          description: List of products\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Product'\n        \"400\":\n          description: Bad request\n\n  /products/{productUuid}:\n    get:\n      summary: Get a product\n      operationId: getProductByUuid\n      description: |\n        Retrieves a specific product by its UUID. \n        By default, the response does not contain any relational data. If you want to expand the relational data, you can do so with the `expand` query parameter.\n      tags:\n        - Products\n      security:\n        - apiKey: [ \"products:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/ProductUuidPathParam'\n        - $ref: '#/components/parameters/ExpandProductQueryParams'\n      responses:\n        \"200\":\n          description: Returns the product\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt provides an overview of API endpoints related to product management within the Salable API documentation, highlighting how these operations are essential for integrating and managing various products and their features in a SaaS environment, which is the broader context of the document.",
    "indexed_at": 1745322772.6642728
  },
  "excerpt_id_e9974e8199195febc17fa224f2404286": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 53,
    "excerpt": "          application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/products/{productUuid}/plans:\n    get:\n      summary: Get all plans of a product\n      operationId: getProductPlans\n      description: |\n        Retrieves all the plans associated with a specific product.\n        By default, the response does not contain any relational data. If you want to expand the relational data, you can do so with the `expand` query parameter.\n      tags:\n        - Products\n      security:\n        - apiKey: [ \"plans:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/ProductUuidPathParam'\n      responses:\n        \"200\":\n          description: List of plans\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Plan'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n\n  /products/{productUuid}/pricingtable:\n    get:\n      summary: Get product pricing table\n      operationId: getProductPricingTable\n      description: |\n        Retrieves the pricing table of a specific product.\n      tags:\n        - Products\n      security:\n        - apiKey: [ \"pricing-tables:read\" ]\n        - sessionToken: [ \"web-components:pricing-table\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/ProductUuidPathParam'\n        - $ref: '#/components/parameters/GranteeIdQueryParamRequired'\n        - $ref: '#/components/parameters/CurrencyQueryParam'\n      responses:\n        \"200\":\n          description: Returns a product object with pricing table details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductPricingTable'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt details the retrieval of product plans and associated pricing tables within the Salable API, highlighting the framework's capabilities for managing and accessing pricing features for SaaS businesses as outlined in the broader documentation.",
    "indexed_at": 1745322772.664315
  },
  "excerpt_id_3c598d157d5e1dfdf240ff8664ee0a23": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 54,
    "excerpt": "plication/json:\n              schema:\n                $ref: '#/components/schemas/ProductPricingTable'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/products/{productUuid}/features:\n    get:\n      summary: Get product features\n      description: Retrieve the list of features for a product\n      operationId: getProductFeatures\n      tags:\n        - Products\n      security:\n        - apiKey: [ \"features:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/ProductUuidPathParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Feature'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt detailing the retrieval of product features highlights a specific API endpoint that contributes to the broader functionality of the Salable API, facilitating the management of product details essential for SaaS businesses to effectively design and implement their pricing and subscription models.",
    "indexed_at": 1745322772.664356
  },
  "excerpt_id_90c759c4feb12e8e2b105cd945aeabd3": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 55,
    "excerpt": "             type: array\n                items:\n                  $ref: '#/components/schemas/Feature'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/products/{productUuid}/currencies:\n    get:\n      summary: Get product currencies\n      description: Retrieve the list of currencies for a product\n      operationId: getProductCurrencies\n      tags:\n        - Products\n      security:\n        - apiKey: [ \"currencies:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/ProductUuidPathParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    productUuid:\n                      type: string\n                      format: uuid\n                      description: The UUID of the product\n                    currencyUuid:\n                      type: string\n                      format: uuid\n                      description: The UUID of the currency\n                    defaultCurrency:\n                      type: boolean\n                      description: Indicates if it is the default currency for the product\n                    currency:\n                      $ref: '#/components/schemas/Currency'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt outlines the API endpoint for retrieving product currencies, which is a crucial feature in the broader context of the Salable API's functionality for managing diverse pricing models and subscriptions for SaaS businesses.",
    "indexed_at": 1745322772.664417
  },
  "excerpt_id_a96d4a6e32f4604aedeb831d9028fe91": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 56,
    "excerpt": " the product\n                    currency:\n                      $ref: '#/components/schemas/Currency'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/products/{productUuid}/capabilities:\n    get:\n      summary: Get product capabilities\n      description: Retrieve the list of capabilities for a product\n      operationId: getProductCapabilities\n      tags:\n        - Products\n      security:\n        - apiKey: [ \"capabilities:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/ProductUuidPathParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Capability'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt details the API endpoint for retrieving product capabilities, highlighting its structured response and validation mechanisms, which supports the broader context of Salable API's goal to facilitate effective management of SaaS pricing models, subscriptions, and licenses.",
    "indexed_at": 1745322772.6644568
  },
  "excerpt_id_b705d9d7d472c76f7f7dabf8334f14ab": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 57,
    "excerpt": "          type: array\n                items:\n                  $ref: '#/components/schemas/Capability'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/plans/{planUuid}:\n    get:\n      summary: Get a plan\n      operationId: getPlanByUuid\n      description: |\n        Retrieves information about a plan by its UUID.\n        By default, the response does not contain any relational data. If you want to expand the relational data, you can do so with the `expand` query parameter.\n      tags:\n        - Plans\n      security:\n        - apiKey: [ \"plans:read\" ]\n        - sessionToken: [ \"web-components:checkout\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/PlanUuidPathParam'\n        - $ref: '#/components/parameters/ExpandPlanQueryParam'\n        - $ref: '#/components/parameters/SuccessUrlQueryParam'\n        - $ref: '#/components/parameters/CancelUrlQueryParam'\n        - $ref: '#/components/parameters/GranteeIdQueryParam'\n        - $ref: '#/components/parameters/MemberQueryParam'\n        - $ref: '#/components/parameters/PromoCodeQueryParam'\n        - $ref: '#/components/parameters/AllowPromoCodeQueryParam'\n        - $ref: '#/components/parameters/CustomerEmailQueryParam'\n        - $ref: '#/components/parameters/CustomerIdQueryParam'\n        - $ref: '#/components/parameters/CurrencyQueryParam'\n        - $ref: '#/components/parameters/AutomaticTaxQueryParam'\n      responses:\n        '200':\n          description: Returns the plan information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plan'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt provides a detailed overview of the API endpoint for retrieving plan information by UUID, emphasizing the need for proper security measures, parameter requirements, and the expected response schema, which aligns with the broader context of integrating various features within the Salable API for managing subscriptions and licenses in SaaS businesses.",
    "indexed_at": 1745322772.664497
  },
  "excerpt_id_8afa492aad2baaf4c1b74f1b88500086": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 58,
    "excerpt": "\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Plan'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/plans/{planUuid}/features:\n    get:\n      summary: Get plan features\n      description: Retrieve the list of features for a specific plan\n      operationId: getPlanFeatures\n      tags:\n        - Plans\n      security:\n        - apiKey: [ \"features:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/PlanUuidPathParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PlanFeature'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n\n  /plans/{planUuid}/currencies:\n    get:\n      summary: Get plan currencies\n      description: Retrieve the list of currencies for a specific plan\n      operationId: getPlanCurrencies\n      tags:\n        - Plans\n      security:\n        - apiKey: [ \"currencies:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/PlanUuidPathParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PlanCurrency'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt details specific API endpoints for retrieving features and currencies associated with a plan within the broader context of the Salable API documentation, which serves as a comprehensive guide for integrating and managing SaaS pricing models, subscriptions, and licenses.",
    "indexed_at": 1745322772.6645389
  },
  "excerpt_id_ddc9e4fbd355f7d9a819edc36d148407": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 59,
    "excerpt": "        type: array\n                items:\n                  $ref: '#/components/schemas/PlanCurrency'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/plans/{planUuid}/checkoutlink:\n    get:\n      summary: Get a checkout link for a plan\n      operationId: getPlanCheckoutLink\n      description: Retrieves a checkout link for a specific plan. The checkout link can be used by customers to purchase the plan.\n      tags:\n        - Plans\n      security:\n        - apiKey: [ \"plans:read\" ]\n        - sessionToken: [ \"web-components:pricing-table\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/PlanUuidPathParam'\n        - $ref: '#/components/parameters/SuccessUrlQueryParamRequired'\n        - $ref: '#/components/parameters/CancelUrlQueryParamRequired'\n        - $ref: '#/components/parameters/GranteeIdQueryParamRequired'\n        - $ref: '#/components/parameters/MemberQueryParamRequired'\n        - $ref: '#/components/parameters/PromoCodeQueryParam'\n        - $ref: '#/components/parameters/AllowPromoCodeQueryParam'\n        - $ref: '#/components/parameters/CustomerEmailQueryParam'\n        - $ref: '#/components/parameters/CustomerIdQueryParam'\n        - $ref: '#/components/parameters/CurrencyQueryParam'\n        - $ref: '#/components/parameters/AutomaticTaxQueryParam'\n        - $ref: '#/components/parameters/QuantityQueryParam'\n        - $ref: '#/components/parameters/ChangeQuantityQueryParam'\n        - $ref: '#/components/parameters/RequirePaymentMethodQueryParam'\n      responses:\n        '200':\n          description: Successfully retrieved the checkout link\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  checkoutUrl:\n                    type: string\n                    format: uri\n                    description: The generated checkout link for the plan.\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt details the process for retrieving a checkout link for a specific plan within the Salable API, which is integral to facilitating user purchases and enhancing the overall subscription management experience outlined in the broader API documentation.",
    "indexed_at": 1745322772.664586
  },
  "excerpt_id_7da111d140e753a404fc70f2a6fe80b0": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 60,
    "excerpt": "                format: uri\n                    description: The generated checkout link for the plan.\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/plans/{planUuid}/capabilities:\n    get:\n      summary: Get plan capabilities\n      description: Retrieve the list of capabilities for a specific plan\n      operationId: getPlanCapabilities\n      tags:\n        - Plans\n      security:\n        - apiKey: [ \"capabilities:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/PlanUuidPathParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PlanCapability'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt highlights a specific API endpoint related to retrieving capabilities for a specified plan, which is part of the broader functionality offered by the Salable API to manage subscriptions, licensing, and pricing models for SaaS businesses.",
    "indexed_at": 1745322772.6646342
  },
  "excerpt_id_93a1bdd9071867235ec2537127127c00": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 61,
    "excerpt": "      type: array\n                items:\n                  $ref: '#/components/schemas/PlanCapability'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/licenses:\n    post:\n      summary: Create a license\n      operationId: createLicense\n      description: Create one or many ad hoc Licenses to give the specified granteeIds access to features.\n\nPer seat ad hoc licenses are currently not supported.\n\nIf you are incrementing seats on a paid subscription use the [increment seats](#tag/Subscriptions/operation/incrementSubscriptionSeats) endpoint instead.\n\ntags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:write\" ]\n        - sessionToken: [ \"web-components:pricing-table\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/LicenseCreateRequest'\n                - $ref: '#/components/schemas/CreateManyLicensesRequest'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/License'\n                  - type: array\n                    items:\n                      $ref: '#/components/schemas/License'\n        \"400\":\n          description: Bad request\n    put:\n      summary: Batch update licenses\n      operationId: updateLicenses\n      description: Performs a batch update of licenses.",
    "summary": "The excerpt details the creation and management of licenses within the broader context of the Salable API, highlighting the process for granting access to features and the integration of license functionality with familiar e-commerce operations and subscription management tools.",
    "indexed_at": 1745322772.664674
  },
  "excerpt_id_2803692fca51400dad72f2a2a41f66b4": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 62,
    "excerpt": "hemas/License'\n        \"400\":\n          description: Bad request\n    put:\n      summary: Batch update licenses\n      operationId: updateLicenses\n      description: Performs a batch update of licenses.tags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateManyLicensesRequest'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/License'\n        \"400\":\n          description: Bad request\n    get:\n      summary: Get licenses\n      operationId: getLicenses\n      description: Retrieves a list of all licenses.\n\ntags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/LicenseStatusQueryParam'\n        - $ref: '#/components/parameters/CursorQueryParam'\n        - $ref: '#/components/parameters/CursorTakeQueryParam'\n        - in: query\n          name: subscriptionUuid\n          required: false\n          schema:\n            type: string\n            format: uuid\n          description: Filters licenses by their subscription.\n\nUseful for returning licenses on a per seat subscription.\n\n- in: query\n          name: granteeId\n          required: false\n          schema:\n            type: string\n          description: Filters licenses by grantee.\n\n- in: query\n          name: planUuid\n          required: false\n          schema:\n            type: string\n            format: uuid\n          description: Filters licenses by their plan.\n\nresponses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CursorPaginationLicensesResponse'\n        \"400\":\n          description: Bad request",
    "summary": "The excerpt highlights the API's capabilities for managing licenses, particularly focusing on batch updates and retrieving lists of licenses, which is essential for users of the Salable API to effectively handle subscriptions and licensing within the context of the overall API documentation.",
    "indexed_at": 1745322772.664716
  },
  "excerpt_id_d90e5bf0fa3ed8c865de661d1fe8c167": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 63,
    "excerpt": "s\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CursorPaginationLicensesResponse'\n        \"400\":\n          description: Bad request/licenses/count:\n    get:\n      summary: Get the count of licenses\n      operationId: getLicensesCount\n      description: Returns the count of all licenses including counts for assigned and unassigned licenses.\n      tags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidQueryParam'\n        - $ref: '#/components/parameters/LicenseStatusQueryParam'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseCount'\n        \"400\":\n          description: Bad request",
    "summary": "The excerpt detailing the API endpoint for counting licenses illustrates a specific functionality within the broader context of the Salable API, which is designed to manage various aspects of subscription and licensing for SaaS businesses.",
    "indexed_at": 1745322772.66476
  },
  "excerpt_id_e97150cfd142e0dd8729ffc1a79c8ff4": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 64,
    "excerpt": " Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseCount'\n        \"400\":\n          description: Bad request/licenses/{licenseUuid}:\n    get:\n      summary: Get a License\n      operationId: getLicenseByUuid\n      description: Fetch the details of a specific license using its UUID.\n\nIf additional specific details are required, use the optional 'expand' query parameter to include relational data such as associated subscription details, pricing plans, product details, etc.\n\ntags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/LicenseUuidPathParam'\n        - name: expand\n          in: query\n          description: Specify the resource fields to expand as comma separated values eg `expand=subscription,plan`\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n          example:\n            - subscription\n            - plan.currencies.currency\n            - plan.currencies\n            - plan.features\n            - plan\n            - product.currencies\n            - product.organisationPaymentIntegration\n            - product\n      responses:\n        '200':\n          description: The operation was successful, and the license data is returned in the response.\n\ncontent:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/License'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n    put:\n      summary: Update a license\n      operationId: updateLicense\n      description: Set or unset the granteeId of a license.",
    "summary": "The excerpt details the API responses for retrieving and updating licenses within the broader context of the Salable API documentation, which provides comprehensive instructions and standards for managing SaaS products, subscriptions, and licensing through its functional endpoints.",
    "indexed_at": 1745322772.664814
  },
  "excerpt_id_49c1f925b9b823dbc869debcecd54227": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 65,
    "excerpt": "ption: Bad request\n        \"404\":\n          description: Not found\n    put:\n      summary: Update a license\n      operationId: updateLicense\n      description: Set or unset the granteeId of a license.tags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/LicenseUuidPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LicenseUpdateRequest'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/License'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n    delete:\n      summary: Cancel an ad hoc License\n      operationId: cancelLicense\n      description: |\n        Cancel an ad hoc license, this will set the status to `CANCELED`\n        \n        Does not cancel subscription, only use for canceling ad hoc licenses.\n\ntags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/LicenseUuidPathParam'\n      responses:\n        '204':\n          description: Successfully canceled the license, no content returned\n        \"400\":\n          description: Bad request",
    "summary": "The excerpt discusses the operations for updating and canceling licenses within the Salable API, relating to the broader context of managing licenses efficiently while ensuring secure access and handling of user permissions in a structured way.",
    "indexed_at": 1745322772.6648571
  },
  "excerpt_id_436e9d6c339c56d143b4d7eb7f449283": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 66,
    "excerpt": "ponents/parameters/LicenseUuidPathParam'\n      responses:\n        '204':\n          description: Successfully canceled the license, no content returned\n        \"400\":\n          description: Bad request/licenses/check:\n    get:\n      summary: Check a grantee(s) licenses\n      operationId: getLicenseCheck\n      description: Retrieves the capabilities the grantee(s) have access to.\n      tags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/GranteeIdsQueryParam'\n        - $ref: '#/components/parameters/ProductUuidQueryParam'\n        - $ref: '#/components/parameters/GraceQueryParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseCheck'\n        \"204\":\n          description: No licenses found for grantees\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n\n  /licenses/purchaser:\n    get:\n      summary: Get licenses by purchaser\n      operationId: getLicensesByPurchaser\n      description: Retrieves an array of licenses for a purchaser\n      tags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/ProductUuidQueryParam'\n        - $ref: '#/components/parameters/LicenseStatusQueryParam'\n        - $ref: '#/components/parameters/PurchaserQueryParam'\n      responses:\n        '200':\n          description: An array of licenses for a specific purchaser\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LicenseByPurchaser'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt provides specific API endpoint details for managing licenses, such as canceling licenses and checking grantees' access, within the broader context of Salable's API documentation designed for developers to effectively integrate and manage their SaaS subscription services.",
    "indexed_at": 1745322772.6649039
  },
  "excerpt_id_8f76cec6c3c5c205e09868b54019ae7b": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 67,
    "excerpt": "  type: array\n                items:\n                  $ref: '#/components/schemas/LicenseByPurchaser'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/licenses/granteeId/{granteeId}:\n    get:\n      summary: Get licenses by granteeId\n      operationId: getLicensesByGranteeId\n      description: Retrieves a list of licenses for a grantee\n      tags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/GranteeIdPathParam'\n        - name: expand\n          in: query\n          description: Parameters to expand in the response\n          required: false\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - subscription\n                - plan.currencies.currency\n                - plan.currencies\n                - plan.features\n                - plan\n                - product.currencies\n                - product.organisationPaymentIntegration\n                - product\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/License'\n        '204':\n          description: No licenses returned for grantee\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt details the API endpoints for retrieving licenses associated with a specific grantee, highlighting the operational flow relevant to managing user access and permissions within the broader context of Salable's API for subscription and licensing management.",
    "indexed_at": 1745322772.664951
  },
  "excerpt_id_a8a1a1f7699cb50324dc4207ba11c6e6": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 68,
    "excerpt": " '#/components/schemas/License'\n        '204':\n          description: No licenses returned for grantee\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/licenses/cancel:\n    post:\n      summary: Cancel many ad hoc licenses\n      operationId: cancelLicenses\n      description: |\n        Cancels ad hoc Licenses with using an array of licenseUuids.\n        \n        Does not cancel subscription, only use for canceling ad hoc licenses.\n      tags:\n        - Licenses\n      security:\n        - apiKey: [ \"licenses:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                uuids:\n                  type: array\n                  items:\n                    type: string\n                  description: UUIDs of the Licenses which are being canceled\n            example:\n              uuids:\n                - \"674e7460-8eea-48b1-a795-2705d0e38ff4\"\n                - \"eb6424b2-4cb3-4812-85a4-25acab877109\"\n      responses:\n        '204':\n          description: Successfully canceled licenses, no content returned\n        \"400\":\n          description: Bad request",
    "summary": "The excerpt detailing the license cancellation process highlights the functionality within the Salable API for managing licenses, emphasizing its role in supporting SaaS businesses by allowing for streamlined control over license management, thereby aligning with the broader context of the full-document's focus on SaaS product pricing and subscription management.",
    "indexed_at": 1745322772.664999
  },
  "excerpt_id_ce43f56f1c477d0c5bb726334f2a714d": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 69,
    "excerpt": "   - \"eb6424b2-4cb3-4812-85a4-25acab877109\"\n      responses:\n        '204':\n          description: Successfully canceled licenses, no content returned\n        \"400\":\n          description: Bad request/subscriptions:\n    get:\n      summary: Get subscriptions\n      operationId: getSubscriptions\n      description: Retrieves a list of all subscriptions.\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"subscriptions:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionStatusQueryParam'\n        - $ref: '#/components/parameters/SubscriptionEmailQueryParam'\n        - $ref: '#/components/parameters/CursorQueryParam'\n        - $ref: '#/components/parameters/CursorTakeQueryParam'\n        - $ref: '#/components/parameters/ExpandGetAllSubscriptionQueryParams'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CursorPaginationSubscriptionsResponse'\n        \"400\":\n          description: Bad request\n\n  /subscriptions/{subscriptionUuid}:\n    get:\n      summary: Get a subscription\n      operationId: getSubscriptionByUuid\n      description: |\n        Retrieves the subscription data based on the UUID.\n        By default, the response does not contain any relational data. If you want to expand the relational data, you can do so with the `expand` query parameter.\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"subscriptions:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n        - $ref: '#/components/parameters/ExpandSubscriptionQueryParams'\n      responses:\n        '200':\n          description: The subscription data\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt highlights the functionality for canceling licenses and retrieving subscriptions, showcasing how Salable API enables seamless management of user access and subscription data within its broader framework for SaaS businesses.",
    "indexed_at": 1745322772.665051
  },
  "excerpt_id_e71e21c92a42f2bc62641e1f5a2e6ea4": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 70,
    "excerpt": "     application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/subscriptions/{subscriptionUuid}/change-plan:\n    put:\n      summary: Change a Subscription's Plan\n      operationId: changeSubscriptionsPlan\n      description: |\n        Changes a subscription's plan based on UUID. If the subscription is usage based the requested subscription will be canceled and a new subscription will be created on the plan you are changing to.\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"subscriptions:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                planUuid:\n                  format: uuid\n                  type: string\n                  description: The UUID of the Plan to which the Subscription will be moved to\n                proration:\n                  type: string\n                  default: create_prorations\n                  enum:\n                    - create_prorations\n                    - none\n                    - always_invoice\n                  description: |\n                    The proration behaviour when moving the Subscription to a different Plan. Note this will only be applicable for subscription's that are not usage based.\n                    - create_prorations: Will cause proration invoice items to be created when applicable.\n                    - none: Disable creating prorations in this request.\n                    - always_invoice: Always invoice immediately for prorations.\n              required:\n                - planUuid\n              example:\n                planUuid: 31b83d94-26cd-415b-b46d-d17287e12be9\n                proration: create_prorations\n      responses:\n        '202':\n          description: Request has been accepted",
    "summary": "The excerpt details the process for changing a subscription plan within the Salable API, emphasizing how this action interacts with existing subscriptions, especially regarding proration and the necessity of using the UUID for the targeted plan, thereby aligning with the broader context of managing subscriptions and licensing in the API documentation.",
    "indexed_at": 1745322772.665096
  },
  "excerpt_id_b1d2738b03f9bf7cb6dfff25e258ca3d": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 71,
    "excerpt": "   example:\n                planUuid: 31b83d94-26cd-415b-b46d-d17287e12be9\n                proration: create_prorations\n      responses:\n        '202':\n          description: Request has been accepted/subscriptions/{subscriptionUuid}/invoices:\n    get:\n      summary: Get subscription invoices\n      operationId: getSubscriptionInvoices\n      description: Retrieves a list of invoices for a subscription\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"billing:read\" ]\n        - sessionToken: [ \"web-components:invoices\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      responses:\n        '200':\n          description: Paginated invoices\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StripeInvoice'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n\n  /subscriptions/{subscriptionUuid}/updateplan/listplans:\n    get:\n      summary: Get plans that a subscribed user can switch to\n      operationId: getSubscriptionUpdatablePlans\n      description: Retrieves a list of available plans that a subscribed user can switch to\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"subscriptions:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      responses:\n        '200':\n          description: List of plans that a subscribed user can switch to\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SubscriptionUpdatablePlan'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt details the API operations related to managing subscription plans and invoices, which are integral parts of the Salable API's broader functionality for handling SaaS business pricing models, subscriptions, and licensing management.",
    "indexed_at": 1745322772.665143
  },
  "excerpt_id_13b3dbccbbb6cd85a73bac2b969cef00": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 72,
    "excerpt": " array\n                items:\n                  $ref: '#/components/schemas/SubscriptionUpdatablePlan'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/subscriptions/{subscriptionUuid}/cancel:\n    put:\n      summary: Cancel a subscription\n      description: |\n        Cancels a subscription by providing the `subscriptionUuid`\n        It will cancel immediately or at the end of the Subscription based on value of the `when` query parameter.\n      operationId: cancelSubscription\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"subscriptions:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n        - $ref: '#/components/parameters/CancelWhenQueryParam'\n      responses:\n        '204':\n          description: The subscription was canceled successfully.\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt describes the API functionality related to canceling a subscription and retrieving updatable plans, which illustrates the flexibility and management capabilities of the Salable API within the broader context of subscription management for SaaS businesses.",
    "indexed_at": 1745322772.6651862
  },
  "excerpt_id_dea2ce01563f98c7a4320c03581eb4ed": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 73,
    "excerpt": "am'\n      responses:\n        '204':\n          description: The subscription was canceled successfully.\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/subscriptions/{subscriptionUuid}/updatepaymentlink:\n    get:\n      summary: Get an update payment link\n      operationId: getSubscriptionUpdatePaymentLink\n      description: |\n        Retrieves the update payment link for a specific subscription. \n        The link opens up a management portal for your payment integration that will have an option for the customer to update their payment details.\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"billing:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      responses:\n        '200':\n          description: Retrieves the stripe update payment link.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    description: The URL to update payment information\n                    type: string\n                    example: \"https://billing.stripe.com/p/session/test_YWNjdF8xS3RZbjhBNG4yM0FDU2oyLF9OeFpRRXB6SDVRRlZwQmIzY2ZTdHhmRnZBVWs1V2pj0100qMzar5GE\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt illustrates specific operations related to subscription management, emphasizing the ability to cancel subscriptions and retrieve update payment links, which are vital components of the broader Salable API documentation that focuses on managing pricing models, subscriptions, and licensing for SaaS businesses.",
    "indexed_at": 1745322772.665229
  },
  "excerpt_id_a9f412b9d897ad9489864c063036ab9a": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 74,
    "excerpt": "m/p/session/test_YWNjdF8xS3RZbjhBNG4yM0FDU2oyLF9OeFpRRXB6SDVRRlZwQmIzY2ZTdHhmRnZBVWs1V2pj0100qMzar5GE\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/subscriptions/{subscriptionUuid}/customer-portal:\n    get:\n      summary: Get a customer portal link\n      operationId: getSubscriptionCustomerPortalLink\n      description: |\n        Retrieves the customer portal link for a subscription.\n        The link opens up a subscription management portal for your payment integration that will have an options for the customer to manage their subscription.\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"billing:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      responses:\n        '200':\n          description: Returns the Stripe customer portal link.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    type: string\n                    description: The URL of the customer portal.\n                    example: 'https://billing.stripe.com/p/session/test_YWNjdF8xS3RZbjhBNG4yM0FDU2oyLF9OeGFlTkJvU2QxbHNnZWJKd3U3RmpleUt2N0tuRWIx0100HscSOCYZ'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt highlights the functionality of retrieving a customer portal link for subscription management within the Salable API, emphasizing its role in enabling customers to efficiently manage their subscriptions, which aligns with the broader goal of the full document to provide comprehensive API documentation for managing subscriptions, licenses, and associated services in a SaaS context.",
    "indexed_at": 1745322772.6652741
  },
  "excerpt_id_79ba54d7da0c670cf02d0b7a721733af": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 75,
    "excerpt": "m/p/session/test_YWNjdF8xS3RZbjhBNG4yM0FDU2oyLF9OeGFlTkJvU2QxbHNnZWJKd3U3RmpleUt2N0tuRWIx0100HscSOCYZ'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/subscriptions/{subscriptionUuid}/cancelpaymentlink:\n    get:\n      summary: Get a cancel subscription link\n      description: |\n        Retrieves the cancel subscription link for a specific subscription. \n        The link opens up a subscription management portal for your payment integration that will have an option for the customer to cancel the subscription.\n      operationId: getSubscriptionCancelLink\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"billing:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      responses:\n        '200':\n          description: Retrieves the cancel subscription link successfully.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    type: string\n                    description: The cancel subscription link.\n                    example: \"https://billing.stripe.com/p/session/test_YWNjdF8xS3RZbjhBNG4yM0FDU2oyLF9OeFpRRXB6SDVRRlZwQmIzY2ZTdHhmRnZBVWs1V2pj0100qMzar5GE\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt details the functionality of retrieving a cancel subscription link within the Salable API, which is crucial for facilitating subscription management processes in the broader context of managing subscriptions, licenses, and integrations within the Salable platform.",
    "indexed_at": 1745322772.665322
  },
  "excerpt_id_74eaeb5c7a9cf5083cbb5d0992d76b2a": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 76,
    "excerpt": "m/p/session/test_YWNjdF8xS3RZbjhBNG4yM0FDU2oyLF9OeFpRRXB6SDVRRlZwQmIzY2ZTdHhmRnZBVWs1V2pj0100qMzar5GE\"\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/subscriptions/{subscriptionUuid}/payment-method:\n    get:\n      summary: Get payment method\n      description: Retrieves the payment method used to pay for a subscription.\n      operationId: getSubscriptionPaymentMethod\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"billing:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      responses:\n        '200':\n          description: Retrieves the payment method successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StripePaymentMethod'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n\n  /subscriptions/{subscriptionUuid}/reactivate:\n    put:\n      summary: Reactivate a Subscription\n      description: Reactivate a Subscription's scheduled cancellation before the billing period has passed. If the billing period has passed and the Subscription has already been canceled please create a new Subscription.\n      operationId: getSubscriptionReactivate\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"subscriptions:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      responses:\n        '204':\n          description: Successfully reactivated the subscription.\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt illustrates the API endpoints related to subscription management, detailing methods for retrieving payment methods and reactivating subscriptions, which are essential for effectively managing subscription lifecycles within the broader Salable API framework designed for SaaS businesses.",
    "indexed_at": 1745322772.665371
  },
  "excerpt_id_79bb016d7d8a4e8d44fb9e5cd261a5ab": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 77,
    "excerpt": "ram'\n      responses:\n        '204':\n          description: Successfully reactivated the subscription.\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/subscriptions/{subscriptionUuid}/seats:\n    post:\n      summary: Increment quantity of seats on a subscription.\n\ndescription: Incrementing will create unassigned licenses.\n\noperationId: incrementSubscriptionSeats\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"licenses:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - increment\n              properties:\n                increment:\n                  type: integer\n                  description: The number of seats to increment.\n\nproration:\n                  type: string\n                  default: create_prorations\n                  enum:\n                    - create_prorations\n                    - none\n                    - always_invoice\n                  description: |\n                    The proration behaviour when moving the Subscription to a different Plan\n                    - create_prorations: Will cause proration invoice items to be created when applicable.\n\n- none: Disable creating prorations in this request.\n\n- always_invoice: Always invoice immediately for prorations.\n\nresponses:\n        '202':\n          description: Request has been accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventResponse'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n    put:\n      summary: Decrement quantity of seats on a subscription.\n\ndescription: Decrementing will only remove unassigned licenses.",
    "summary": "The excerpt highlights critical API endpoints for managing subscriptions, specifically for incrementing and decrementing the number of seats, which ties into the broader context of managing licenses and user access within the Salable API framework.",
    "indexed_at": 1745322772.665418
  },
  "excerpt_id_0b9474a6f5a5fdb347caada72f379c22": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 78,
    "excerpt": "ion: Bad request\n        \"404\":\n          description: Not found\n    put:\n      summary: Decrement quantity of seats on a subscription.\n\ndescription: Decrementing will only remove unassigned licenses.operationId: decrementSubscriptionSeats\n      tags:\n        - Subscriptions\n      security:\n        - apiKey: [ \"licenses:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/SubscriptionUuidPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - decrement\n              properties:\n                decrement:\n                  type: integer\n                  description: The number of seats to decrement.\n\nproration:\n                  type: string\n                  default: create_prorations\n                  enum:\n                    - create_prorations\n                    - none\n                    - always_invoice\n                  description: |\n                    The proration behaviour when moving the Subscription to a different Plan\n                    - create_prorations: Will cause proration invoice items to be created when applicable.\n\n- none: Disable creating prorations in this request.\n\n- always_invoice: Always invoice immediately for prorations.\n\nresponses:\n        '202':\n          description: Request has been accepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EventResponse'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt illustrates a specific API operation for decrementing the number of subscription seats, highlighting the associated request structure and expected responses, thereby providing a practical example within the broader context of managing subscriptions and licenses through the Salable API.",
    "indexed_at": 1745322772.665466
  },
  "excerpt_id_760444f325abfe9a14b47ad4de73095c": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 79,
    "excerpt": "    application/json:\n              schema:\n                $ref: '#/components/schemas/EventResponse'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/usage:\n    get:\n      summary: Get all usage records for grantee\n      operationId: getLicenseUsage\n      description: Retrieves all usage records for grantee's metered licenses.\n\ntags:\n        - Usage\n      security:\n        - apiKey: [ \"usage:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/UsageGranteeIdRequiredQueryParam'\n        - $ref: '#/components/parameters/UsageTypeQueryParam'\n        - $ref: '#/components/parameters/UsageStatusQueryParam'\n        - $ref: '#/components/parameters/UsagePlanUuidQueryParam'\n        - $ref: '#/components/parameters/UsageSubscriptionUuidQueryParam'\n        - $ref: '#/components/parameters/UsageSortQueryParam'\n        - $ref: '#/components/parameters/CursorQueryParam'\n        - $ref: '#/components/parameters/CursorTakeQueryParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CursorPaginationLicensesUsageRecordsResponse'\n        \"400\":\n          description: Bad request\n    put:\n      summary: Updates a license's usage\n      operationId: updateLicenseUsage\n      description: Updates the usage on a license by incrementing its value.\n\ntags:\n        - Usage\n      security:\n        - apiKey: [ \"usage:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/UniqueKey'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - planUuid\n                - granteeId\n                - countOptions\n              properties:\n                planUuid:\n                  type: string\n                  description: The uuid of the plan the license belongs to.",
    "summary": "The excerpt illustrates the API's capabilities related to usage tracking and management for licenses within the broader context of the Salable API, emphasizing the ability to retrieve usage records and update them for specific grantees.",
    "indexed_at": 1745322772.665517
  },
  "excerpt_id_6b75e0b0ccb8be642042580b0d5bc451": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 80,
    "excerpt": " granteeId\n                - countOptions\n              properties:\n                planUuid:\n                  type: string\n                  description: The uuid of the plan the license belongs to.granteeId:\n                  type: string\n                  description: The granteeId of the license.\n\ncountOptions:\n                  type: object\n                  required:\n                    - increment\n                  properties:\n                    increment:\n                      type: integer\n                      minimum: 1\n                      description: The value to increment the usage on the license.\n\nresponses:\n        '202':\n          description: Request accepted.\n\n\"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n\n  /usage/current:\n    get:\n      summary: Get current usage record for grantee on plan\n      operationId: getCurrentLicenseUsage\n      description: Retrieves the current usage record for a metered license.\n      tags:\n        - Usage\n      security:\n        - apiKey: [ \"usage:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/UsagePlanUuidRequiredQueryParam'\n        - $ref: '#/components/parameters/UsageGranteeIdRequiredQueryParam'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseCurrentUsage'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt outlines parameters and response structures for retrieving and updating usage records related to licenses, which are essential functionalities within the broader context of the Salable API aimed at managing subscriptions and licenses efficiently for SaaS businesses.",
    "indexed_at": 1745322772.6655612
  },
  "excerpt_id_7c997969594a4417e475afa3bf6edfa2": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 81,
    "excerpt": "plication/json:\n              schema:\n                $ref: '#/components/schemas/LicenseCurrentUsage'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/sessions:\n    post:\n      summary: Create a new session\n      operationId: createSession\n      description: Creates a new session to use with the Salable web components\n      tags:\n        - Sessions\n      security:\n        - apiKey: [ \"sessions:write\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/SessionCreateInvoiceRequest'\n                - $ref: '#/components/schemas/SessionCreatePricingTableRequest'\n                - $ref: '#/components/schemas/SessionCreateCheckoutRequest'\n\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                properties:\n                  sessionToken:\n                    type: string\n                    description: The session token to use with the requested web component\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not found\n\n  /events/{eventUuid}:\n    get:\n      summary: Get a event\n      operationId: getEventByUuid\n      description: |\n        Retrieves an event by its UUID. Events keep track of the progress of asynchronous tasks which rely on receiving webhooks or additional processing to complete.\n      tags:\n        - Events\n      security:\n        - apiKey: [ \"events:read\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/EventUuidPathParam'\n      responses:\n        '200':\n          description: Returns the event information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n        \"404\":\n          description: Not found",
    "summary": "The excerpt highlights specific API operations related to managing sessions and events, illustrating the Salable API's functionality for creating user sessions, retrieving event data, and handling error responses, which collectively enhance the broader context of providing comprehensive tools for SaaS businesses to manage subscriptions, licenses, and user interactions effectively.",
    "indexed_at": 1745322772.665605
  },
  "excerpt_id_39737808dc86383e52da4e4e8f531f84": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 82,
    "excerpt": " Returns the event information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n        \"404\":\n          description: Not found/pricing-tables/{pricingTableUuid}:\n    get:\n      summary: Get a pricing table\n      operationId: getPricingTableByUuid\n      description: Retrieves a pricing table by its UUID. This returns all necessary data on a Pricing Table to be able to display it.\n      tags:\n        - Pricing Tables\n      security:\n        - apiKey: [ \"pricing-tables:read\" ]\n        - sessionToken: [ \"web-components:pricing-table\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n        - $ref: '#/components/parameters/PricingTableUuidPathParam'\n        - $ref: '#/components/parameters/GranteeIdPricingTableQueryParamRequired'\n        - $ref: '#/components/parameters/CurrencyQueryParam'\n      responses:\n        '200':\n          description: Successfully retrieved the specified pricing table\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PricingTable'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found",
    "summary": "The excerpt illustrates specific API response and functionality related to retrieving event and pricing table information, highlighting the structured approach of Salable API for handling queries and responses in the context of subscription management for SaaS businesses.",
    "indexed_at": 1745322772.6656551
  },
  "excerpt_id_9e3c4ee6fe31f601518bdf39efc0a35c": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 83,
    "excerpt": "     application/json:\n              schema:\n                $ref: '#/components/schemas/PricingTable'\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found/checkout/create-subscription:\n    post:\n      summary: Create a Stripe subscription with a payment intent\n      operationId: checkoutCreateSubscription\n      description: |\n        Creates a Stripe subscription with an `incomplete` status and returns the `latest_invoice.payment_intent.client_secret` necessary for Stripe Elements and Salable Checkout component. \n        This status changes to `active` once a payment method is successfully processed.\n      tags:\n        - Checkout\n      security:\n        - apiKey: [ \"subscriptions:write\" ]\n        - sessionToken: [ \"web-components:checkout\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckoutCreateSubscriptionRequest'\n      responses:\n        '200':\n          description: Stripe subscription successfully created. Returns the client secret for use in the checkout component\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckoutCreateSubscriptionResponse'\n        \"404\":\n          description: Not found\n        \"400\":\n          description: Bad request",
    "summary": "The excerpt on creating a Stripe subscription and handling requests using specific JSON schemas exemplifies the broader context of the Salable API documentation, which focuses on enabling SaaS businesses to efficiently manage their subscriptions, pricing, and licensing through detailed API endpoints and structured responses.",
    "indexed_at": 1745322772.665698
  },
  "excerpt_id_345dcdd4fa34a8752aab5b7cd64c6aab": {
    "doc_id": "doc_6f1deb859fc04b257b670cd73eecaf73",
    "doc_order_index": 84,
    "excerpt": "\n              schema:\n                $ref: '#/components/schemas/CheckoutCreateSubscriptionResponse'\n        \"404\":\n          description: Not found\n        \"400\":\n          description: Bad request/checkout/create-intent:\n    post:\n      summary: Create a Stripe Setup Intent\n      operationId: checkoutCreateIntent\n      description: |\n        Creates a Stripe Setup Intent and returns the `clientSecret` required for use with Stripe Elements and the Salable Checkout component. \n      tags:\n        - Checkout\n      security:\n        - sessionToken: [ \"web-components:checkout\" ]\n      parameters:\n        - $ref: '#/components/parameters/VersionHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckoutCreateIntentRequest'\n      responses:\n        '201':\n          description: Stripe setup intent successfully created. Returns the client secret for use in the Salable Checkout component\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckoutCreateIntentResponse'\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not found",
    "summary": "The excerpt outlines the process for creating a Stripe Setup Intent within the Salable API's checkout functionality, emphasizing its integration with payment processing and the retrieval of necessary client secrets, which is essential for managing user payments and subscriptions in the broader context of the API's overall purpose of simplifying pricing, licensing, and subscription management for SaaS businesses.",
    "indexed_at": 1745322772.6657448
  }
}